import {
  Kt,
  Z,
  nn,
  te,
  walletEntryPlugin
} from "./chunk-QHFOOEJW.js";
import "./chunk-52K3MTCP.js";
import {
  AuthCoreEvent,
  getUserInfo,
  isConnected,
  za
} from "./chunk-5K5SNHHZ.js";
import "./chunk-TL65SHMZ.js";
import "./chunk-XTL3VBNC.js";
import "./chunk-6SATDP2A.js";
import "./chunk-OKCYEHW4.js";
import "./chunk-YM32VLGM.js";
import "./chunk-E7F3KV4Y.js";
import "./chunk-WN444VHT.js";
import "./chunk-IXJJAVWB.js";
import "./chunk-GEJW2VKU.js";
import "./chunk-4YCFGIGR.js";
import "./chunk-XBOBPJUC.js";
import "./chunk-ZNXRVEFR.js";
import "./chunk-7Z7TKVC7.js";
import "./chunk-5JEUK2R2.js";
import "./chunk-QUUJLUTV.js";
import "./chunk-E4YFJ4DO.js";
import "./chunk-ZFG3MDGT.js";
import "./chunk-ZS6JYA4T.js";
import "./chunk-THPC5MR7.js";
import {
  require_react
} from "./chunk-YVDZNGKE.js";
import {
  __toESM
} from "./chunk-IKJM6GHQ.js";

// node_modules/@particle-network/auth-core-modal/esm/iframeWalletPlugin-T6U7NARW.js
var import_react = __toESM(require_react(), 1);
"use client";
var O = () => {
  let { provider: c } = Kt(), { wallet: r } = nn(), { openAccountAndSecurity: i } = Z(), { modalOptions: e } = za(), { connected: l } = te(), a = (0, import_react.useCallback)(async (n) => {
    if (n === "open-account-and-security")
      i();
    else if (n === "get-user-info")
      return getUserInfo();
  }, [i]);
  return (0, import_react.useEffect)(() => {
    var d, p;
    let n = { ...e.wallet, erc4337: e.erc4337, language: e.language };
    walletEntryPlugin.init({ projectId: e.projectId, clientKey: e.clientKey, appId: e.appId }, n);
    let u = () => {
      walletEntryPlugin.walletEntryCreate();
    }, s = () => {
      walletEntryPlugin.walletEntryDestroy();
    };
    return typeof window != "undefined" && ((d = window.particleAuth) == null || d.on(AuthCoreEvent.ParticleAuthDisconnect, s), (p = window.particleAuth) == null || p.on(AuthCoreEvent.ParticleAuthConnect, u)), isConnected() && walletEntryPlugin.walletEntryCreate(), () => {
      var f, w;
      typeof window != "undefined" && ((f = window.particleAuth) == null || f.off(AuthCoreEvent.ParticleAuthDisconnect, s), (w = window.particleAuth) == null || w.off(AuthCoreEvent.ParticleAuthConnect, u));
    };
  }, [e.projectId, e.clientKey, e.appId, e.wallet, e.erc4337, e.language]), (0, import_react.useEffect)(() => {
    l && walletEntryPlugin.setWalletCore({ ethereum: c, solana: r }, a);
  }, [l, c, r, a]), import_react.default.createElement("div", { id: "auth-core-modal-wallet-plugin", style: { display: "none" } }, "Wallet Plugin");
};
var W = O;
export {
  W as default
};
//# sourceMappingURL=iframeWalletPlugin-T6U7NARW-GRZ3BD3H.js.map
