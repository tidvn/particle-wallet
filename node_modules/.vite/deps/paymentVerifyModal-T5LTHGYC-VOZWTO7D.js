import {
  Q
} from "./chunk-GB7HPUPG.js";
import "./chunk-LGSFMKB7.js";
import "./chunk-HFPUBT3M.js";
import "./chunk-QHFOOEJW.js";
import "./chunk-52K3MTCP.js";
import {
  ApiError,
  Be,
  Fa,
  ee,
  useRequest_default,
  useTranslation,
  verifyPaymentPassword
} from "./chunk-5K5SNHHZ.js";
import "./chunk-TL65SHMZ.js";
import "./chunk-XTL3VBNC.js";
import "./chunk-6SATDP2A.js";
import "./chunk-OKCYEHW4.js";
import "./chunk-YM32VLGM.js";
import "./chunk-E7F3KV4Y.js";
import "./chunk-WN444VHT.js";
import "./chunk-IXJJAVWB.js";
import "./chunk-GEJW2VKU.js";
import "./chunk-4YCFGIGR.js";
import "./chunk-XBOBPJUC.js";
import "./chunk-ZNXRVEFR.js";
import "./chunk-7Z7TKVC7.js";
import "./chunk-5JEUK2R2.js";
import "./chunk-QUUJLUTV.js";
import "./chunk-E4YFJ4DO.js";
import "./chunk-ZFG3MDGT.js";
import "./chunk-ZS6JYA4T.js";
import "./chunk-THPC5MR7.js";
import {
  require_react
} from "./chunk-YVDZNGKE.js";
import {
  __toESM
} from "./chunk-IKJM6GHQ.js";

// node_modules/@particle-network/auth-core-modal/esm/paymentVerifyModal-T5LTHGYC.js
var import_react = __toESM(require_react(), 1);
"use client";
var p = `.payment-password-drawer {
  width: 100%;
  height: 100%;
  overflow: hidden;
}
.payment-password-drawer .ant-drawer-body {
  padding-right: 0;
  padding-left: 0;
  overflow: hidden;
}
.payment-password-drawer .ant-drawer-content-wrapper {
  width: 100% !important;
}
.payment-password-drawer .ant-drawer-content .ant-drawer-wrapper-body .ant-drawer-header {
  display: none;
}
.payment-password-drawer .particle-pc-drawer .payment-verify-content {
  margin-top: 38px;
}
.payment-password-drawer .payment-verify-content {
  display: flex;
  flex-direction: column;
  align-items: center;
  height: 100%;
  margin-top: 22px;
}
.payment-password-drawer .payment-verify-content .particle-keywords-map {
  position: absolute;
}
@media (min-width: 600px) {
  .payment-password-drawer {
    position: absolute;
  }
}
`;
var A = ({ props: t }) => {
  let { setPaymentVerify: o, setWrongPassword: s } = Fa(), { t: n } = useTranslation(), [i, r] = (0, import_react.useState)(""), { authCoreModal: g } = ee();
  (0, import_react.useEffect)(() => {
    t.visible && r("");
  }, [t.visible]);
  let { loading: d, run: v } = useRequest_default(verifyPaymentPassword, { manual: true, onSuccess: (e, l) => {
    var m;
    o({ visible: false }), (m = t.onVerifyCompleted) == null || m.call(t, i);
  }, onError: (e) => {
    if (r(""), (e == null ? void 0 : e.error_code) === ApiError.WrongPaymentPassword)
      s({ visible: true });
    else if ((e == null ? void 0 : e.error_code) === ApiError.SecurityAccountFrozen) {
      let l = e.extra.seconds || 0;
      s({ visible: true, accountFrozen: { seconds: l } });
    }
  } }), b = () => {
    var e;
    if (d)
      return false;
    o({ visible: false }), (e = t.onVerifyFailed) == null || e.call(t, n("common.cancel"));
  }, h = (e) => {
    r(e), e.length === 6 && v(e);
  };
  return import_react.default.createElement(import_react.default.Fragment, null, import_react.default.createElement("style", null, p), import_react.default.createElement(Be, { visible: t.visible, placement: "bottom", height: 421, closable: false, maskClosable: false, onClose: b, className: "payment-password-drawer", title: t.type === "close" ? n("account.close_payment_password") : n("account.payment_password"), forceRender: true, getContainer: () => g.rootBody }, import_react.default.createElement("div", { className: "content payment-verify-content" }, import_react.default.createElement(Q, { onChange: h, value: i, keyboardInvisible: d }))));
};
var T = A;
export {
  T as default
};
//# sourceMappingURL=paymentVerifyModal-T5LTHGYC-VOZWTO7D.js.map
