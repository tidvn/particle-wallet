import {
  w
} from "./chunk-TEXHGKQR.js";
import {
  x
} from "./chunk-3KDTPZMW.js";
import {
  i0
} from "./chunk-LGSFMKB7.js";
import {
  N
} from "./chunk-HFPUBT3M.js";
import "./chunk-QHFOOEJW.js";
import "./chunk-52K3MTCP.js";
import {
  Na,
  button_default,
  deleteAuthorizationDApp,
  ee,
  modal_default,
  useTranslation
} from "./chunk-5K5SNHHZ.js";
import "./chunk-TL65SHMZ.js";
import "./chunk-XTL3VBNC.js";
import "./chunk-6SATDP2A.js";
import "./chunk-OKCYEHW4.js";
import "./chunk-YM32VLGM.js";
import "./chunk-E7F3KV4Y.js";
import "./chunk-WN444VHT.js";
import "./chunk-IXJJAVWB.js";
import "./chunk-GEJW2VKU.js";
import "./chunk-4YCFGIGR.js";
import "./chunk-XBOBPJUC.js";
import "./chunk-ZNXRVEFR.js";
import "./chunk-7Z7TKVC7.js";
import "./chunk-5JEUK2R2.js";
import "./chunk-QUUJLUTV.js";
import "./chunk-E4YFJ4DO.js";
import "./chunk-ZFG3MDGT.js";
import "./chunk-ZS6JYA4T.js";
import "./chunk-THPC5MR7.js";
import {
  require_react
} from "./chunk-YVDZNGKE.js";
import {
  __toESM
} from "./chunk-IKJM6GHQ.js";

// node_modules/@particle-network/auth-core-modal/esm/deviceDetails-ME4BAHQX.js
var import_react = __toESM(require_react(), 1);
"use client";
var g = `.device-details-wrapper {
  -webkit-overflow-scrolling: touch;
  height: 100%;
}
.device-details-container {
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 100%;
  overflow: auto;
  color: var(--text-color);
}
.device-details-container .scroll-wrapper {
  flex: 1;
  overflow: auto;
}
.device-details-container .details-list {
  padding: 0 18px;
  padding-bottom: 50px;
  margin-top: 20px;
}
.device-details-container .details-list .item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  height: 58px;
  padding: 0 12px 0 14px;
  margin-bottom: 10px;
  border-radius: var(--card-border-radius);
  background: var(--card-unclickable-background-color);
}
.device-details-container .details-list .item .right {
  font-weight: 400;
  font-size: 12px;
}
.device-details-container .btns {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  padding: 0 18px;
  background: var(--theme-background-color);
}
.device-details-container .btns .confirm-delete-btn {
  width: 100%;
  max-width: 360px;
  height: 46px;
  padding: 0;
  line-height: 46px;
}
.delete-confirm-modal .ant-modal-confirm-btns,
.delete-confirm-modal .anticon-exclamation-circle {
  display: none;
}
.delete-confirm-modal .ant-modal-confirm-content {
  margin: 0 !important;
}
.delete-confirm-modal .ant-modal-body {
  position: relative;
  padding: 26px 18px;
}
.delete-confirm-modal .content-text {
  margin-top: 40px;
  margin-bottom: 34px;
  font-weight: 500;
  font-size: 20px;
  text-align: center;
  color: var(--text-color);
}
.delete-confirm-modal .close-btn {
  position: absolute;
  top: 10px;
  right: 16px;
  font-size: 30px;
}
.delete-confirm-modal .btns {
  display: flex;
  gap: 20px;
  justify-content: space-between;
}
.delete-confirm-modal .btns button {
  flex: 1;
  height: 46px;
}
.delete-confirm-modal .btns button.cancel-btn {
  color: var(--text-color);
  background: var(--secondary-btn-background-color);
}
@media (max-width: 767px) {
  .delete-confirm-modal .ant-modal {
    max-width: calc(100vw - 36px);
    margin: 8px auto;
  }
}
`;
var A = (N2) => {
  var n, r, m, c;
  let { loginDeviceInfo: t } = N2, { t: i } = useTranslation(), w2 = Na(), { authCoreModal: y } = ee(), [_, d] = (0, import_react.useState)(false), [k, s] = (0, import_react.useState)(false), M = () => {
    d(true);
  }, C = x(), o = () => {
    d(false);
  };
  return import_react.default.createElement("div", { className: "device-details-wrapper" }, import_react.default.createElement("style", null, g), import_react.default.createElement("div", { className: "device-details-container" }, import_react.default.createElement(w, { displayBackBtn: true }, i("new.details")), import_react.default.createElement("div", { className: "scroll-wrapper" }, import_react.default.createElement("div", { className: "details-list" }, import_react.default.createElement("div", { className: "item" }, import_react.default.createElement("div", { className: "left" }, i("new.app")), import_react.default.createElement("div", { className: "right" }, t.project_app_name || "-")), import_react.default.createElement("div", { className: "item" }, import_react.default.createElement("div", { className: "left" }, i("new.device")), import_react.default.createElement("div", { className: "right" }, t.device || "-")), import_react.default.createElement("div", { className: "item" }, import_react.default.createElement("div", { className: "left" }, i("new.authorized_time")), import_react.default.createElement("div", { className: "right" }, t.updated_at || "-")), import_react.default.createElement("div", { className: "item" }, import_react.default.createElement("div", { className: "left" }, i("new.login_method")), import_react.default.createElement("div", { className: "right" }, (t.login_channel || "-").replace("Twitterv1", "Twitter"))), import_react.default.createElement("div", { className: "item" }, import_react.default.createElement("div", { className: "left" }, i("new.ip")), import_react.default.createElement("div", { className: "right" }, ((n = t == null ? void 0 : t.location) == null ? void 0 : n.ip) || "-")), import_react.default.createElement("div", { className: "item" }, import_react.default.createElement("div", { className: "left" }, i("new.country")), import_react.default.createElement("div", { className: "right" }, ((r = t == null ? void 0 : t.location) == null ? void 0 : r.country_name) || ((m = t == null ? void 0 : t.location) == null ? void 0 : m.country_code) || "-")), import_react.default.createElement("div", { className: "item" }, import_react.default.createElement("div", { className: "left" }, i("new.city")), import_react.default.createElement("div", { className: "right" }, ((c = t == null ? void 0 : t.location) == null ? void 0 : c.city) || "-")))), import_react.default.createElement("div", { className: "btns" }, import_react.default.createElement(button_default, { className: "still-confirm confirm-delete-btn", disabled: t.isCurrent, onClick: () => {
    M();
  } }, i("new.delete_access"))), import_react.default.createElement(modal_default, { className: "delete-confirm-modal", open: _, closable: false, footer: null, centered: true, getContainer: () => y.rootBody }, import_react.default.createElement("div", { className: "content-wrap" }, import_react.default.createElement("div", { className: "close-btn", onClick: () => {
    o();
  } }, import_react.default.createElement(i0, { className: "circle_close", name: "circle_close" })), import_react.default.createElement("div", { className: "content-text" }, i("new.delete_access_to_n").format(t == null ? void 0 : t.project_app_name, t == null ? void 0 : t.device)), import_react.default.createElement("div", { className: "btns" }, import_react.default.createElement(button_default, { className: "cancel-btn", onClick: () => {
    o();
  } }, i("common.cancel")), import_react.default.createElement(button_default, { className: "still-confirm delete-btn", loading: k, onClick: () => {
    s(true), setTimeout(() => {
      deleteAuthorizationDApp(t == null ? void 0 : t.project_app_uuid).finally(() => {
        s(false);
      }).then((a) => {
        a && (o(), setTimeout(() => {
          w2(-1);
        }, 500));
      }).catch((a) => {
        C.error(a.message);
      });
    }, 500);
  } }, i("new.delete"))))), import_react.default.createElement(N, { className: "footer-box-v2" })));
};
var O = A;
export {
  O as default
};
//# sourceMappingURL=deviceDetails-ME4BAHQX-E3BP7PNQ.js.map
