import {
  j,
  z
} from "./chunk-3IHPIA4A.js";
import {
  getCountryFlag,
  r,
  t
} from "./chunk-5UENKOAW.js";
import {
  w
} from "./chunk-TEXHGKQR.js";
import "./chunk-SBZW2YII.js";
import {
  x
} from "./chunk-3KDTPZMW.js";
import "./chunk-LGSFMKB7.js";
import {
  N
} from "./chunk-HFPUBT3M.js";
import {
  ie
} from "./chunk-QHFOOEJW.js";
import "./chunk-52K3MTCP.js";
import {
  AuthType,
  DownOutlined_default,
  Fa,
  Na,
  bt,
  button_default,
  checkHasBoundLoginPhoneOrEmail,
  ee,
  form_default,
  input_default,
  input_number_default,
  isValidPhoneNumber,
  modal_default,
  parsePhoneNumberWithError,
  useClickAway,
  useRequest_default,
  useThrottleFn_default,
  useTranslation
} from "./chunk-5K5SNHHZ.js";
import "./chunk-TL65SHMZ.js";
import "./chunk-XTL3VBNC.js";
import "./chunk-6SATDP2A.js";
import "./chunk-OKCYEHW4.js";
import "./chunk-YM32VLGM.js";
import "./chunk-E7F3KV4Y.js";
import "./chunk-WN444VHT.js";
import "./chunk-IXJJAVWB.js";
import "./chunk-GEJW2VKU.js";
import "./chunk-4YCFGIGR.js";
import "./chunk-XBOBPJUC.js";
import "./chunk-ZNXRVEFR.js";
import "./chunk-7Z7TKVC7.js";
import "./chunk-5JEUK2R2.js";
import "./chunk-QUUJLUTV.js";
import "./chunk-E4YFJ4DO.js";
import "./chunk-ZFG3MDGT.js";
import "./chunk-ZS6JYA4T.js";
import "./chunk-THPC5MR7.js";
import {
  require_react
} from "./chunk-YVDZNGKE.js";
import {
  __toESM
} from "./chunk-IKJM6GHQ.js";

// node_modules/@particle-network/auth-core-modal/esm/loginAccountBind-BRJ7L6YQ.js
var import_react = __toESM(require_react(), 1);
var import_react2 = __toESM(require_react(), 1);
"use client";
var nn = `.phone-input-item-container {
  position: relative;
  display: block;
  width: 100%;
  height: auto;
  overflow: initial;
}
.phone-input-item-container .ant-input-affix-wrapper,
.phone-input-item-container .ant-input-number-group-wrapper {
  width: 100%;
  padding: 0;
  border: 1px solid var(--input-border-color) !important;
  border-radius: var(--primary-btn-border-radius);
  line-height: 47px;
  background: var(--input-background-color) !important;
  box-shadow: none !important;
}
.phone-input-item-container .ant-input-affix-wrapper .ant-input-number-group-addon,
.phone-input-item-container .ant-input-number-group-wrapper .ant-input-number-group-addon {
  position: initial;
  border: none;
  background-color: var(--input-background-color);
  border-end-start-radius: var(--primary-btn-border-radius);
  border-start-start-radius: var(--primary-btn-border-radius);
}
.phone-input-item-container .ant-input-affix-wrapper .ant-input-number-status-error:not(.ant-input-number-disabled, .ant-input-number-borderless).ant-input-number,
.phone-input-item-container .ant-input-number-group-wrapper .ant-input-number-status-error:not(.ant-input-number-disabled, .ant-input-number-borderless).ant-input-number,
.phone-input-item-container .ant-input-affix-wrapper .ant-input-number-status-error:not(
                .ant-input-number-disabled,
                .ant-input-number-borderless
            ).ant-input-number:hover,
.phone-input-item-container .ant-input-number-group-wrapper .ant-input-number-status-error:not(
                .ant-input-number-disabled,
                .ant-input-number-borderless
            ).ant-input-number:hover {
  border: none;
  background: none;
}
.phone-input-item-container .ant-input-affix-wrapper .ant-input-number,
.phone-input-item-container .ant-input-number-group-wrapper .ant-input-number {
  border: none;
  background: none;
}
.phone-input-item-container .ant-input-affix-wrapper .ant-input-number-focused,
.phone-input-item-container .ant-input-number-group-wrapper .ant-input-number-focused {
  box-shadow: none !important;
}
.phone-input-item-container .ant-input-affix-wrapper .ant-input-number-disabled,
.phone-input-item-container .ant-input-number-group-wrapper .ant-input-number-disabled {
  background: none;
}
.phone-input-item-container .ant-input-affix-wrapper .ant-input,
.phone-input-item-container .ant-input-number-group-wrapper .ant-input,
.phone-input-item-container .ant-input-affix-wrapper .ant-input-number-input,
.phone-input-item-container .ant-input-number-group-wrapper .ant-input-number-input {
  height: 47px;
  border: none !important;
  border-radius: 0;
  line-height: 47px;
  color: var(--text-color);
}
.phone-input-item-container .ant-input-affix-wrapper .ant-input:hover,
.phone-input-item-container .ant-input-number-group-wrapper .ant-input:hover,
.phone-input-item-container .ant-input-affix-wrapper .ant-input-number-input:hover,
.phone-input-item-container .ant-input-number-group-wrapper .ant-input-number-input:hover {
  border: none !important;
}
.phone-input-item-container .ant-input-affix-wrapper[data-focus='true'],
.phone-input-item-container .ant-input-number-group-wrapper[data-focus='true'] {
  border: 1px solid var(--accent-color) !important;
}
.phone-input-item-container .ant-input[disabled] {
  width: 100%;
  height: 47px;
  border: 1px solid var(--input-border-color);
  border-radius: var(--primary-btn-border-radius);
  color: var(--text-color);
  background-color: var(--input-background-color);
}
.phone-input-item-container .country-box {
  position: initial;
  cursor: pointer;
}
.phone-input-item-container .country-box .prefix-wrap {
  display: flex;
  color: var(--text-color);
  gap: 4px;
}
.phone-input-item-container .country-box .account-select-country-list {
  position: absolute;
  z-index: 2;
  top: 54px;
  left: 0%;
  width: 100%;
  height: 350px;
  border-radius: var(--card-border-radius) !important;
  overflow: hidden auto;
  background-color: var(--input-background-color);
}
.phone-input-item-container .country-box .account-select-country-list::-webkit-scrollbar {
  display: none;
  width: 0;
}
.phone-input-item-container .country-box .account-select-country-list .search-input-wrap .ant-input:focus {
  border: none !important;
  box-shadow: none !important;
}
.phone-input-item-container .country-box .account-select-country-list .search-input-wrap.account-select-country-item {
  padding-right: 13px;
}
.phone-input-item-container .country-box .account-select-country-list .search-input-wrap.account-select-country-item:hover {
  background: var(--input-background-color);
}
.phone-input-item-container .country-box .account-select-country-list .search-input-wrap.account-select-country-item:hover.search-input-wrap {
  background: none;
}
.phone-input-item-container .country-box .account-select-country-list .search-input-wrap .ant-input-clear-icon {
  color: var(--text-color);
}
.phone-input-item-container .country-box .account-select-country-list .search-input-wrap .ant-input-affix-wrapper {
  border-color: var(--keyword-border-color) !important;
}
.phone-input-item-container .country-box .account-select-country-list .search-input-wrap .ant-input-suffix {
  position: relative;
  right: 10px;
}
.phone-input-item-container .country-box .account-select-country-list .search-input-wrap .search-input {
  width: 100%;
  height: 32px;
  border-radius: var(--primary-btn-border-radius);
  overflow: hidden;
  color: var(--text-color);
  background-color: var(--input-background-color);
}
.phone-input-item-container .country-box .account-select-country-list .search-input-wrap .search-input .ant-input {
  width: 100%;
  height: auto;
  padding-top: 4px;
  padding-bottom: 4px;
  line-height: initial;
}
.phone-input-item-container .country-box .account-select-country-list .no-data {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 160px;
  color: var(--text-color);
}
.phone-input-item-container .country-box .account-select-country-list .account-select-country-item {
  position: relative;
  display: flex;
  justify-content: space-between;
  align-items: center;
  box-sizing: border-box;
  height: 47px;
  padding: 5px 0 5px 13px;
  margin: 0;
  border-bottom: 1px solid var(--keyword-border-color);
  font-size: 14px;
  color: var(--text-color);
  cursor: pointer;
}
.phone-input-item-container .country-box .account-select-country-list .account-select-country-item:hover {
  background-color: var(--keyword-border-color);
}
.phone-input-item-container .country-box .account-select-country-list .account-select-country-item div {
  display: flex;
  max-width: 80%;
  margin-right: 13px;
}
.phone-input-item-container .country-box input[type='number']::-webkit-inner-spin-button,
.phone-input-item-container .country-box input[type='number']::-webkit-outer-spin-button {
  appearance: none;
  margin: 0;
}
.phone-input-item-container .country-box.phone {
  display: flex;
  align-items: center;
}
.phone-input-item-container .country-box .account-select-opt {
  display: flex;
  flex-shrink: 0;
  justify-content: center;
  align-items: center;
  width: 40px;
  height: 100%;
  padding-right: 4px;
  padding-left: 4px;
  cursor: pointer;
}
.phone-input-item-container .country-box .account-select-opt .account-select-icon {
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  font-size: 15px;
}
.phone-input-item-container .country-box .account-select-opt .down-more {
  margin-left: 6px;
  font-size: 10px;
}
.phone-input-item-container .country-box span {
  flex-shrink: 0;
  margin: 0;
  font-size: 15px;
}
.phone-input-item-container .country-box .country-name {
  flex: 1;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.phone-input-item-container .country-box input {
  flex-shrink: 1;
  box-sizing: border-box;
  width: 100%;
  height: 45px;
  padding: 0 15px;
  border: none;
  outline: none;
  font-weight: 400;
  font-size: 15px;
  line-height: 45px;
  color: var(--text-color);
  background-color: transparent;
}
`;
var bn = (a) => {
  let s = a.form, e = form_default.useWatch(a.name, s), [b, c] = (0, import_react2.useState)(["United States", "us", "1"]), { t: u } = useTranslation(), [g, x2] = (0, import_react2.useState)(false), r2 = (0, import_react2.useRef)(), T = (0, import_react2.useRef)(), [w2, h] = (0, import_react2.useState)(""), k = (0, import_react2.useRef)(), f = (0, import_react2.useMemo)(() => r.filter((t2) => t2.join("+").toLowerCase().includes(w2.toLowerCase())), [w2]);
  return useClickAway(() => {
    x2(false);
  }, r2), (0, import_react2.useEffect)(() => {
    g && h("");
  }, [g]), (0, import_react2.useEffect)(() => {
    if (e != null && e.includes("*"))
      return;
    let t2 = `+${b[2]}`, n = (e || "").replace(/^\+\d+/, "").trim();
    s.setFieldsValue({ [a.name]: `${t2} ${n}` }), n && s.validateFields(["_phone"]);
  }, [b, e]), (0, import_react2.useEffect)(() => {
    var t2;
    try {
      if ((t2 = e == null ? void 0 : e.includes) != null && t2.call(e, "*"))
        s.setFieldsValue({ _phone: e });
      else if (e) {
        if (isValidPhoneNumber(e)) {
          let n = parsePhoneNumberWithError(e), d = n.nationalNumber;
          s.setFieldsValue({ _phone: d });
          let L = n.countryCallingCode.toString(), C = n.country;
          if (L && C) {
            let y = r.filter((P) => P[2].toString() === L && P[1].toLowerCase() === C.toLowerCase());
            y && y.length > 0 && c(y[y.length - 1]);
          }
        }
      } else {
        let n = t();
        n && c(n);
      }
    } catch {
    }
  }, [e]), import_react2.default.createElement(import_react2.default.Fragment, null, import_react2.default.createElement("style", null, nn), import_react2.default.createElement("div", { className: "phone-input-item-container" }, import_react2.default.createElement(form_default.Item, { className: !a.disabled || a.disabled && a.previewMode !== "input" ? "hidden" : "", extra: a.extra, name: a.name }, import_react2.default.createElement(input_default, { disabled: a.disabled })), import_react2.default.createElement(form_default.Item, { name: "_phone", className: a.disabled && a.previewMode == "input" ? "hidden" : "", extra: a.extra, rules: [{ required: true, validator: (t2, n) => {
    try {
      if (n)
        try {
          if (n = `+${b[2]} ${n}`, !isValidPhoneNumber(n))
            return Promise.reject(u("login.phone_format_error"));
        } catch {
          return Promise.reject(u("login.phone_format_error"));
        }
      else
        return Promise.reject(u("login.input_phone_holder"));
    } catch {
      return Promise.reject(u("login.phone_format_error"));
    }
    return Promise.resolve();
  } }] }, import_react2.default.createElement(input_number_default, { placeholder: u("account.mobile"), disabled: a.disabled, controls: false, onChange: (t2) => {
    s.setFieldsValue({ [a.name]: `+${b[2]} ${t2}` });
  }, onFocus: () => {
    var t2;
    (t2 = document.querySelector(".ant-input-number-group-wrapper")) == null || t2.setAttribute("data-focus", "true");
  }, onBlur: () => {
    var t2;
    (t2 = document.querySelector(".ant-input-number-group-wrapper")) == null || t2.setAttribute("data-focus", "false");
  }, addonBefore: import_react2.default.createElement("div", { className: "country-box phone", ref: T }, import_react2.default.createElement("div", { className: "prefix-wrap", onClick: () => {
    a.disabled || (x2(!g), setTimeout(() => {
      var t2;
      (t2 = k.current) == null || t2.focus();
    }));
  }, ref: r2 }, import_react2.default.createElement("div", { className: "account-select-opt" }, import_react2.default.createElement("div", { className: "account-select-icon" }, getCountryFlag(`${b[1]}`)), import_react2.default.createElement(DownOutlined_default, { className: "down-more" })), import_react2.default.createElement("span", null, "+", b[2])), g && import_react2.default.createElement("div", { className: "account-select-country-list " }, import_react2.default.createElement("div", { className: "account-select-country-item search-input-wrap", onClick: (t2) => {
    t2.stopPropagation();
  } }, import_react2.default.createElement(input_default, { ref: k, className: "search-input", type: "text", placeholder: u("login.search_country_holder"), allowClear: true, onChange: (t2) => {
    var d;
    let n = ((d = t2 == null ? void 0 : t2.target) == null ? void 0 : d.value) || "";
    h(n);
  } })), f && !!f.length ? import_react2.default.createElement("div", { className: "p-country-list" }, f.map((t2, n) => import_react2.default.createElement("div", { key: `${t2[0]}-${t2[1]}-${t2[2]}`, className: "account-select-country-item", onClick: () => {
    c(t2), x2(false);
  } }, import_react2.default.createElement("div", { className: "country-box" }, import_react2.default.createElement("div", { className: "country-flag" }, getCountryFlag(`${t2[1]}`)), import_react2.default.createElement("span", { className: "country-name" }, t2[0])), import_react2.default.createElement("div", { className: "country-code" }, "+" + t2[2])))) : import_react2.default.createElement("div", { className: "no-data" }, "No data"))) }))));
};
var rn = bn;
var an = `.login-account-bind {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  width: 100%;
  height: 100%;
  overflow-y: auto;
}
.login-account-bind .ant-input-status-error:not(.ant-input-disabled, .ant-input-borderless).ant-input {
  background-color: var(--input-background-color);
}
.login-account-bind .ant-spin-spinning {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
  padding-bottom: 20vh;
}
.login-account-bind .account-title {
  font-weight: 500;
  font-size: 18px;
}
.login-account-bind .account-bind-form {
  width: 100%;
  padding: 0 18px;
  margin-top: 34px;
}
.login-account-bind .account-bind-form .account-input {
  width: 100%;
  height: 47px;
  border: 1px solid var(--input-border-color);
  border-radius: var(--primary-btn-border-radius);
  color: var(--text-color);
  background-color: var(--input-background-color);
}
.login-account-bind .account-bind-form .link-account-hint {
  align-self: flex-start;
  padding-top: 6px;
  font-size: 12px;
  color: var(--secondary-text-color);
}
.login-account-bind .account-bind-form .link-btn {
  margin-top: 15px;
  margin-bottom: 30px;
}
.login-account-bind .account-bind-form .unlink-btn {
  margin-top: 15px;
  margin-bottom: 30px;
  color: #fff;
  background: #ea4335;
}
.login-account-bind .footer-box {
  position: absolute;
  bottom: 10px;
  margin: 0;
}
@media screen and (max-height: 350px) {
  .login-account-bind .footer-box {
    position: unset;
    bottom: 0;
    margin-bottom: 10px;
  }
}
`;
var _n = (a) => {
  let s = a, e = (s == null ? void 0 : s.authType) || "", b = (s == null ? void 0 : s.verifyToken) || "", { t: c } = useTranslation(), [u] = form_default.useForm(), g = Na(), x2 = x(), { userInfo: r2 } = ie(), { showSelectSecurityAccount: T } = Fa(), [w2, h] = (0, import_react.useState)(false), { runAsync: k } = useRequest_default(checkHasBoundLoginPhoneOrEmail, { manual: true }), { authCoreModal: f } = ee(), t2 = (0, import_react.useMemo)(() => z({ userInfo: r2, t: c }), [r2]), n = (0, import_react.useMemo)(() => {
    var i;
    return ((i = t2 == null ? void 0 : t2.find) == null ? void 0 : i.call(t2, (m) => m.type === e)) || {};
  }, [t2, e]), d = (0, import_react.useMemo)(() => !n.value && !n.id, [n]), L = (0, import_react.useMemo)(() => !n.isOriginal && !d, [n]), C = () => {
    u.validateFields().then((l) => {
      var v, I, N2, q, H, U, D;
      let i = ((q = (N2 = (I = (v = u.getFieldsValue()) == null ? void 0 : v.inputValue) == null ? void 0 : I.replace(/\s/g, "")) == null ? void 0 : N2.trim) == null ? void 0 : q.call(N2)) || "";
      if (h(true), e === "phone" && ((H = r2 == null ? void 0 : r2.security_account) == null ? void 0 : H.phone) === i) {
        modal_default.error({ title: c("new.duplicate_phonel_bindings"), wrapClassName: "auth-core-modal-error", getContainer: () => f.rootBody }), h(false);
        return;
      } else if (e === "email" && ((D = (U = r2 == null ? void 0 : r2.security_account) == null ? void 0 : U.email) == null ? void 0 : D.toLowerCase()) === (i == null ? void 0 : i.toLowerCase())) {
        modal_default.error({ title: c("new.duplicate_email_bindings"), wrapClassName: "auth-core-modal-error", getContainer: () => f.rootBody }), h(false);
        return;
      }
      let m = {};
      e === AuthType.phone ? m.phone = i : m.email = i, k(m).then((V) => {
        g("/account/verify", { state: { account: i, authType: e, verifyToken: b, pageType: "bind_login_account" } }), h(false);
      }).catch((V) => {
        h(false), V.error_code === 20109 ? modal_default.error({ title: e === AuthType.phone ? c("error.server_phone_20109") : c("error.server_email_20109"), wrapClassName: "auth-core-modal-error", getContainer: () => f.rootBody }) : x2.error(V.message);
      });
    });
  }, { run: y } = useThrottleFn_default((l) => {
    g("/account/verify", { state: { account: l.account, authType: e, unbindAccount: u.getFieldValue("inputValue"), pageType: "unbind_login_account" } });
  }, { wait: 3e3 }), P = () => {
    var l, i, m, v;
    ((l = r2 == null ? void 0 : r2.security_account) == null ? void 0 : l.email) && ((i = r2 == null ? void 0 : r2.security_account) == null ? void 0 : i.phone) ? T(true, { authType: e, unbindAccount: u.getFieldValue("inputValue"), pageType: "unbind_login_account" }) : y({ account: ((m = r2 == null ? void 0 : r2.security_account) == null ? void 0 : m.email) || ((v = r2 == null ? void 0 : r2.security_account) == null ? void 0 : v.phone) });
  };
  return (0, import_react.useEffect)(() => {
    if ((n == null ? void 0 : n.value) || (n == null ? void 0 : n.id))
      if (e === AuthType.phone) {
        let l = parsePhoneNumberWithError(n == null ? void 0 : n.value.replace(/\s/g, "")), i = l.countryCallingCode, m = l.nationalNumber;
        u.setFieldsValue({ inputValue: j(`+${i} ${m}`) });
      } else
        u.setFieldsValue({ inputValue: j((n == null ? void 0 : n.value) || (n == null ? void 0 : n.id) || "") });
  }, [n == null ? void 0 : n.value, n == null ? void 0 : n.id, e]), import_react.default.createElement("div", { className: "login-account-bind " }, import_react.default.createElement("style", null, an), import_react.default.createElement(w, { displayBackBtn: true }, n.name), import_react.default.createElement(form_default, { className: "account-bind-form", layout: "vertical", form: u, onFinish: C }, e === AuthType.phone ? import_react.default.createElement(rn, { name: "inputValue", form: u, disabled: !d, previewMode: "input", extra: import_react.default.createElement("div", { className: "link-account-hint" }, c("new.link_account_hint").format(n.name)) }) : import_react.default.createElement(form_default.Item, { name: "inputValue", validateTrigger: "onBlur", extra: import_react.default.createElement("div", { className: "link-account-hint" }, c("new.link_account_hint").format(n.name)), rules: [{ required: true, validator: async (l, i) => {
    if (i) {
      if (!bt.test(i))
        return Promise.reject(c("login.email_format_error"));
    } else
      return Promise.reject(c("account.input_vaild_email"));
    return Promise.resolve();
  } }] }, import_react.default.createElement(input_default, { className: "account-input", placeholder: n.name, disabled: !d, onChange: (l) => u.setFields([{ name: "email", value: l.target.value, errors: [] }]) })), import_react.default.createElement(form_default.Item, null, d ? import_react.default.createElement(button_default, { className: "primary-antd-btn link-btn", loading: w2, htmlType: "submit" }, c("account.link")) : import_react.default.createElement(import_react.default.Fragment, null))), import_react.default.createElement(N, null));
};
var Rn = _n;
export {
  Rn as default
};
//# sourceMappingURL=loginAccountBind-BRJ7L6YQ-VTMU374G.js.map
