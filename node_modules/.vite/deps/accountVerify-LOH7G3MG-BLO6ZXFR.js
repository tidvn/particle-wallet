import {
  z
} from "./chunk-3IHPIA4A.js";
import {
  K
} from "./chunk-P4I3C56F.js";
import "./chunk-TEXHGKQR.js";
import "./chunk-SBZW2YII.js";
import {
  x
} from "./chunk-3KDTPZMW.js";
import {
  i0
} from "./chunk-LGSFMKB7.js";
import {
  N
} from "./chunk-HFPUBT3M.js";
import {
  Vt
} from "./chunk-QHFOOEJW.js";
import "./chunk-52K3MTCP.js";
import {
  ApiError,
  AuthType,
  Fa,
  Ma,
  Na,
  bindLoginAccount,
  button_default,
  ci,
  ee,
  getBindSecurityAccounCaptcha,
  getCloudflareTurnstileResponse,
  getSecurityAccountCaptcha,
  getSecurityAccountToken,
  li,
  modal_default,
  require_base64url,
  require_throttle,
  setPaymentPassword,
  syncUserInfo,
  thirdpartyAuth,
  useInterval_default,
  useRequest_default,
  useTranslation
} from "./chunk-5K5SNHHZ.js";
import "./chunk-TL65SHMZ.js";
import "./chunk-XTL3VBNC.js";
import "./chunk-6SATDP2A.js";
import "./chunk-OKCYEHW4.js";
import "./chunk-YM32VLGM.js";
import "./chunk-E7F3KV4Y.js";
import "./chunk-WN444VHT.js";
import "./chunk-IXJJAVWB.js";
import "./chunk-GEJW2VKU.js";
import "./chunk-4YCFGIGR.js";
import "./chunk-XBOBPJUC.js";
import "./chunk-ZNXRVEFR.js";
import "./chunk-7Z7TKVC7.js";
import "./chunk-5JEUK2R2.js";
import "./chunk-QUUJLUTV.js";
import "./chunk-E4YFJ4DO.js";
import "./chunk-ZFG3MDGT.js";
import "./chunk-ZS6JYA4T.js";
import "./chunk-THPC5MR7.js";
import {
  require_react
} from "./chunk-YVDZNGKE.js";
import {
  __toESM
} from "./chunk-IKJM6GHQ.js";

// node_modules/@particle-network/auth-core-modal/esm/accountVerify-LOH7G3MG.js
var import_base64url = __toESM(require_base64url(), 1);
var import_throttle = __toESM(require_throttle(), 1);
var import_react = __toESM(require_react(), 1);
"use client";
var $ = `.set-viery-container {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  height: 100%;
  overflow: auto;
  color: var(--text-color);
}
.set-viery-container .footer-box {
  position: absolute;
  bottom: 10px;
  margin: 0;
}
@media only screen and (max-height: 520px) {
  .set-viery-container .footer-box {
    position: unset;
    bottom: 0;
    margin-top: 20px;
    margin-bottom: 10px;
  }
}
.set-viery-container .display-none {
  display: none;
}
.set-viery-container .error-tip {
  width: 90%;
  height: 0;
  padding-left: 10px;
  margin-top: 6px;
  margin-bottom: 0;
  text-align: left;
  color: red;
  opacity: 0;
  transition: all 0.3s;
}
.set-viery-container .error-tip.show {
  height: 30px;
  opacity: 1;
}
.set-viery-container .set-email-title {
  margin-top: 60px;
  font-size: 22px;
  color: var(--text-color);
}
.set-viery-container .patment-tips1 {
  width: 80vw;
  margin-top: 30px;
  font-size: 14px;
  text-align: center;
  color: var(--text-color);
}
@media (min-width: 600px) {
  .set-viery-container .patment-tips1 {
    width: calc(80 * var(--vw));
  }
}
.set-viery-container .set-email-buttons {
  position: absolute;
  bottom: 0;
  left: 0;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  align-items: center;
  width: 100%;
  height: auto;
  padding-bottom: 20px;
}
.set-viery-container .success-icon {
  width: 50px;
  height: 50px;
  margin-top: 60px;
}
.set-viery-container .set-email-desc-1 {
  box-sizing: border-box;
  padding: 0 18px;
  margin: 15px 0 25px;
  font-weight: 400;
  font-size: 14px;
  line-height: 16px;
  text-align: center;
  color: var(--text-color);
}
.set-viery-container .account-submit-btn {
  width: 90%;
  height: 47px;
  padding: 0;
  margin-top: 38px;
  border: none;
  border-radius: var(--primary-btn-border-radius);
  font-weight: 500;
  font-size: var(--primary-btn-font-size);
  line-height: 47px;
  text-align: center;
  color: var(--primary-btn-color);
  background: var(--primary-btn-background-color);
  opacity: 1;
}
.set-viery-container .account-submit-btn:hover {
  border: none;
  color: var(--primary-btn-color) !important;
  background: var(--primary-btn-background-color) !important;
  opacity: var(--hover-opacity);
}
.set-viery-container .account-switch-item {
  margin-top: 40px;
  font-weight: 500;
  font-size: 13px;
  line-height: 19px;
  color: var(--accent-color);
  cursor: pointer;
}
.set-viery-container .set-email-desc-2 {
  min-width: 116px;
  height: 23px;
  padding: 0 15px;
  margin: 20px 0 28px;
  border-radius: var(--primary-btn-border-radius);
  font-weight: 400;
  font-size: 12px;
  line-height: 23px;
  text-align: center;
  color: var(--secondary-text-color);
  background: var(--tag-background-color);
  opacity: 1;
}
.set-viery-container .back {
  display: flex;
  align-items: center;
  margin-top: 90px;
  font-weight: 400;
  font-size: 16px;
  line-height: 19px;
  color: var(--accent-color);
  opacity: 1;
  cursor: pointer;
  gap: 8px;
}
.set-viery-container .back svg {
  position: relative;
  top: -1px;
  color: var(--accent-color);
}
.set-viery-container .code-error {
  position: absolute;
  left: calc((100vw - 316px) / 2);
  margin-top: 224px;
  font-weight: 400;
  font-size: 12px;
  color: var(--error-color);
}
@media (min-width: 600px) {
  .set-viery-container .code-error {
    left: calc((var(--vw) * 100 - 316px) / 2);
  }
}
.set-viery-container .send-again {
  margin-top: 20px;
  border: none !important;
  outline: none !important;
  font-weight: 400;
  font-size: 16px;
  line-height: 19px;
  color: var(--text-color);
  background-color: transparent;
  box-shadow: none;
}
.set-viery-container .send-again:hover {
  color: var(--text-color) !important;
  background-color: transparent !important;
}
.set-viery-container .send-again:disabled {
  opacity: 0.5;
}
`;
var Me = (R) => {
  let c = Na(), { t: n } = useTranslation(), W = R, v = x(), { customRouter: X } = Ma(), { themeType: Y, language: Z } = Vt(), { account: a, pageType: d, authType: s, verifyToken: ee2, redirectUrl: te, password: ne } = W, [x2, oe] = (0, import_react.useState)(""), [L, C] = (0, import_react.useState)(1e3), [y, _] = (0, import_react.useState)(60), [w, l] = (0, import_react.useState)(), { authCoreModal: N2 } = ee(), { userInfo: ie } = Fa(), S = (0, import_react.useRef)(null);
  useInterval_default(() => {
    if (y > 0) {
      let e = y - 1;
      _(e), e === 0 && C(void 0);
    }
  }, L);
  let { run: B } = useRequest_default(async (e) => d === "bind_login_account" ? (e = { [s]: a, cf_turnstile_response: e.cf_turnstile_response }, getBindSecurityAccounCaptcha(e).then((t) => t)) : getSecurityAccountCaptcha(e.verifyCodeMethod), { manual: true, onSuccess: (e, t) => {
    L || (_(60), C(1e3));
  }, onError: (e) => {
    _(0), C(void 0);
  } }), { loading: re, runAsync: E } = useRequest_default(getSecurityAccountToken, { manual: true, onError: (e) => {
    (e == null ? void 0 : e.error_code) === ApiError.InvalidCode ? l(n("login.invalid_code")) : (e == null ? void 0 : e.error_code) === ApiError.ResendCode ? l(n("login.please_send_again")) : e.message && v.error(e.message);
  } }), { loading: ae, runAsync: se } = useRequest_default(async (e) => bindLoginAccount(e).then(async () => {
    await syncUserInfo();
  }), { manual: true, onSuccess: (e) => {
    v.success(n("new.bind_login_account_success"));
  }, onError: (e) => {
    var i;
    let t = e.message;
    if ((e == null ? void 0 : e.error_code) === ApiError.InvalidCode) {
      l(n("login.invalid_code"));
      return;
    } else if ((e == null ? void 0 : e.error_code) === ApiError.ResendCode) {
      l(n("login.please_send_again"));
      return;
    } else
      e.error_code === 20109 ? t = s == AuthType.email ? n("error.server_email_20109") : n("error.server_phone_20109") : t = ((i = e == null ? void 0 : e.extra) == null ? void 0 : i[0]) || e.message;
    modal_default.error({ title: t, wrapClassName: "auth-core-modal-error", getContainer: () => N2.rootBody, onOk: () => {
      var r;
      (r = S.current) == null || r.clear(), e.error_code === 20109 && c(-1);
    } });
  } }), { loading: ce, run: le } = useRequest_default(setPaymentPassword, { manual: true, onError: (e) => {
    (e == null ? void 0 : e.error_code) === ApiError.InvalidCode ? l(n("login.invalid_code")) : (e == null ? void 0 : e.error_code) === ApiError.ResendCode && l(n("login.please_send_again"));
  }, onSuccess: (e, t) => {
    syncUserInfo();
    let i = ["account/security", "solana/sign", "evm-chain/sign"], r = i.map((k) => {
      var u;
      return (u = X.history) == null ? void 0 : u.findIndex((p) => p.path === k);
    }), A = r.indexOf(Math.max(...r));
    c(i[A], { replace: true, back: true });
  } }), { loading: de, run: Pe } = useRequest_default(() => new Promise((e, t) => {
  }), { manual: true, onSuccess: (e) => {
  } }), f = (0, import_react.useMemo)(() => a != null && a.includes("@") ? AuthType.email : AuthType.phone, [a]);
  (0, import_react.useEffect)(() => {
    M();
  }, [a]);
  let M = () => {
    l(""), d === "bind_login_account" && s === AuthType.phone ? getCloudflareTurnstileResponse({ theme: Y, language: Z, getContainer: () => N2.rootBody }).then((e) => {
      B({ verify_code_method: f, cf_turnstile_response: e });
    }).catch(() => {
      v.error(n("error.server_20112")), c(-1);
    }) : B({ verifyCodeMethod: f });
  }, ue = (e) => {
    l(""), oe(e), e.length === 6 && pe(e);
  }, pe = (0, import_react.useCallback)((0, import_throttle.default)((e) => {
    P(e);
  }, 1e3, { leading: true, trailing: false }), []), me = (e) => {
    le({ password: ne, verifyCodeMethod: f, code: e || x2 });
  }, P = (e = "") => {
    if (w)
      return;
    let t = { code: e };
    d === "reset_payment_password" ? me(e) : d == "verify_security_account_set_security_account" ? E({ verifyCodeMethod: f, code: e }).then((i) => {
      c("/account/bind", { replace: true, state: { accountType: s, verifyToken: i, redirectUrl: te } });
    }) : d === "verify_security_account_bind_login_account" ? E({ verifyCodeMethod: f, code: e }).then((i) => {
      let r = z({ userInfo: ie, t: n }), { id: A, value: k } = r.find((u) => u.type === s) || {};
      if (s === AuthType.phone || s === AuthType.email || k || A)
        c("/login-account/bind", { state: { authType: s, verifyToken: i }, replace: true });
      else {
        let u = import_base64url.default.encode(JSON.stringify({ verifyToken: i, purpose: "bindLoginAccount" }));
        thirdpartyAuth({ authType: s, appState: u, prompt: "select_account" }).catch((p) => {
          v.error((p == null ? void 0 : p.message) || p);
        });
      }
    }) : d === "bind_login_account" ? (t = { ...t, security_account_verify_token: ee2, [s]: a }, se(t).then((i) => {
      c(-2);
    })) : "unbind_login_account";
  }, ge = () => a.includes("@") ? ci(a) : li(a);
  (0, import_react.useEffect)(() => {
    var i;
    let e = document.getElementsByClassName("react-input-code"), t = (r) => r.preventDefault();
    return (i = e[0]) == null || i.addEventListener("contextmenu", t), () => {
      var r;
      (r = e[0]) == null || r.removeEventListener("contextmenu", t);
    };
  }, []);
  let ye = () => {
    var t;
    (t = document.getElementsByClassName("input-code-item")[Math.min(x2.length, 5)]) == null || t.focus();
  };
  return import_react.default.createElement("div", { className: "set-viery-container" }, import_react.default.createElement("style", null, $), import_react.default.createElement("div", { className: "account-header" }, import_react.default.createElement(i0, { className: "icon-navigation-back", name: "circle_back", onClick: () => {
    c(-1);
  } })), import_react.default.createElement("h2", { className: "set-email-title" }, n("account.enter_code")), import_react.default.createElement("p", { className: "set-email-desc-2" }, ge()), import_react.default.createElement("div", { onClick: ye }, import_react.default.createElement(K, { containerClassName: "react-input-code", inputClassName: "input-code-item", allowedCharacters: "numeric", length: 6, ref: S, placeholder: " ", onChange: ue })), w && import_react.default.createElement("div", { className: "code-error" }, w), import_react.default.createElement(button_default, { className: "account-submit-btn", loading: ce || re || ae || de, onClick: () => {
    setTimeout(() => {
      P(x2);
    });
  }, disabled: x2.length !== 6 }, n("common.confirm")), import_react.default.createElement(button_default, { className: "send-again", onClick: M, disabled: y > 0 }, y > 0 ? `${n("login.send_again")} (${y}s)` : n("login.send_again")), import_react.default.createElement("div", { className: "back", onClick: () => {
    c(-1);
  } }, import_react.default.createElement(i0, { className: "arrow1-icon", name: "arrow1_icon" }), import_react.default.createElement("span", null, n("login.back"))), import_react.default.createElement(N, null));
};
var Xe = Me;
export {
  Xe as default
};
//# sourceMappingURL=accountVerify-LOH7G3MG-BLO6ZXFR.js.map
