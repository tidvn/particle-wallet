import {
  getCountryFlag,
  r,
  t
} from "./chunk-5UENKOAW.js";
import {
  K
} from "./chunk-P4I3C56F.js";
import {
  x
} from "./chunk-3KDTPZMW.js";
import {
  i0
} from "./chunk-LGSFMKB7.js";
import {
  N
} from "./chunk-HFPUBT3M.js";
import {
  Vt
} from "./chunk-QHFOOEJW.js";
import "./chunk-52K3MTCP.js";
import {
  ApiError,
  DownOutlined_default,
  Na,
  Wo,
  bindSecurityAccount,
  bt,
  button_default,
  ee,
  getBindSecurityAccounCaptcha,
  getCloudflareTurnstileResponse,
  require_lib,
  require_throttle,
  syncUserInfo,
  useInterval_default,
  useRequest_default,
  useTranslation
} from "./chunk-5K5SNHHZ.js";
import "./chunk-TL65SHMZ.js";
import "./chunk-XTL3VBNC.js";
import "./chunk-6SATDP2A.js";
import "./chunk-OKCYEHW4.js";
import "./chunk-YM32VLGM.js";
import "./chunk-E7F3KV4Y.js";
import "./chunk-WN444VHT.js";
import "./chunk-IXJJAVWB.js";
import "./chunk-GEJW2VKU.js";
import "./chunk-4YCFGIGR.js";
import "./chunk-XBOBPJUC.js";
import "./chunk-ZNXRVEFR.js";
import "./chunk-7Z7TKVC7.js";
import "./chunk-5JEUK2R2.js";
import "./chunk-QUUJLUTV.js";
import "./chunk-E4YFJ4DO.js";
import "./chunk-ZFG3MDGT.js";
import "./chunk-ZS6JYA4T.js";
import "./chunk-THPC5MR7.js";
import {
  require_react
} from "./chunk-YVDZNGKE.js";
import {
  __toESM
} from "./chunk-IKJM6GHQ.js";

// node_modules/@particle-network/auth-core-modal/esm/accountBind-443I3OSC.js
var import_react = __toESM(require_react(), 1);
var import_throttle = __toESM(require_throttle(), 1);
var import_qs = __toESM(require_lib(), 1);
var import_react2 = __toESM(require_react(), 1);
"use client";
var U = `.set-email-container {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  height: 100%;
  overflow: auto;
  color: var(--text-color);
}
.set-email-container .footer-box {
  position: absolute;
  bottom: 10px;
  margin: 0;
}
@media (max-height: 500px) {
  .set-email-container .footer-box {
    display: none;
  }
}
.set-email-container .display-none {
  display: none;
}
.set-email-container .error-tip {
  width: 90%;
  height: 0;
  padding-left: 10px;
  margin-top: 6px;
  margin-bottom: 0;
  text-align: left;
  color: red;
  opacity: 0;
  transition: all 0.3s;
}
.set-email-container .error-tip.show {
  height: 30px;
  opacity: 1;
}
.set-email-container .set-email-title {
  margin-top: 60px;
  font-size: 22px;
  color: var(--text-color);
}
.set-email-container .patment-tips1 {
  width: 80vw;
  margin-top: 30px;
  font-size: 14px;
  text-align: center;
  color: var(--text-color);
}
@media (min-width: 600px) {
  .set-email-container .patment-tips1 {
    width: calc(80 * var(--vw));
  }
}
.set-email-container .set-email-buttons {
  position: absolute;
  bottom: 0;
  left: 0;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  align-items: center;
  width: 100%;
  height: auto;
  padding-bottom: 20px;
}
.set-email-container .success-icon {
  width: 50px;
  height: 50px;
  margin-top: 60px;
}
.set-email-container .set-email-desc-1 {
  box-sizing: border-box;
  padding: 0 18px;
  margin: 15px 0 25px;
  font-weight: 400;
  font-size: 14px;
  line-height: 16px;
  text-align: center;
  color: var(--text-color);
}
.set-email-container .account-input-box {
  position: relative;
  z-index: 3;
  width: 90%;
  height: 47px;
  margin-top: 28px;
  border: 1px solid var(--input-border-color);
  border-radius: var(--primary-btn-border-radius);
  line-height: 47px;
  color: var(--text-color);
  background-color: var(--input-background-color);
  opacity: 1;
}
.set-email-container .account-input-box .account-select-country {
  position: absolute;
  z-index: 2;
  top: 54px;
  left: 2%;
  width: 96%;
  height: 210px;
  border-radius: var(--card-border-radius) !important;
  overflow-y: auto;
  background-color: var(--input-background-color);
}
.set-email-container .account-input-box .account-select-country::-webkit-scrollbar {
  display: none;
  width: 0;
}
.set-email-container .account-input-box .account-select-country .account-select-country-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  box-sizing: border-box;
  width: 100%;
  height: 47px;
  padding: 5px 0 5px 13px;
  margin: 0;
  border-bottom: 1px solid var(--card-unclickable-background-color);
  font-size: 14px;
  color: var(--text-color);
  cursor: pointer;
}
.set-email-container .account-input-box .account-select-country .account-select-country-item:hover {
  background-color: var(--card-unclickable-background-color);
}
.set-email-container .account-input-box .account-select-country .account-select-country-item div {
  display: flex;
  margin-right: 13px;
}
.set-email-container .account-input-box .account-select-country .account-select-country-item div .country-name {
  max-width: 200px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.set-email-container .account-input-box input[type='number']::-webkit-inner-spin-button,
.set-email-container .account-input-box input[type='number']::-webkit-outer-spin-button {
  appearance: none;
  margin: 0;
}
.set-email-container .account-input-box.phone {
  display: flex;
  align-items: center;
  border: 1px solid var(--input-background-color);
  border-radius: var(--primary-btn-border-radius);
}
.set-email-container .account-input-box.phone[data-focus='true'] {
  border: 1px solid var(--accent-color) !important;
}
.set-email-container .account-input-box.phone input {
  border: none !important;
}
.set-email-container .account-input-box.phone input:focus {
  border: none !important;
}
.set-email-container .account-input-box .account-select-opt {
  display: flex;
  flex-shrink: 0;
  justify-content: center;
  align-items: center;
  width: 60px;
  height: 100%;
  padding-left: 8px;
  cursor: pointer;
}
.set-email-container .account-input-box .account-select-opt .account-select-icon {
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  font-size: 15px;
}
.set-email-container .account-input-box .account-select-opt .down-more {
  margin-left: 8px;
  font-size: 10px;
}
.set-email-container .account-input-box span {
  flex-shrink: 0;
  margin: 0;
  font-size: 15px;
}
.set-email-container .account-input-box input {
  flex-shrink: 1;
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  padding: 0 15px;
  outline: none;
  font-weight: 400;
  font-size: 15px;
  color: var(--text-color);
  background-color: transparent;
}
.set-email-container .send-code-btn {
  margin-bottom: 0 !important;
}
.set-email-container .account-submit-btn {
  width: 90%;
  height: 47px;
  padding: 0;
  margin-top: 38px;
  border: none;
  border-radius: var(--primary-btn-border-radius);
  font-weight: 500;
  font-size: var(--primary-btn-font-size);
  line-height: 47px;
  text-align: center;
  color: var(--primary-btn-color);
  background: var(--primary-btn-background-color);
  opacity: 1;
}
.set-email-container .account-submit-btn.bottom-margin {
  margin-bottom: 100px;
}
.set-email-container .account-submit-btn:hover {
  border: none;
  color: var(--primary-btn-color) !important;
  background: var(--primary-btn-background-color) !important;
  opacity: var(--hover-opacity);
}
.set-email-container .account-switch-item {
  margin-top: 40px;
  font-weight: 500;
  font-size: 13px;
  line-height: 19px;
  color: var(--accent-color);
  cursor: pointer;
}
.set-email-container .set-email-desc-2 {
  min-width: 116px;
  height: 23px;
  padding: 0 15px;
  border-radius: var(--primary-btn-border-radius);
  font-weight: 400;
  font-size: 12px;
  line-height: 23px;
  text-align: center;
  color: var(--secondary-text-color);
  background: var(--tag-background-color);
  opacity: 1;
}
.set-email-container .code-error {
  position: absolute;
  left: calc((100vw - 316px) / 2);
  margin-top: 220px;
  font-weight: 400;
  font-size: 12px;
  color: var(--error-color);
}
@media (min-width: 600px) {
  .set-email-container .code-error {
    left: calc((var(--vw) * 100 - 316px) / 2);
  }
}
.set-email-container .back {
  display: flex;
  align-items: center;
  height: 19px;
  margin-top: 90px;
  margin-bottom: 20px;
  font-weight: 400;
  font-size: 16px;
  line-height: 19px;
  color: var(--accent-color);
  opacity: 1;
  cursor: pointer;
  gap: 8px;
}
.set-email-container .back svg {
  position: relative;
  top: 0;
  color: var(--accent-color);
}
.set-email-container .send-again {
  margin-top: 20px;
  border: none !important;
  outline: none !important;
  font-weight: 400;
  font-size: 16px;
  line-height: 19px;
  color: var(--text-color);
  background-color: transparent;
  box-shadow: none;
}
.set-email-container .send-again:hover {
  color: var(--text-color);
  background-color: transparent !important;
}
.set-email-container .send-again:disabled {
  opacity: 0.5;
}
`;
var ge = (D) => {
  let { bindAccount: c, backToInputAccount: i, redirectUrl: o = "", verifyToken: C = "" } = D, V = x(), { t: s } = useTranslation(), { themeType: _, language: y } = Vt(), m = Na(), [l, N2] = (0, import_react2.useState)(""), [T, d] = (0, import_react2.useState)(1e3), [a, g] = (0, import_react2.useState)(60), [p, f] = (0, import_react2.useState)(), F = (0, import_react2.useRef)(null), { authCoreModal: j } = ee();
  useInterval_default(() => {
    if (a > 0) {
      let e = a - 1;
      g(e), e === 0 && d(void 0);
    }
  }, T);
  let { loading: u, run: z } = useRequest_default(bindSecurityAccount, { manual: true, onSuccess: (e) => {
    syncUserInfo(), o ? m(o.split("?")[0], { replace: true, back: true, state: { ...import_qs.default.parse(o.split("?")[1]), verifyToken: e == null ? void 0 : e.token, account: c } }) : e.has_set_payment_password ? m("/account/security", { replace: true }) : m("/account/set-password");
  }, onError: (e) => {
    (e == null ? void 0 : e.error_code) === ApiError.InvalidCode ? f(s("login.invalid_code")) : (e == null ? void 0 : e.error_code) === ApiError.ResendCode && f(s("login.please_send_again"));
  } }), { loading: b, run: h } = useRequest_default(getBindSecurityAccounCaptcha, { manual: true, onSuccess: (e, n) => {
    T || (g(60), d(1e3));
  }, onError: (e) => {
    g(0), d(void 0);
  } }), v = (e) => {
    let n;
    c.includes("@") ? n = { email: c, code: e || l } : n = { phone: c, code: e || l }, C && (n.token = C), z(n);
  }, G = () => {
    f(""), c.includes("@") ? h({ email: c }) : getCloudflareTurnstileResponse({ theme: _, language: y, getContainer: () => j.rootBody }).then((e) => {
      h({ phone: c, cf_turnstile_response: e });
    }).catch((e) => {
      V.error(s("error.server_20112"));
    });
  }, E = (e) => {
    N2(e), f(""), e.length === 6 && w(e);
  }, w = (0, import_react2.useCallback)((0, import_throttle.default)((e) => {
    v(e);
  }, 1e3, { leading: true, trailing: false }), []);
  (0, import_react2.useEffect)(() => {
    var H;
    let e = document.getElementsByClassName("react-input-code"), n = (S) => S.preventDefault();
    return (H = e[0]) == null || H.addEventListener("contextmenu", n), () => {
      var S;
      (S = e[0]) == null || S.removeEventListener("contextmenu", n);
    };
  }, []);
  let P = () => {
    var n;
    (n = document.getElementsByClassName("input-code-item")[Math.min(l.length, 5)]) == null || n.focus();
  };
  return import_react2.default.createElement("div", { className: "set-email-container" }, import_react2.default.createElement("style", null, U), import_react2.default.createElement(i0, { className: "icon-navigation-back", name: "circle_back", onClick: i }), import_react2.default.createElement("h2", { className: "set-email-title" }, s("account.enter_code")), import_react2.default.createElement("p", { className: "set-email-desc-2", style: { margin: 20 } }, c), import_react2.default.createElement("div", { onClick: P }, import_react2.default.createElement(K, { containerClassName: "react-input-code", inputClassName: "input-code-item", allowedCharacters: "numeric", length: 6, ref: F, placeholder: " ", onChange: E })), p && import_react2.default.createElement("div", { className: "code-error" }, p), import_react2.default.createElement(button_default, { disabled: l.length !== 6, className: "account-submit-btn", loading: u, onClick: () => v() }, s("common.confirm")), import_react2.default.createElement(button_default, { className: "send-again", onClick: G, disabled: a > 0 || b }, a > 0 ? `${s("login.send_again")} (${a}s)` : s("login.send_again")), import_react2.default.createElement("div", { className: "back", onClick: i }, import_react2.default.createElement(i0, { className: "arrow1-icon", name: "arrow1_icon" }), import_react2.default.createElement("span", null, s("login.back"))), import_react2.default.createElement(N, null));
};
var R = ge;
var we = (D) => {
  let c = Na(), { t: i } = useTranslation(), o = D, C = o == null ? void 0 : o.redirectUrl, V = o == null ? void 0 : o.verifyToken, s = x(), _ = (0, import_react.useRef)(), [y, m] = (0, import_react.useState)(""), [l, N2] = (0, import_react.useState)(["United States", "us", "1"]), [T, d] = (0, import_react.useState)(false), a = (0, import_react.useRef)(null), [g, p] = (0, import_react.useState)(""), { themeType: f, language: F } = Vt(), { authCoreModal: j } = ee(), [u, z] = (0, import_react.useState)("email");
  (0, import_react.useEffect)(() => {
    if (u === "phone" || (o == null ? void 0 : o.showSwitch)) {
      let e = t();
      e && N2(e);
    }
  }, [u, o == null ? void 0 : o.showSwitch]);
  let [b, h] = (0, import_react.useState)(false);
  (0, import_react.useEffect)(() => {
    if (b)
      return document.addEventListener("click", v, true), () => {
        document.removeEventListener("click", v, true);
      };
  }, [b]);
  let v = (e) => {
    setTimeout(() => {
      var n;
      (n = _.current) != null && n.contains(e.target) || h(false);
    });
  };
  (0, import_react.useEffect)(() => {
    let e = o == null ? void 0 : o.accountType;
    e && z(e);
  }, [o]);
  let { loading: G, run: E } = useRequest_default(getBindSecurityAccounCaptcha, { manual: true, onSuccess: (e, n) => {
    d(e);
  }, onError: (e) => {
    let n = (e == null ? void 0 : e.error_code) || 0;
    (n === 50003 || n === 50004) && (m(""), a.current.value = "");
  } }), w = () => {
    let e = a.current.value;
    if (u === "email")
      if (e) {
        if (!bt.test(e))
          return p(i("login.email_format_error"));
      } else
        return p(i("account.input_vaild_email"));
    else {
      let n = l[1].toUpperCase();
      if (!e && e !== "0")
        return p(i("account.input_vaild_mobile"));
      if (Wo(e, n))
        e = `+${l[2]}${e}`;
      else
        return p(i("login.phone_format_error"));
    }
    m(e), e.includes("@") ? E({ email: e }) : getCloudflareTurnstileResponse({ theme: f, language: F, getContainer: () => j.rootBody }).then((n) => {
      E({ phone: e, cf_turnstile_response: n });
    }).catch((n) => {
      s.error(i("error.server_20112"));
    });
  }, P = () => {
    z(u === "email" ? "phone" : "email"), m("");
  };
  return (0, import_react.useEffect)(() => {
    setTimeout(() => {
      var e;
      (e = a.current) == null || e.focus();
    });
  }, []), T ? import_react.default.createElement(R, { bindAccount: y, redirectUrl: C || "", verifyToken: V, backToInputAccount: () => {
    d(false);
  } }) : import_react.default.createElement("div", { className: "set-email-container" }, import_react.default.createElement("style", null, U), import_react.default.createElement(i0, { className: "icon-navigation-back", name: "circle_back", onClick: () => c(-1) }), import_react.default.createElement("h2", { className: "set-email-title" }, i(u === "email" ? "account.set_your_email" : "account.set_your_mobile")), import_react.default.createElement("p", { className: "set-email-desc-1" }, i(u === "email" ? "account.set_your_email_tip" : "account.set_your_mobile_tip")), u === "email" ? import_react.default.createElement(import_react.default.Fragment, null, import_react.default.createElement("div", { className: "account-input-box" }, import_react.default.createElement("input", { onInput: () => p(""), className: "input_email", type: "email", placeholder: i("account.place_email_address"), ref: a, defaultValue: y, onKeyDown: (e) => {
    e.key === "Enter" && w();
  } }))) : import_react.default.createElement(import_react.default.Fragment, null, import_react.default.createElement("div", { className: "account-input-box phone", ref: _ }, b && import_react.default.createElement("div", { className: "account-select-country" }, r.map((e, n) => import_react.default.createElement("p", { key: n, className: "account-select-country-item", onClick: () => {
    N2(e), h(false);
  } }, import_react.default.createElement("div", { className: "country-box" }, import_react.default.createElement("div", { className: "country-flag" }, getCountryFlag(`${e[1]}`)), import_react.default.createElement("span", { className: "country-name" }, e[0])), import_react.default.createElement("div", { className: "country-code" }, "+" + e[2])))), import_react.default.createElement("div", { className: "account-select-opt", onClick: () => h(!b) }, import_react.default.createElement("div", { className: "account-select-icon" }, getCountryFlag(`${l[1]}`)), import_react.default.createElement(DownOutlined_default, { className: "down-more" })), import_react.default.createElement("span", null, "+", l[2]), import_react.default.createElement("input", { onInput: () => {
    var e;
    p(""), a.current.value = ((e = a.current.value.match(/^\d+/)) == null ? void 0 : e[0]) || "";
  }, type: "text", className: "no-number dd", placeholder: i("account.mobile"), ref: a, onWheel: (e) => e.target.blur(), defaultValue: y.replace(`+${l[2]}`, ""), onKeyDown: (e) => {
    e.key === "Enter" && w();
  }, onFocus: () => {
    var e;
    (e = document.querySelector(".account-input-box.phone")) == null || e.setAttribute("data-focus", "true");
  }, onBlur: () => {
    var e;
    (e = document.querySelector(".account-input-box.phone")) == null || e.setAttribute("data-focus", "false");
  } }))), import_react.default.createElement("p", { className: `error-tip ${g ? "show" : ""}` }, g), import_react.default.createElement(button_default, { className: "send-code-btn account-submit-btn bottom-margin", loading: G, onClick: w }, i("login.get_captcha")), (o == null ? void 0 : o.showSwitch) && import_react.default.createElement("div", { className: "account-switch-item", onClick: P }, i(u === "email" ? "account.switch_text_mobile" : "account.switch_text_email")), import_react.default.createElement(N, null));
};
var et = we;
export {
  et as default
};
//# sourceMappingURL=accountBind-443I3OSC-VZUZOOEV.js.map
