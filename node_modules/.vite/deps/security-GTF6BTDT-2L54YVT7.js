import {
  w
} from "./chunk-TEXHGKQR.js";
import {
  E,
  H,
  T,
  U,
  i,
  o,
  t
} from "./chunk-GL4KGMXP.js";
import {
  $,
  G,
  T as T2,
  l,
  v
} from "./chunk-SBZW2YII.js";
import {
  x
} from "./chunk-3KDTPZMW.js";
import {
  i0
} from "./chunk-LGSFMKB7.js";
import {
  N
} from "./chunk-HFPUBT3M.js";
import {
  ie
} from "./chunk-QHFOOEJW.js";
import "./chunk-52K3MTCP.js";
import {
  AuthType,
  Fa,
  Fe,
  Na,
  Pe,
  button_default,
  ci,
  deletePaymentPassword,
  ee,
  getLatestAuthType,
  hasMasterPassword,
  li,
  modal_default,
  syncUserInfo,
  useTranslation,
  za
} from "./chunk-5K5SNHHZ.js";
import "./chunk-TL65SHMZ.js";
import "./chunk-XTL3VBNC.js";
import "./chunk-6SATDP2A.js";
import "./chunk-OKCYEHW4.js";
import "./chunk-YM32VLGM.js";
import "./chunk-E7F3KV4Y.js";
import "./chunk-WN444VHT.js";
import "./chunk-IXJJAVWB.js";
import "./chunk-GEJW2VKU.js";
import "./chunk-4YCFGIGR.js";
import "./chunk-XBOBPJUC.js";
import "./chunk-ZNXRVEFR.js";
import "./chunk-7Z7TKVC7.js";
import "./chunk-5JEUK2R2.js";
import "./chunk-QUUJLUTV.js";
import "./chunk-E4YFJ4DO.js";
import "./chunk-ZFG3MDGT.js";
import "./chunk-ZS6JYA4T.js";
import "./chunk-THPC5MR7.js";
import {
  require_react
} from "./chunk-YVDZNGKE.js";
import {
  __toESM
} from "./chunk-IKJM6GHQ.js";

// node_modules/@particle-network/auth-core-modal/esm/security-GTF6BTDT.js
var import_react = __toESM(require_react(), 1);
var import_react2 = __toESM(require_react(), 1);
"use client";
var ot = `.bind-security-account-prompt .ant-modal-content {
  padding: 18px;
}
.bind-security-account-prompt .bind-hint-content {
  margin: 30px 0;
  font-weight: 500;
  font-size: 18px;
  text-align: center;
  color: var(--text-color);
}
.bind-security-account-prompt .prompt-bottom-btn-box {
  display: flex;
  gap: 16px;
}
`;
var xt = (e) => {
  let { visible: r, setVisible: h, onBind: m } = e, { t: p } = useTranslation(), { authCoreModal: b } = ee(), v2 = () => {
    h(false);
  };
  return import_react2.default.createElement(import_react2.default.Fragment, null, import_react2.default.createElement("style", null, ot), import_react2.default.createElement(modal_default, { className: "bind-security-account-prompt", open: r, maskClosable: false, onCancel: v2, closeIcon: import_react2.default.createElement(Fe, null), centered: true, getContainer: () => b.rootBody }, import_react2.default.createElement("div", { className: "bind-hint-content" }, p("account.security_account_bind_hint")), import_react2.default.createElement("div", { className: "prompt-bottom-btn-box" }, import_react2.default.createElement(button_default, { className: "primary-antd-btn secondary particle-cancel-button", onClick: v2 }, p("common.cancel")), import_react2.default.createElement(button_default, { className: "primary-antd-btn", onClick: () => {
    h(false), m();
  } }, p("common.bind")))));
};
var it = xt;
var at = `.account-and-security {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  box-sizing: border-box;
  height: 100%;
  overflow: hidden;
}
.account-and-security .scroll-content {
  display: flex;
  flex: 1;
  flex-direction: column;
  align-items: center;
  width: 100%;
  padding-bottom: 0;
  overflow-y: auto;
}
.account-and-security .scroll-content .category-title {
  align-self: flex-start;
  margin-top: 8px;
  margin-left: calc(5% + 12px);
  font-weight: bold;
  font-size: 14px;
  line-height: 16px;
  color: var(--text-color);
}
.account-and-security .hover {
  cursor: pointer;
}
.account-and-security .hover:hover {
  opacity: var(--hover-opacity);
}
.account-and-security .label-item-switch {
  box-shadow: none !important;
  transform: scale(0.98);
}
.account-and-security .label-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  margin-top: 20px;
}
.account-and-security .label-item .arrow-right-icon {
  color: var(--text-color);
}
.account-and-security .label-item .arrow-right-icon svg {
  width: 11px;
  height: 11px;
}
.account-and-security .label-item .label-item-name {
  font-weight: 400;
  font-size: 14px;
  line-height: 16px;
  color: var(--text-color);
}
.account-and-security .label-item .label-item-btn {
  min-width: 44px;
  height: 22px;
  padding: 0 13px;
  border-radius: var(--primary-btn-border-radius);
  font-weight: 500;
  font-size: 14px;
  line-height: 22px;
  text-align: center;
  white-space: nowrap;
  color: var(--primary-btn-color);
  background: var(--primary-btn-background-color);
  opacity: 1;
  cursor: pointer;
}
.account-and-security .label-item .label-item-btn:hover {
  opacity: var(--hover-opacity);
}
.account-and-security .footer-tips {
  position: absolute;
  bottom: 50px;
  font-weight: 400;
  font-size: 14px;
  line-height: 24px;
  text-align: center;
  color: var(--text-color);
}
.account-and-security .title {
  position: sticky;
  z-index: 1;
  top: 0;
  width: 100vw;
  padding-top: 18px;
  font-weight: 500;
  font-size: 18px;
  text-align: center;
  color: var(--text-color);
  background: var(--theme-background-color);
  background-color: var(--bg-color);
}
@media (min-width: 600px) {
  .account-and-security .title {
    width: calc(100 * var(--vw));
  }
}
.account-and-security .payment-security {
  box-sizing: border-box;
  width: 90%;
  padding: 14px;
  margin-top: 18px;
  margin-bottom: 0;
  border-radius: var(--card-border-radius);
  background-color: var(--card-unclickable-background-color);
}
.account-and-security .payment-security h3 {
  margin-bottom: 12px;
  font-weight: bold;
  font-size: 14px;
  line-height: 16px;
  color: var(--text-color);
}
.account-and-security .payment-security p {
  box-sizing: border-box;
  padding-right: 20px;
  font-weight: 400;
  font-size: 14px;
  line-height: 18px;
  color: var(--secondary-text-color);
  opacity: 1;
}
.account-and-security .authorization-item {
  margin-bottom: 20px;
}
.account-and-security .authorization-item .label-item {
  height: 36px;
  margin: 0;
}
.account-and-security .master-password-item {
  width: 90%;
  padding: 14px;
  margin-top: 18px;
  border-radius: var(--card-border-radius);
  background-color: var(--card-unclickable-background-color);
}
.account-and-security .master-password-item .mp-header {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 12px;
}
.account-and-security .master-password-item .mp-header .mp-title {
  font-weight: bold;
  font-size: 14px;
  line-height: 16px;
  color: var(--text-color);
}
.account-and-security .master-password-item .mp-header .mp-learn-more {
  font-weight: 500;
  font-size: 14px;
  line-height: 16px;
  color: var(--accent-color);
  cursor: pointer;
}
.account-and-security .master-password-item .mp-content {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
}
.account-and-security .master-password-item .mp-content .mp-desc {
  flex-shrink: 1;
  box-sizing: border-box;
  font-weight: 400;
  font-size: 14px;
  line-height: 18px;
  color: var(--secondary-text-color);
  opacity: 1;
}
.account-and-security .master-password-item .mp-content .mp-set {
  flex-shrink: 0;
  min-width: 44px;
  height: 22px;
  padding: 0 13px;
  margin-left: 16px;
  border-radius: var(--primary-btn-border-radius);
  font-weight: 500;
  font-size: 14px;
  line-height: 22px;
  text-align: center;
  white-space: nowrap;
  color: var(--primary-btn-color);
  background: var(--primary-btn-background-color);
  opacity: 1;
  cursor: pointer;
}
.account-and-security .master-password-item .mp-content .mp-set:hover {
  opacity: var(--hover-opacity);
}
.account-and-security .verification-security {
  box-sizing: border-box;
  width: 90%;
  padding: 14px;
  margin-top: 18px;
  border-radius: var(--card-border-radius);
  background-color: var(--card-unclickable-background-color);
}
.account-and-security .verification-security h3 {
  margin-bottom: 12px;
  font-weight: bold;
  font-size: 14px;
  line-height: 16px;
  color: var(--text-color);
}
.account-and-security .verification-security p {
  box-sizing: border-box;
  padding-right: 20px;
  font-weight: 400;
  font-size: 14px;
  line-height: 18px;
  color: var(--secondary-text-color);
  opacity: 1;
}
.account-and-security .account-box {
  display: flex;
  align-items: center;
  box-sizing: border-box;
  width: 90%;
  padding: 22px 12px;
  margin-top: 18px;
  border-radius: var(--card-border-radius);
  background-color: var(--card-unclickable-background-color);
}
.account-and-security .account-box .account-avatar {
  width: 20px;
  height: 20px;
  margin-right: 11px;
  border-radius: 50%;
  background-color: #efefef;
}
.account-and-security .account-box .account {
  flex-grow: 1;
  margin-right: 10px;
  overflow: hidden;
  font-size: 14px;
  text-overflow: ellipsis;
  white-space: nowrap;
  color: var(--text-color);
}
.account-and-security .account-box .more-account {
  font-weight: 500;
  font-size: 14px;
  text-align: end;
  text-overflow: ellipsis;
  white-space: nowrap;
  color: var(--accent-color);
  cursor: pointer;
}
`;
var Pt = () => {
  var P, A, S, T3, M;
  let { t: e } = useTranslation(), r = Na(), [h, m] = (0, import_react.useState)(false), { setPaymentVerify: p, showSelectSecurityAccount: b, setPaymentPassword: v2 } = Fa(), { userInfo: t2 } = ie(), { modalOptions: nt } = za(), f = x(), _ = (0, import_react.useMemo)(() => hasMasterPassword(), [t2]), N2 = (i2) => {
    var c;
    return ((c = t2 == null ? void 0 : t2.thirdparty_user_info) == null ? void 0 : c.provider) === AuthType.jwt ? i2 == null ? void 0 : i2.replace(`${nt.projectId}:`, "") : i2;
  }, st = { email: v, phone: $, facebook: T2, google: G, apple: t, twitter: l, twitterv1: l, discord: i, github: H, twitch: o, microsoft: E, linkedin: T, jwt: U }, l2 = (0, import_react.useMemo)(() => {
    var a;
    let i2 = getLatestAuthType();
    return i2 || (i2 = ((a = t2 == null ? void 0 : t2.thirdparty_user_info) == null ? void 0 : a.provider) || "email"), i2 === "twitterv1" && (i2 = AuthType.twitter), i2;
  }, [t2]), lt = (0, import_react.useMemo)(() => {
    var a, c, s, u;
    let i2 = "";
    return l2 && t2 && (i2 = t2[`${l2}`] || t2[`${l2}_email`] || Pe(N2(t2[`${l2}_id`]))), i2 || (t2 == null ? void 0 : t2.email) || (t2 == null ? void 0 : t2.phone) || ((c = (a = t2 == null ? void 0 : t2.thirdparty_user_info) == null ? void 0 : a.user_info) == null ? void 0 : c.email) || Pe(N2(((u = (s = t2 == null ? void 0 : t2.thirdparty_user_info) == null ? void 0 : s.user_info) == null ? void 0 : u.id) || ""));
  }, [l2, t2]), k = (i2) => {
    var a, c, s, u, B, V;
    ((a = t2 == null ? void 0 : t2.security_account) == null ? void 0 : a.email) && !((c = t2 == null ? void 0 : t2.security_account) != null && c.phone) || !((s = t2 == null ? void 0 : t2.security_account) != null && s.email) && ((u = t2 == null ? void 0 : t2.security_account) == null ? void 0 : u.phone) ? r("/account/verify", { state: { account: ((B = t2 == null ? void 0 : t2.security_account) == null ? void 0 : B.email) || ((V = t2.security_account) == null ? void 0 : V.phone), authType: i2, redirectUrl: "/account/security", pageType: "verify_security_account_set_security_account" } }) : r("/account/bind", { state: { accountType: i2, redirectUrl: "/account/security" } });
  }, dt = () => {
    var i2, a, c, s;
    ((i2 = t2 == null ? void 0 : t2.security_account) == null ? void 0 : i2.email) && ((a = t2 == null ? void 0 : t2.security_account) == null ? void 0 : a.phone) ? b(true) : r("/account/set-password", { state: { account: ((c = t2 == null ? void 0 : t2.security_account) == null ? void 0 : c.email) || ((s = t2 == null ? void 0 : t2.security_account) == null ? void 0 : s.phone) } });
  }, mt = () => {
    p({ visible: true, type: "close", onVerifyCompleted: (i2) => {
      deletePaymentPassword(i2).then((a) => {
        f.success(e("account.close_success")), syncUserInfo();
      }).catch((a) => {
        a.message && f.error(a.message);
      });
    } });
  }, z = (0, import_react.useMemo)(() => true, []), pt = () => {
    r(-1);
  }, ut = () => {
    r("/account/master-password/change");
  }, yt = () => {
    r("/account/master-password");
  }, ht = () => {
    r("/account/master-password/description");
  }, C = (0, import_react.useMemo)(() => {
    var i2, a;
    return ((i2 = t2 == null ? void 0 : t2.security_account) == null ? void 0 : i2.email) || ((a = t2 == null ? void 0 : t2.security_account) == null ? void 0 : a.phone);
  }, [(P = t2 == null ? void 0 : t2.security_account) == null ? void 0 : P.email, (A = t2 == null ? void 0 : t2.security_account) == null ? void 0 : A.phone]);
  return (0, import_react.useEffect)(() => {
    syncUserInfo().catch((i2) => {
    });
  }, []), import_react.default.createElement("div", { className: "account-and-security" }, import_react.default.createElement("style", null, at), z && import_react.default.createElement(w, { onBack: pt }, e("account.account_and_security")), !z && import_react.default.createElement(w, null, e("account.account_and_security")), import_react.default.createElement("div", { className: "scroll-content" }, import_react.default.createElement("div", { className: "category-title" }, e("account.account")), import_react.default.createElement("div", { className: "account-box" }, import_react.default.createElement("img", { className: "account-avatar", src: st[l2] }), import_react.default.createElement("div", { className: "account" }, lt), import_react.default.createElement("div", { className: "more-account", onClick: () => {
    C ? r("/login-account") : m(true);
  } }, e("account.more_login_account"))), import_react.default.createElement("div", { className: "payment-security authorization-item" }, import_react.default.createElement("div", { className: "label-item hover", onClick: () => {
    r("/manageDevices/deviceList");
  } }, import_react.default.createElement("div", { className: "label-item-name" }, e("new.authorization")), import_react.default.createElement(i0, { className: "arrow-right-icon", name: "arrow_right_icon" }))), import_react.default.createElement("div", { className: "category-title" }, e("account.security")), import_react.default.createElement("div", { className: "master-password-item" }, import_react.default.createElement("div", { className: "mp-header" }, import_react.default.createElement("div", { className: "mp-title" }, e("account.master_password")), import_react.default.createElement("div", { className: "mp-learn-more", onClick: ht }, e("account.learn_more"))), import_react.default.createElement("div", { className: "mp-content" }, import_react.default.createElement("div", { className: "mp-desc" }, e("account.master_password_tip")), !_ && import_react.default.createElement("div", { className: "mp-set", onClick: yt }, e("account.set"))), _ && import_react.default.createElement("div", { className: "label-item hover", onClick: ut }, import_react.default.createElement("div", { className: "label-item-name" }, e("account.change_master_password")), import_react.default.createElement(i0, { className: "arrow-right-icon", name: "arrow_right_icon" }))), import_react.default.createElement("div", { className: "verification-security" }, import_react.default.createElement("h3", null, e("account.verification_security")), import_react.default.createElement("p", null, e("account.verification_security_tip")), import_react.default.createElement("div", { className: "label-item" }, import_react.default.createElement("div", { className: "label-item-name" }, e("account.email")), ci(((S = t2 == null ? void 0 : t2.security_account) == null ? void 0 : S.email) || "") || import_react.default.createElement("div", { className: "label-item-btn", onClick: () => k("email") }, e("account.set"))), import_react.default.createElement("div", { className: "label-item" }, import_react.default.createElement("div", { className: "label-item-name" }, e("account.mobile")), li(((T3 = t2 == null ? void 0 : t2.security_account) == null ? void 0 : T3.phone) || "") || import_react.default.createElement("div", { className: "label-item-btn", onClick: () => k("phone") }, e("account.set")))), import_react.default.createElement("div", { className: "payment-security" }, import_react.default.createElement("h3", null, e("account.payment_security")), import_react.default.createElement("p", null, e("account.payment_password_hint")), (M = t2 == null ? void 0 : t2.security_account) != null && M.has_set_payment_password ? import_react.default.createElement(import_react.default.Fragment, null, import_react.default.createElement("div", { className: "label-item hover", onClick: () => r("/account/change-password") }, import_react.default.createElement("div", { className: "label-item-name" }, e("account.change_payment_password")), import_react.default.createElement(i0, { className: "arrow-right-icon", name: "arrow_right_icon" })), import_react.default.createElement("div", { className: "label-item hover", onClick: dt }, import_react.default.createElement("div", { className: "label-item-name" }, e("account.forgot_payment_password")), import_react.default.createElement(i0, { className: "arrow-right-icon", name: "arrow_right_icon" })), import_react.default.createElement("div", { className: "label-item hover", onClick: mt }, import_react.default.createElement("div", { className: "label-item-name" }, e("account.close_payment_password")), import_react.default.createElement(i0, { className: "arrow-right-icon", name: "arrow_right_icon" }))) : import_react.default.createElement("div", { className: "label-item" }, import_react.default.createElement("div", { className: "label-item-name" }, e("account.payment_password")), import_react.default.createElement("div", { className: "label-item-btn", onClick: () => {
    C ? v2() : m(true);
  } }, e("account.set"))))), import_react.default.createElement(N, { className: "footer-box-v2" }), import_react.default.createElement(it, { visible: h, setVisible: m, onBind: () => {
    r("/account/bind", { state: { accountType: t2 != null && t2.email ? "phone" : "email", showSwitch: true, redirectUrl: "/account/security" } });
  } }));
};
var no = Pt;
export {
  no as default
};
//# sourceMappingURL=security-GTF6BTDT-2L54YVT7.js.map
