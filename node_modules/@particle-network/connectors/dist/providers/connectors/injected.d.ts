import type { Chain } from '@particle-network/chains';
import type { DownloadUrls, EVMProvider, Wallet } from '../../types/types';
import { EVMConnector } from './base';
export declare class InjectedConnector extends EVMConnector {
    #private;
    constructor({ chains, getProvider }: {
        chains?: Chain[];
        getProvider?: () => any;
    });
    connect(): Promise<EVMProvider>;
    disconnect(): Promise<void>;
    getProvider(): Promise<any>;
    private onAccountsChanged;
    private onChainChanged;
    private onDisconnect;
}
export interface InjectedOptions {
    id: string;
    name: string;
    iconUrl: string;
    downloadUrls?: DownloadUrls;
}
export declare const injectedEVM: (option?: InjectedOptions) => Wallet;
