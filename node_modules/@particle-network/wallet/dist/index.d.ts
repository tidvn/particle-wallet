import { EntryPosition, type CustomEventHandler, type ProjectConfig, type WalletConfig, type WalletCore, type WalletOption } from './types';
declare class WalletEntryPlugin {
    #private;
    static WALLET_BTN_POSITION: string;
    private walletEntryOptions;
    private projectConfig;
    private walletCore;
    private customEventHandler;
    constructor();
    init(projectConfig: ProjectConfig, options?: WalletOption): void;
    setWalletCore(walletCore: WalletCore, customEventHandler?: CustomEventHandler): void;
    walletEntryCreate(): void;
    walletEntryDestroy(): void;
    getWalletUrl(options?: WalletConfig): string;
    /**
     *
     * @param params
     * @param params.windowSize large | small
     * @param params.pathName The path to the web wallet page, which is '/' by default.
     * @param params.query Go to the query parameter of the wallet page
     * @returns
     */
    openWallet(params?: {
        windowSize?: 'large' | 'small';
        pathName?: string;
        query?: {
            [key: string]: any;
        };
        topMenuType?: 'close' | 'fullscreen';
    }): void;
    setWalletIcon(): void;
    private updateIframeContentPosition;
    private setButtonStorageData;
    private getButtonStorageData;
    private updateWalletBtnPosition;
    closeWallet(): void;
    private resize;
    private sleep;
    private preload;
    private walletEntryRander;
    private destroy;
}
declare const walletEntryPlugin: WalletEntryPlugin;
export { EntryPosition, ProjectConfig, WalletConfig, WalletOption, walletEntryPlugin };
