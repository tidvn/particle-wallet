import { Auth, JsonRpcRequest } from '@particle-network/auth';
import { IEthereumProvider, IJsonRpcProvider, ProviderAccounts } from './types';
export declare class ParticleDelegateProvider extends IJsonRpcProvider implements IEthereumProvider {
    private auth;
    readonly signerProvider: IEthereumProvider;
    readonly isParticleDelegateProvider = true;
    private connection;
    private chainId;
    constructor(auth: Auth, signerProvider: IEthereumProvider);
    private listenEvent;
    private setConnection;
    disconnect(): Promise<void>;
    /**
     * Enable the provider by invoking the `eth_requestAccounts` RPC method.
     */
    enable(): Promise<ProviderAccounts>;
    request(request: Partial<JsonRpcRequest>): Promise<any>;
    private isParticleSignerMethod;
    private requestStrict;
    private open;
}
