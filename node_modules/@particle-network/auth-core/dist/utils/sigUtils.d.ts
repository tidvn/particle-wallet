/// <reference types="node" />
import { type ToBufferInputTypes } from '@ethereumjs/util';
import { SignTypedDataVersion, type MessageTypes, type TypedDataV1, type TypedMessage } from '../types';
export declare function personalSignHash({ data }: {
    data: ToBufferInputTypes;
}): Buffer;
export declare function signTypedDataHash<V extends SignTypedDataVersion, T extends MessageTypes>({ data, version, }: {
    data: V extends 'V1' ? TypedDataV1 : TypedMessage<T>;
    version: V;
}): Buffer;
/**
 * Convert a value to a Buffer. This function should be equivalent to the `toBuffer` function in
 * `ethereumjs-util@5.2.1`.
 *
 * @param value - The value to convert to a Buffer.
 * @returns The given value as a Buffer.
 */
export declare function legacyToBuffer(value: ToBufferInputTypes): Buffer;
