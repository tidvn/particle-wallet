{
  "version": 3,
  "sources": ["../src/context/hooks/useError.ts"],
  "sourcesContent": ["import { ApiError } from '@particle-network/auth-core';\nimport { Modal } from 'antd';\nimport { useAuthCoreModal } from '../../context';\nimport useMessage from './useMessage';\n\nexport function formatServerError(error: any): string | undefined {\n    if (error && error.error_code) {\n        let message = window?.particleI18n?.t?.(`error.server_${error.error_code}`);\n        if (message && message.startsWith('error.server_')) {\n            if (error?.extra && Array.isArray(error?.extra) && error?.extra.length) {\n                message = error?.extra[0];\n            } else {\n                message = error?.extra ?? error.message;\n            }\n            message = message.charAt(0).toUpperCase() + message.slice(1);\n            return message;\n        }\n        return message;\n    } else {\n        return error?.message;\n    }\n}\n\nexport const useError = () => {\n    const { authCoreModal } = useAuthCoreModal();\n\n    const message = useMessage();\n\n    /**\n     * error handler\n     * @param err\n     */\n    function errorHandle(err: any) {\n        console.log('errorHandle: ' + JSON.stringify(err));\n        const errorCode = err.error_code ?? err.code;\n        // \u5224\u65AD\u670D\u52A1\u5668\u54CD\u5E94\n        if (errorCode && typeof errorCode === 'number') {\n            if (\n                errorCode === ApiError.InvalidCode ||\n                errorCode === ApiError.ResendCode ||\n                errorCode === ApiError.SecurityAccountFrozen ||\n                errorCode === ApiError.WrongPaymentPassword\n            ) {\n                // Ignore error\n            } else {\n                const message = formatServerError(err);\n                if (message) {\n                    Modal.error({\n                        title: message,\n                        wrapClassName: 'auth-core-modal-error',\n                        getContainer: () => {\n                            return authCoreModal.rootBody as HTMLElement;\n                        },\n                    });\n                }\n            }\n        } else if (err.code === 'ECONNABORTED') {\n            if (err.message) {\n                message.error(err.message);\n            } else {\n                message.error('Network Error');\n            }\n        } else {\n            switch (err.status) {\n                case 401:\n                case 403:\n                case 404:\n                case 500:\n                    message.error('Http Error: ' + err.status);\n                    break;\n                default:\n                    if (err.message && typeof err.message === 'string') {\n                        message.error(err.message);\n                    } else {\n                        console.error('http error', err);\n                    }\n                    break;\n            }\n        }\n    }\n\n    return { errorHandle };\n};\n"],
  "mappings": ";;;;;;;;;AAAA,SAAS,gBAAgB;AACzB,SAAS,aAAa;AAIf,SAAS,kBAAkB,OAAgC;AALlE;AAMI,MAAI,SAAS,MAAM,YAAY;AAC3B,QAAI,WAAU,4CAAQ,iBAAR,mBAAsB,MAAtB,4BAA0B,gBAAgB,MAAM;AAC9D,QAAI,WAAW,QAAQ,WAAW,eAAe,GAAG;AAChD,WAAI,+BAAO,UAAS,MAAM,QAAQ,+BAAO,KAAK,MAAK,+BAAO,MAAM,SAAQ;AACpE,kBAAU,+BAAO,MAAM;AAAA,MAC3B,OAAO;AACH,mBAAU,oCAAO,UAAP,YAAgB,MAAM;AAAA,MACpC;AACA,gBAAU,QAAQ,OAAO,CAAC,EAAE,YAAY,IAAI,QAAQ,MAAM,CAAC;AAC3D,aAAO;AAAA,IACX;AACA,WAAO;AAAA,EACX,OAAO;AACH,WAAO,+BAAO;AAAA,EAClB;AACJ;AAEO,IAAM,WAAW,MAAM;AAC1B,QAAM,EAAE,cAAc,IAAI,iBAAiB;AAE3C,QAAM,UAAU,mBAAW;AAM3B,WAAS,YAAY,KAAU;AAhCnC;AAiCQ,YAAQ,IAAI,kBAAkB,KAAK,UAAU,GAAG,CAAC;AACjD,UAAM,aAAY,SAAI,eAAJ,YAAkB,IAAI;AAExC,QAAI,aAAa,OAAO,cAAc,UAAU;AAC5C,UACI,cAAc,SAAS,eACvB,cAAc,SAAS,cACvB,cAAc,SAAS,yBACvB,cAAc,SAAS,sBACzB;AAAA,MAEF,OAAO;AACH,cAAMA,WAAU,kBAAkB,GAAG;AACrC,YAAIA,UAAS;AACT,gBAAM,MAAM;AAAA,YACR,OAAOA;AAAA,YACP,eAAe;AAAA,YACf,cAAc,MAAM;AAChB,qBAAO,cAAc;AAAA,YACzB;AAAA,UACJ,CAAC;AAAA,QACL;AAAA,MACJ;AAAA,IACJ,WAAW,IAAI,SAAS,gBAAgB;AACpC,UAAI,IAAI,SAAS;AACb,gBAAQ,MAAM,IAAI,OAAO;AAAA,MAC7B,OAAO;AACH,gBAAQ,MAAM,eAAe;AAAA,MACjC;AAAA,IACJ,OAAO;AACH,cAAQ,IAAI,QAAQ;AAAA,QAChB,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACD,kBAAQ,MAAM,iBAAiB,IAAI,MAAM;AACzC;AAAA,QACJ;AACI,cAAI,IAAI,WAAW,OAAO,IAAI,YAAY,UAAU;AAChD,oBAAQ,MAAM,IAAI,OAAO;AAAA,UAC7B,OAAO;AACH,oBAAQ,MAAM,cAAc,GAAG;AAAA,UACnC;AACA;AAAA,MACR;AAAA,IACJ;AAAA,EACJ;AAEA,SAAO,EAAE,YAAY;AACzB;",
  "names": ["message"]
}
