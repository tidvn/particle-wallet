{
  "version": 3,
  "sources": ["../src/components/input-password/index.tsx", "../src/components/eyeIcon/index.tsx"],
  "sourcesContent": ["import { Input } from 'antd';\nimport React from 'react';\nimport { isAutoFocusSupported } from '../../utils';\nimport { isNullish } from '../../utils/common-utils';\nimport { EyeClose, EyeOpen } from '../eyeIcon';\nimport styles from './index.less';\n\ntype Prop = {\n    className?: string;\n    maxLength?: number;\n    defaultValue?: string;\n    onChange?: (value: string) => void;\n    onPressEnter?: (event: any) => void;\n    onBlur?: (event: any) => void;\n    autoFocus?: boolean;\n};\n\nconst InputPassword = (prop: Prop) => {\n    const inputRef = React.useRef<any>(null);\n\n    return (\n        <>\n            <style>{styles as unknown as string}</style>\n            <Input.Password\n                ref={inputRef}\n                className={'password-input' + (prop?.className ? ` ${prop?.className}` : '')}\n                iconRender={(visible) =>\n                    visible ? (\n                        <div>\n                            <EyeOpen />\n                        </div>\n                    ) : (\n                        <div>\n                            <EyeClose />\n                        </div>\n                    )\n                }\n                onChange={(e) => {\n                    if (prop?.onChange) {\n                        prop?.onChange?.(e.target.value);\n                    }\n                }}\n                defaultValue={prop?.defaultValue}\n                maxLength={prop?.maxLength || 20}\n                onPressEnter={(e) => prop?.onPressEnter?.(e)}\n                onBlur={(e) => prop?.onBlur?.(e)}\n                autoFocus={isNullish(prop?.autoFocus) && isAutoFocusSupported() ? true : prop?.autoFocus}\n            />\n        </>\n    );\n};\n\nexport default InputPassword;\n", "import React from 'react';\nimport SVGIcon from '../icon/svg-icon';\nimport styles from './index.less';\n\nconst EyeOpen = () => {\n    return (\n        <>\n            <style>{styles as unknown as string}</style>\n            <SVGIcon className=\"icon-eye\" name=\"eye_open\" />\n        </>\n    );\n};\nconst EyeClose = () => {\n    return (\n        <>\n            <style>{styles as unknown as string}</style>\n            <SVGIcon className=\"icon-eye\" name=\"eye_close\" />\n        </>\n    );\n};\n\nexport { EyeClose, EyeOpen };\n"],
  "mappings": ";;;;;;;;;;AAAA,SAAS,aAAa;AACtB,OAAOA,YAAW;;;ACDlB,OAAO,WAAW;;;;;;AAIlB,IAAM,UAAU,MAAM;AAClB,SACI,0DACI,oCAAC,eAAO,eAA4B,GACpC,oCAAC,oBAAQ,WAAU,YAAW,MAAK,YAAW,CAClD;AAER;AACA,IAAM,WAAW,MAAM;AACnB,SACI,0DACI,oCAAC,eAAO,eAA4B,GACpC,oCAAC,oBAAQ,WAAU,YAAW,MAAK,aAAY,CACnD;AAER;;;;;;ADFA,IAAM,gBAAgB,CAAC,SAAe;AAClC,QAAM,WAAWC,OAAM,OAAY,IAAI;AAEvC,SACI,gBAAAA,OAAA,cAAAA,OAAA,gBACI,gBAAAA,OAAA,cAAC,eAAO,sBAA4B,GACpC,gBAAAA,OAAA;AAAA,IAAC,MAAM;AAAA,IAAN;AAAA,MACG,KAAK;AAAA,MACL,WAAW,qBAAoB,6BAAM,aAAY,IAAI,6BAAM,cAAc;AAAA,MACzE,YAAY,CAAC,YACT,UACI,gBAAAA,OAAA,cAAC,aACG,gBAAAA,OAAA,cAAC,aAAQ,CACb,IAEA,gBAAAA,OAAA,cAAC,aACG,gBAAAA,OAAA,cAAC,cAAS,CACd;AAAA,MAGR,UAAU,CAAC,MAAM;AArCjC;AAsCoB,YAAI,6BAAM,UAAU;AAChB,6CAAM,aAAN,8BAAiB,EAAE,OAAO;AAAA,QAC9B;AAAA,MACJ;AAAA,MACA,cAAc,6BAAM;AAAA,MACpB,YAAW,6BAAM,cAAa;AAAA,MAC9B,cAAc,CAAC,MAAG;AA5ClC;AA4CqC,kDAAM,iBAAN,8BAAqB;AAAA;AAAA,MAC1C,QAAQ,CAAC,MAAG;AA7C5B;AA6C+B,kDAAM,WAAN,8BAAe;AAAA;AAAA,MAC9B,WAAW,UAAU,6BAAM,SAAS,KAAK,qBAAqB,IAAI,OAAO,6BAAM;AAAA;AAAA,EACnF,CACJ;AAER;AAEA,IAAOC,0BAAQ;",
  "names": ["React", "React", "input_password_default"]
}
