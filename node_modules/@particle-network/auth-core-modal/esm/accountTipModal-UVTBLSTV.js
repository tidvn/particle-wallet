"use client";
import "./chunk-4QYUCQME.js";
import {
  circle_close_default2 as circle_close_default,
  useAuthCoreModal,
  useParticleAuth
} from "./chunk-LHIZQ7JX.js";
import "./chunk-LQ53OFQ3.js";

// src/pages/account/accountTipModal/index.tsx
import { Button, Modal } from "antd";
import React from "react";
import { useTranslation } from "react-i18next";

// src/pages/account/accountTipModal/index.less
var accountTipModal_default = ".ant-modal-content .ant-modal-footer {\n  display: none;\n}\n.wrong-password-content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n.wrong-password-content .modal-title {\n  margin-top: 20px 0;\n  font-size: 22px;\n  line-height: 25px;\n  text-align: center;\n  color: var(--text-color);\n}\n.wrong-password-content .tip {\n  padding-right: 10px;\n  padding-left: 10px;\n  margin-top: 16px;\n  margin-bottom: 20px;\n  font-weight: 400;\n  font-size: 17px;\n  line-height: 1.3;\n  text-align: center;\n  color: var(--secondary-text-color);\n}\n.wrong-password-content .frozen-countdown {\n  margin-top: 12px;\n  margin-bottom: 22px;\n  font-weight: bold;\n  font-size: 24px;\n  color: var(--text-color);\n}\n.wrong-password-content .btn {\n  width: 100%;\n  height: 47px;\n  margin-top: 10px;\n  border: none;\n  border-radius: var(--primary-btn-border-radius);\n  font-weight: 500;\n  font-size: var(--primary-btn-font-size);\n  color: var(--primary-btn-color);\n  background: var(--primary-btn-background-color);\n  opacity: 1;\n}\n.wrong-password-content .btn.cancel {\n  color: var(--secondary-btn-color);\n  background: var(--secondary-btn-background-color);\n}\n.wrong-password-content .close-icon {\n  align-self: flex-end;\n}\n";

// src/pages/account/accountTipModal/index.tsx
var AccountTipModal = ({ modal }) => {
  var _a;
  const { visible, confirm } = modal;
  const { t } = useTranslation();
  const { setPaymentPassword, showAccountTipModal, modalOptions } = useParticleAuth();
  const { authCoreModal } = useAuthCoreModal();
  const setPassword = () => {
    showAccountTipModal({
      visible: false
    });
    setPaymentPassword();
  };
  const continueConfirm = () => {
    confirm == null ? void 0 : confirm();
    showAccountTipModal({
      visible: false
    });
  };
  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement("style", null, accountTipModal_default), /* @__PURE__ */ React.createElement(
    Modal,
    {
      open: visible,
      closable: false,
      centered: true,
      okButtonProps: { style: { display: "none" } },
      cancelButtonProps: { style: { display: "none" } },
      width: "90%",
      getContainer: () => {
        return authCoreModal.rootBody;
      }
    },
    /* @__PURE__ */ React.createElement("div", { className: "wrong-password-content" }, /* @__PURE__ */ React.createElement(
      circle_close_default,
      {
        className: "close-icon",
        onClick: () => showAccountTipModal({
          visible: false
        })
      }
    ), /* @__PURE__ */ React.createElement("h3", { className: "modal-title m-margin-top-40" }, t("account.account_modal1_title")), /* @__PURE__ */ React.createElement("div", { className: "tip" }, t("account.account_modal1_tip")), /* @__PURE__ */ React.createElement(Button, { className: "btn", onClick: setPassword }, t("account.account_modal1_btn1")), ((_a = modalOptions.promptSettingConfig) == null ? void 0 : _a.promptPaymentPasswordSettingWhenSign) !== 3 /* everyAndNotSkip */ && /* @__PURE__ */ React.createElement(Button, { className: "btn cancel", onClick: continueConfirm }, t("account.account_modal1_btn2")))
  ));
};
var accountTipModal_default2 = AccountTipModal;
export {
  accountTipModal_default2 as default
};
//# sourceMappingURL=accountTipModal-UVTBLSTV.js.map
