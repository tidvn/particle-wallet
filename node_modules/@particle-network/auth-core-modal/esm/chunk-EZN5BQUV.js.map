{
  "version": 3,
  "sources": ["../src/common/icon/circle_close.svg", "../src/api/model/authError.ts", "../src/utils/index.ts", "../src/context/types.ts", "../src/utils/chain-utils.ts", "../src/utils/common-utils.ts", "../src/components/icon/circle-close.tsx", "../src/api/getPublicAddress.ts", "../src/components/particle-drawer/index.tsx", "../src/context/index.tsx", "../src/components/customRouter/index.tsx", "../src/components/loading/index.tsx", "../src/components/particle-modal/index.tsx", "../src/components/particle-modal/authCoreModalContainer.tsx", "../src/i18n.ts", "../src/locales/resources.ts", "../src/utils/authorizeUtils.ts", "../src/utils/sendAnalyticsActive.ts"],
  "sourcesContent": ["import * as React from \"react\";\nfunction MyComponent(props) {\n  return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 28 28\" {...props}><circle cx={14} cy={14} r={14} opacity={0.08} /><rect width={1.368} height={12.992} rx={0.684} transform=\"rotate(-45 16.924 -5.61)\" /><rect width={1.368} height={12.992} rx={0.684} transform=\"rotate(45 -2.24 26.54)\" /></svg>;\n}\nexport default MyComponent;", "export class AuthError {\n    constructor(public code: number, public message: string) {\n        this.code = code;\n        this.message = message;\n    }\n\n    public static feeError() {\n        return new AuthError(8101, 'maxFeePerGas cannot be less than maxPriorityFeePerGas');\n    }\n\n    public static userRejectedRequest() {\n        return new AuthError(4001, 'The user rejected the request');\n    }\n\n    public static userCancelOperation() {\n        return new AuthError(4011, 'The user cancel the operation');\n    }\n\n    public static unauthorized() {\n        return new AuthError(4100, 'The requested method and/or account has not been authorized by the user');\n    }\n\n    public static systemError() {\n        return new AuthError(8001, 'System Error');\n    }\n\n    public static paramsError() {\n        return new AuthError(8002, 'Param error, see doc for more info');\n    }\n\n    public static notLogin() {\n        return new AuthError(8005, 'Please connect first!');\n    }\n\n    public static walletNotCreated() {\n        return new AuthError(8006, 'Wallet not created');\n    }\n\n    public static authorizeError() {\n        return new AuthError(8007, 'Authorize error');\n    }\n\n    public static network() {\n        return new AuthError(8011, 'Network error');\n    }\n\n    public static unknown(message: string) {\n        return new AuthError(9000, message);\n    }\n\n    public static pending(method: string) {\n        return new AuthError(-32002, `Request of type ${method} already pending, please wait.`);\n    }\n}\n", "import type { CountryCode } from 'libphonenumber-js/max';\nimport { isValidPhoneNumber, parsePhoneNumberWithError } from 'libphonenumber-js/max';\n\nexport const ipfsToSrc = (ipfs: string) => {\n    if (!ipfs || !ipfs.startsWith('ipfs://')) {\n        return ipfs || '';\n    }\n\n    return `https://ipfs.particle.network/${encodeURI(ipfs.slice(7))}`;\n};\n\nexport const EmailRegExp = /^\\w+([-+.]\\w+)*@[a-zA-Z0-9]+([.-][a-zA-Z0-9]+)*\\.[a-zA-Z0-9]+([.-][a-zA-Z0-9]+)*$/;\n\nexport const PhoneRegExp = /^[0-9]{4,16}$/;\n\nexport const PhoneE164Exp = /^\\+[1-9]\\d{4,14}$/;\n\nexport function isValidEmail(email?: string) {\n    if (email && EmailRegExp.test(email)) {\n        return email;\n    }\n}\n\nexport function isPhoneValid(phone: string, regionCode: string): boolean {\n    if (!phone || phone.length < 5) {\n        return false;\n    }\n    const countryCode = regionCode?.toUpperCase() as CountryCode;\n    const result = isValidPhoneNumber(phone, countryCode);\n    return result;\n}\n\nexport const isValidE164PhoneNumber = (phone: string | undefined) => {\n    if (phone && PhoneE164Exp.test(phone)) {\n        try {\n            if (isValidPhoneNumber(phone)) {\n                const e164Phone = parsePhoneNumberWithError(phone).format('E.164');\n                return e164Phone;\n            }\n        } catch (e) {\n            // ignore\n        }\n    }\n};\n\nexport function isValidCaptcha(code?: string) {\n    return code && code.match(/^\\d{6}$/);\n}\n\nexport const isAutoFocusSupported = () => {\n    return true;\n};\n\nexport const isMobile = () => {\n    if (isServer()) return false;\n    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n};\n\nexport const isServer = () => typeof window === 'undefined';\n\nexport const isClient = () => typeof window !== 'undefined';\n", "import type { AuthType, ERC4337Options, ServerError, UserInfo } from '@particle-network/auth-core';\nimport type { WalletOption } from '@particle-network/wallet';\nimport type { PromptSettingConfig } from '../api/model/bundle';\nimport type { CurrencyUnit, Theme } from '../types';\n\nexport type ViewType = 'desktop' | 'mobile';\n\nexport interface NavigateOptions {\n    replace?: boolean;\n    back?: boolean;\n    state?: any;\n}\n\nexport interface IAuthCoreModal {\n    rootModalContainer: HTMLDivElement | null;\n    rootBody: HTMLDivElement | null;\n    particleModalVisible: boolean;\n    viewType: ViewType;\n    closable?: boolean;\n}\n\nexport interface ICustomRouter {\n    path: string;\n    replace?: boolean;\n    state?: any;\n    history?: any[];\n    children?: React.ReactNode;\n}\n\nexport enum AuthCoreModalEvent {\n    Login = 'login', // \u767B\u5F55\n    LoginSuccess = 'loginSuccess', // \u767B\u5F55\u6210\u529F\n    LoginFail = 'loginFail', // \u767B\u5F55\u5931\u8D25\n    SignResponse = 'signResponse', // \u7B7E\u540D\u54CD\u5E94\n}\n\nexport type Language = 'en' | 'zh-cn' | 'ja' | 'ko' | 'zh-tw';\n\nexport interface ThemeStyle {\n    primaryBtnColor?: string;\n    primaryBtnBackgroundColor?: string;\n    secondaryBtnColor?: string;\n    secondaryBtnBackgroundColor?: string;\n    textColor?: string;\n    secondaryTextColor?: string;\n    themeBackgroundColor?: string;\n    iconBorderColor?: string;\n    accentColor?: string;\n    inputBackgroundColor?: string;\n    inputBorderColor?: string;\n    inputPlaceholderColor?: string;\n    cardBorderColor?: string;\n    cardUnclickableBackgroundColor?: string;\n    cardUnclickableBorderColor?: string;\n    cardDividerColor?: string;\n    tagBackgroundColor?: string;\n    modalBackgroundColor?: string;\n    tipsBackgroundColor?: string;\n}\n\nexport interface CustomStyle {\n    logo?: string;\n    projectName?: string;\n    subtitle?: string;\n    modalWidth?: number;\n    modalHeight?: number;\n    zIndex?: number;\n    primaryBtnBorderRadius?: number | string;\n    modalBorderRadius?: number | string;\n    cardBorderRadius?: number | string;\n    fontFamily?: string;\n    theme?: {\n        dark?: ThemeStyle;\n        light?: ThemeStyle;\n    };\n}\n\nexport interface AuthCoreModalOptions {\n    projectId: string;\n    clientKey: string;\n    appId: string;\n    authTypes?: AuthType[];\n    themeType?: Theme;\n    fiatCoin?: CurrencyUnit;\n    erc4337?: ERC4337Options;\n    language?: Language;\n    promptSettingConfig?: PromptSettingConfig;\n    customStyle?: CustomStyle;\n    wallet?: Omit<WalletOption, 'language' | 'erc4337'>;\n}\n\nexport type ConnectionStatus = 'loading' | 'connecting' | 'connected' | 'disconnected';\n\nexport type SocialConnectCallback = {\n    onSuccess?: (info: UserInfo) => void;\n    onError?: (error: ServerError | Error) => void;\n};\n\nexport interface OpenBuyOptions {\n    network?: string;\n    fiatCoin?: string;\n    cryptoCoin?: string;\n    fiatAmt?: number;\n    fixFiatCoin?: boolean;\n    fixCryptoCoin?: boolean;\n    fixFiatAmt?: boolean;\n    walletAddress?: string;\n}\n\nexport type OpenBuyOptionsKeys = keyof OpenBuyOptions;\n", "import { isHexString } from '@ethereumjs/util';\nimport { tronAddressFromHex } from '@particle-network/auth-core';\nimport { Ethereum, chains, type Chain, type ChainInfo } from '@particle-network/chains';\n\nexport const getChainDisplayName = (chain: Chain) => {\n    const chainInfo = getChainInfo(chain);\n    if (!chainInfo) {\n        return '';\n    }\n    if (chainInfo.network === 'Mainnet') {\n        return chainInfo.fullname.replace(' Mainnet', '');\n    } else {\n        return chainInfo.fullname;\n    }\n};\n\nexport function getNativeSymbol(chain: Chain): string {\n    return getChainInfo(chain)?.nativeCurrency?.symbol || '';\n}\n\nexport function getChainIcon(chain: Chain): string {\n    return formatPng(getChainInfo(chain)?.icon ?? defaultTokenIcon);\n}\n\nexport function getChainInfo(chain: Chain): ChainInfo | undefined {\n    return chains.getChainInfo(chain);\n}\n\nexport function getEvmChain(id: number) {\n    return chains.getEVMChainInfoById(id);\n}\n\nexport function getSolanaChain(id: number) {\n    return chains.getSolanaChainInfoById(id);\n}\n\nexport function formatAddress(address: string, chain: Chain): string {\n    if (isTron(chain) && isHexString(address)) {\n        return tronAddressFromHex(address);\n    }\n    return address;\n}\n\nexport const defaultTokenIcon = 'https://static.particle.network/token-list/defaultToken/default.png';\n\nexport function isSolana(chain: Chain) {\n    return chain.name.toLowerCase() === 'solana';\n}\n\nexport function isEvm(chain: Chain) {\n    return chain.name.toLowerCase() !== 'solana';\n}\n\nexport function isTron(chain?: Chain) {\n    return chain && chain.name.toLowerCase() === 'tron';\n}\n\nexport const formatPng = (src = '') => {\n    if (!src) return src;\n    return src + (src.includes('?') ? '&' : '?') + 'x-oss-process=image/format,png';\n};\n\nexport function getNativeTokenIcon(chain?: Chain): string {\n    if (chain) {\n        const chainInfo = getChainInfo(chain);\n        if (chainInfo) {\n            if (chainInfo.nativeCurrency.symbol === 'ETH') {\n                return Ethereum.icon;\n            } else {\n                return chainInfo?.nativeIcon || chainInfo?.icon || defaultTokenIcon;\n            }\n        } else {\n            return defaultTokenIcon;\n        }\n    }\n    return defaultTokenIcon;\n}\n", "import type { PrefixedHexString, ToBufferInputTypes } from '@ethereumjs/util';\nimport { bufferToHex, isHexString, toBuffer } from '@ethereumjs/util';\nimport { AuthType } from '@particle-network/auth-core';\nimport type BN from 'bn.js';\nimport { isValidPhoneNumber, parsePhoneNumber } from 'libphonenumber-js/max';\n\nexport function shortString(str: any): string {\n    if (Array.isArray(str)) {\n        str = '[' + str.toString() + ']';\n    }\n    if (str) {\n        if (typeof str.toString === 'function') {\n            str = str.toString();\n        }\n        if (str.length <= 10) {\n            return str;\n        }\n        return `${str.slice(0, 5)}...${str.slice(str.length - 5, str.length)}`;\n    }\n    return '';\n}\n\nexport const displayEmail = (email: string): string => {\n    if (!email) {\n        return '';\n    }\n    const parts = email.split('@');\n    if (parts[0].length <= 3) {\n        return `${parts[0]}****@${parts[1]}`;\n    } else {\n        return `${parts[0].slice(0, 3)}****@${parts[1]}`;\n    }\n};\n\nexport const displayPhone = (phone: string) => {\n    if (!phone) {\n        return '';\n    }\n    if (isValidPhoneNumber(phone)) {\n        const phoneNumber = parsePhoneNumber(phone);\n        const countryCode = phoneNumber.countryCallingCode;\n        const code = phoneNumber.nationalNumber.toString();\n\n        if (code && countryCode) {\n            const count = code.length >= 6 ? 3 : Math.floor(code.length / 2);\n            return `+${countryCode} ${code.slice(0, count)}****${code.slice(-count)}`;\n        }\n    }\n    return phone;\n};\n\ndeclare global {\n    interface String {\n        format(...params: string[]): string;\n        titleCase(): string;\n    }\n}\n\n/*eslint no-extend-native: [\"error\", { \"exceptions\": [\"String\"] }]*/\nString.prototype.format = function (...params: string[]): string {\n    const args = params;\n    return this.replace(/{(\\d+)}/g, function (match, number) {\n        return typeof args[number] != 'undefined' ? args[number] : match;\n    });\n};\n\nString.prototype.titleCase = function (): string {\n    if (this.length === 0) {\n        return '';\n    } else if (this.length === 1) {\n        return this.toUpperCase();\n    }\n\n    return this.slice(0, 1).toUpperCase() + this.slice(1);\n};\n\nexport function assert(condition: any, message?: any) {\n    if (!condition) {\n        throw new Error(message || 'Assertion failed');\n    }\n}\n\nexport function isSocialLogin(type: string): boolean {\n    return type !== AuthType.phone && type !== AuthType.email && type !== AuthType.jwt;\n}\n\n/**\n * Returns `true` if the given value is nullish.\n *\n * @param value - The value being checked.\n * @returns Whether the value is nullish.\n */\nexport function isNullish(value: any) {\n    return value === null || value === undefined;\n}\n\n/**\n * Convert a value to a Buffer.\n *\n * @param value - The value to convert to a Buffer.\n * @returns The given value as a Buffer.\n */\nexport function legacyToBuffer(value: ToBufferInputTypes) {\n    return typeof value === 'string' && !isHexString(value) ? Buffer.from(value) : toBuffer(value);\n}\n\nexport function toHexPrefixString(value: ToBufferInputTypes): PrefixedHexString {\n    if (typeof value === 'string' && isHexString(value)) {\n        return value;\n    } else {\n        return bufferToHex(legacyToBuffer(value));\n    }\n}\n\n/**\n * Convert BN to 0x-prefixed hex string.\n */\nexport function bnToHex(value: BN): PrefixedHexString {\n    return `0x${value.toString(16)}`;\n}\n\nexport function popupwindow(url: string, title: string, w: number, h: number): Window | null {\n    const left = screen.width / 2 - w / 2;\n    const top = screen.height / 2 - h / 2;\n    return window.open(\n        url,\n        title,\n        'toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=' +\n            w +\n            ', height=' +\n            h +\n            ', top=' +\n            top +\n            ', left=' +\n            left\n    );\n}\n\nexport function popupwindowNoLimit(url: string, title: string, w: number, h: number): Window | null {\n    const left = screen.width / 2 - w / 2;\n    const top = screen.height / 2 - h / 2;\n    return window.open(url, title, 'width=' + w + ', height=' + h + ', top=' + top + ', left=' + left);\n}\n\nexport function getVersion(): string {\n    const packages = require('./../../package.json');\n    return `webauth_${packages.version}`;\n}\n\nexport function isInIframe(): boolean {\n    return window.location !== window.parent.location;\n}\n\n/**\n * \u7A97\u53E3\u4FE1\u606F\u4F20\u9012\n */\nexport function authPostMessage(key: string, data: any) {\n    data = {\n        ...data,\n        name: key,\n        _: Date.now(),\n    };\n    try {\n        window.parent.postMessage(data, '*');\n    } catch (error) {\n        // pass\n    }\n    try {\n        window.opener.postMessage(data, '*');\n    } catch (error) {\n        // pass\n    }\n    try {\n        window.opener.parent.postMessage(data, '*');\n    } catch (error) {\n        // pass\n    }\n    sessionStorage.setItem(key, JSON.stringify(data));\n    localStorage.setItem(key, JSON.stringify(data));\n}\n\n/**\n * \u53E3\u4FE1\u606F\u63A5\u6536\n * @param key\n * @param cb\n * @returns\n */\nexport function authReceiveMessage(key: string, cb: any) {\n    const messageHandler = (event: any) => {\n        if (event instanceof MessageEvent || event instanceof StorageEvent) {\n            let data;\n            if (event instanceof MessageEvent) {\n                data = event.data;\n            } else {\n                // @ts-ignore\n                data = JSON.parse(event.newValue);\n            }\n\n            if (data?.name === key) {\n                const newData = {\n                    ...data,\n                    messageType: event instanceof MessageEvent ? 'message' : 'storage',\n                };\n                cb(newData);\n            }\n        }\n    };\n\n    window.addEventListener('message', messageHandler);\n    window.addEventListener('storage', messageHandler);\n\n    return {\n        destroyMessage() {\n            window.removeEventListener('message', messageHandler);\n            window.removeEventListener('storage', messageHandler);\n        },\n    };\n}\n", "import Icon from '@ant-design/icons';\nimport React from 'react';\nimport styles from './index.less';\n\nconst CircleClose = ({ className = '', ...others }) => {\n    const svg = require('../../common/icon/circle_close.svg').default;\n    return (\n        <>\n            <style>{styles as unknown as string}</style>\n            <Icon\n                className={className ? `circle-close-icon ${className}` : 'circle-close-icon'}\n                //@ts-ignore\n                component={svg}\n                {...others}\n            />\n        </>\n    );\n};\n\nexport default CircleClose;\n", "import { getSmartAccountAddress, tronAddressFromHex, type ERC4337Options } from '@particle-network/auth-core';\nimport { chains } from '@particle-network/chains';\nimport { isTron } from '../utils/chain-utils';\n\ntype Options = {\n    chainId?: number;\n    erc4337?: ERC4337Options;\n};\n\nexport const getEVMPublicAddress = async ({ chainId, erc4337 }: Options): Promise<string> => {\n    const id = chainId || Number(window.particleAuth?.ethereum.chainId);\n    let address;\n    if (erc4337) {\n        address = await getSmartAccountAddress(erc4337);\n    } else {\n        if (typeof window !== 'undefined') {\n            address = window.particleAuth?.ethereum.selectedAddress;\n        }\n    }\n\n    if (isTron(chains.getEVMChainInfoById(id))) {\n        address = tronAddressFromHex(address);\n    }\n    return address || '';\n};\n", "import { Drawer } from 'antd';\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { useAuthCoreModal } from '../../context';\nimport { isMobile } from '../../utils';\nimport CircleClose from '../icon/circle-close';\nimport styles from './index.less';\n\ninterface IProps {\n    children?: React.ReactNode;\n    onClose: () => void;\n    visible: boolean;\n    title?: string;\n    [key: string]: any;\n}\nconst ParticleDrawer = (props: IProps) => {\n    const { title, children, onClose, visible, ...rest } = props;\n    const [mobile, setMobile] = useState<boolean>(isMobile());\n    const { authCoreModal } = useAuthCoreModal();\n    const dropDownRef = useRef({\n        isDown: false,\n        moveY: 0,\n    });\n    const drawerContentRef = useRef<HTMLDivElement>(null);\n\n    const className = useMemo(() => {\n        const classNames = [\n            props.className,\n            `particle-${mobile ? 'mobile' : 'pc'}-drawer`,\n            'particle-drawer-container',\n        ];\n        return classNames.join(' ');\n    }, [props.className, mobile]);\n\n    const isScroll = (target: HTMLElement) => {\n        let parentElement: HTMLElement | null = target;\n        let flag = false;\n        while (parentElement) {\n            parentElement = parentElement.parentElement;\n            if (parentElement?.classList.contains('ant-drawer-body')) {\n                break;\n            }\n            if (parentElement?.scrollTop) {\n                flag = true;\n                break;\n            }\n        }\n        return flag;\n    };\n\n    const drawerContainer = useMemo(() => {\n        return props.containerSelector\n            ? document.querySelector(props.containerSelector)\n            : authCoreModal.rootModalContainer || document.querySelector('body');\n    }, [props.containerSelector, authCoreModal.rootModalContainer]);\n\n    useEffect(() => {\n        if (!mobile || !drawerContentRef?.current) {\n            return;\n        }\n        const touchstartHandler = (e: TouchEvent) => {\n            if (e.type === 'touchstart' && isScroll(e.target as HTMLElement)) {\n                return;\n            }\n            const clientY = e.touches[0].clientY;\n            e.stopPropagation();\n            dropDownRef.current.isDown = true;\n            dropDownRef.current.moveY = clientY;\n        };\n\n        if (visible) {\n            drawerContentRef?.current?.addEventListener('touchstart', touchstartHandler);\n        }\n\n        if (!visible) {\n            drawerContentRef?.current?.removeEventListener('touchstart', touchstartHandler);\n            dropDownRef.current.isDown = false;\n            dropDownRef.current.moveY = 0;\n        }\n\n        return () => {\n            drawerContentRef?.current?.removeEventListener('touchstart', touchstartHandler);\n            dropDownRef.current.isDown = false;\n            dropDownRef.current.moveY = 0;\n        };\n    }, [visible, mobile, drawerContentRef?.current]);\n\n    useEffect(() => {\n        if (!mobile || !drawerContentRef?.current) {\n            return;\n        }\n        const touchendHandler = (e: TouchEvent) => {\n            if (dropDownRef.current.isDown) {\n                e.stopPropagation();\n                dropDownRef.current.isDown = false;\n            }\n        };\n\n        const touchmoveHandler = (e: TouchEvent) => {\n            e.preventDefault();\n            const clientY = e.touches[0].clientY;\n            if (dropDownRef.current.isDown && clientY - dropDownRef.current.moveY > 60) {\n                onClose();\n            }\n        };\n\n        drawerContentRef?.current?.addEventListener('touchend', touchendHandler);\n\n        drawerContentRef?.current?.addEventListener('touchmove', touchmoveHandler, { passive: true });\n\n        return () => {\n            drawerContentRef?.current?.removeEventListener('touchend', touchendHandler);\n            drawerContentRef?.current?.removeEventListener('touchmove', touchmoveHandler);\n        };\n    }, [mobile, drawerContentRef?.current]);\n\n    useEffect(() => {\n        const resizeHandler = () => {\n            setMobile(isMobile());\n        };\n        window.addEventListener('resize', resizeHandler);\n        return () => {\n            window.removeEventListener('resize', resizeHandler);\n        };\n    }, []);\n\n    return (\n        <Drawer\n            onClose={onClose}\n            open={visible}\n            {...rest}\n            className={className}\n            destroyOnClose={false}\n            getContainer={() => {\n                return rest?.getContainer?.() || drawerContainer;\n            }}\n        >\n            <div className=\"particle-drawer-content\" ref={drawerContentRef}>\n                <style>{styles as unknown as string}</style>\n                <CircleClose\n                    data-mobile={mobile}\n                    className=\"close-icon\"\n                    onClick={() => {\n                        onClose();\n                    }}\n                />\n                <div className=\"particle-close-btn\" data-mobile={mobile}></div>\n                {title && <div className=\"particle-title\">{title}</div>}\n                {children}\n            </div>\n        </Drawer>\n    );\n};\n\nexport default ParticleDrawer;\n", "import type { UserInfo } from '@particle-network/auth-core';\nimport {\n    AuthCoreEvent,\n    EvmRpcMethod,\n    SolanaRpcMethod,\n    connect,\n    getConnectCaptcha,\n    getUserInfo,\n    hasPaymentPassword,\n    isConnected,\n    particleAuth,\n    syncUserInfo,\n} from '@particle-network/auth-core';\nimport { useSetState, useSize } from 'ahooks';\nimport base58 from 'bs58';\nimport { EventEmitter } from 'events';\nimport React, { createContext, useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport root from 'react-shadow';\nimport { AuthError } from '../api/model/authError';\nimport CustomRouter, { AuthPage } from '../components/customRouter';\nimport ParticleModal from '../components/particle-modal';\nimport AuthCoreModalContainer from '../components/particle-modal/authCoreModalContainer';\nimport i18n, { i18nInit } from '../i18n';\nimport type { AccountTipModalProps } from '../pages/account/accountTipModal';\nimport type { PaymentVerify } from '../pages/account/paymentVerifyModal';\nimport type { WrongPasswordInfo } from '../pages/account/wrongPasswordModal';\nimport type { LoginAuthorization, SolanaAuthorization } from '../types/connectOptions';\nimport { isServer } from '../utils';\nimport authorizeUtils from '../utils/authorizeUtils';\nimport { isSolana } from '../utils/chain-utils';\nimport { toHexPrefixString } from '../utils/common-utils';\nimport { sendAnalyticsActive } from '../utils/sendAnalyticsActive';\nimport type {\n    AuthCoreModalOptions,\n    ConnectionStatus,\n    IAuthCoreModal,\n    ICustomRouter,\n    NavigateOptions,\n    SocialConnectCallback,\n    ViewType,\n} from './types';\nimport { AuthCoreModalEvent } from './types';\n\nconst IframeWalletPlugin = React.lazy(() => import('./iframeWalletPlugin'));\nconst AccountTipModal = React.lazy(() => import('../pages/account/accountTipModal'));\nconst PaymentVerifyModal = React.lazy(() => import('../pages/account/paymentVerifyModal'));\nconst WrongPasswordModal = React.lazy(() => import('../pages/account/wrongPasswordModal'));\nconst SelectSecurityAccount = React.lazy(() => import('../pages/account/selectSecurityAccount'));\n\nif (!isServer()) {\n    // @ts-ignore\n    window.particleI18n = i18n;\n}\n\nexport const defaultModalOptions = {\n    projectId: '',\n    clientKey: '',\n    appId: '',\n    themeType: 'light',\n    language: 'en',\n    fiatCoin: 'USD',\n    promptSettingConfig: {\n        promptPaymentPasswordSettingWhenSign: 1,\n        promptMasterPasswordSettingWhenLogin: 0,\n    },\n    customStyle: {\n        modalWidth: 400,\n        modalHeight: 650,\n    },\n    wallet: { visible: true, themeType: 'light' },\n};\n\ninterface GlobalState {\n    connectionStatus: ConnectionStatus;\n    setConnectionStatus: (status: ConnectionStatus) => void;\n    userInfo?: UserInfo;\n    modalOptions: AuthCoreModalOptions;\n    setModalOptions: (options: any) => void;\n    showSelectSecurityAccount: (display: boolean, state?: any) => void;\n    setWrongPassword: (info: WrongPasswordInfo) => void;\n    setPaymentVerify: (props: PaymentVerify) => void;\n    showAccountTipModal: (props: AccountTipModalProps) => void;\n    setPaymentPassword: () => void;\n    loginSuccessRedirectToApp: () => void;\n    events: EventEmitter;\n    authCoreModal: IAuthCoreModal;\n    setAuthCoreModal: (params: any) => void;\n    customRouter: ICustomRouter;\n    setCustomRouter: (params: any) => void;\n    customNavigate: (url: string | number, options?: NavigateOptions) => void;\n    setLoginAuthorization: (loginAuthorization?: LoginAuthorization) => void;\n    authCoreModalClose: () => void;\n    socialConnectCallback?: SocialConnectCallback;\n    setSocialConnectCallback: (callback?: SocialConnectCallback) => void;\n}\n\nconst defaultData: GlobalState = {\n    connectionStatus: 'loading',\n    setConnectionStatus: (status) => {},\n    modalOptions: defaultModalOptions as AuthCoreModalOptions,\n    setModalOptions: (options) => {},\n    showSelectSecurityAccount: (display) => {},\n    setWrongPassword: (info) => {},\n    setPaymentVerify: (props) => {},\n    showAccountTipModal: (props) => {},\n    setPaymentPassword: () => {},\n    loginSuccessRedirectToApp: () => {},\n    events: {} as any,\n    authCoreModal: {} as IAuthCoreModal,\n    setAuthCoreModal: (params) => {},\n    customRouter: {\n        path: '/',\n    } as ICustomRouter,\n    setCustomRouter: (params) => {},\n    customNavigate: (url, options) => {},\n    setLoginAuthorization: (authorization) => {},\n    authCoreModalClose: () => {},\n    setSocialConnectCallback: () => {},\n};\n\nexport const GlobalContext = createContext<GlobalState>(defaultData);\n\nexport const AuthCoreContextProvider = (props: { options: AuthCoreModalOptions; children: React.ReactNode }) => {\n    const [userInfo, setUserInfo] = useState<UserInfo | undefined>();\n    const rootRef = React.useRef<HTMLDivElement>(null);\n    const [events] = useState(new EventEmitter());\n\n    const [styles, setStyles] = useState<any>({\n        styleList: [\n            {\n                name: 'antStyle',\n                loadStyle: () => import('../../../../node_modules/antd/dist/antd.css'),\n                styleContent: '',\n            },\n            {\n                name: 'globalStyle',\n                loadStyle: () => import('../common/style/global.scss'),\n                styleContent: '',\n            },\n            {\n                name: 'scrollStyle',\n                loadStyle: () => import('../common/style/scroll.scss'),\n                styleContent: '',\n            },\n            {\n                name: 'themeStyle',\n                loadStyle: () => import('../common/style/theme.scss'),\n                styleContent: '',\n            },\n        ],\n    });\n\n    const [modalOptions, setModalOptions] = useSetState<AuthCoreModalOptions>({\n        ...(defaultModalOptions as AuthCoreModalOptions),\n    });\n\n    const [selectSecurityAccount, setSelectSecurityAccount] = useState(false);\n\n    const [verifySecurityAccountState, setVerifySecurityAccountState] = useState<any>();\n\n    const [wrongPassword, setWrongPassword] = useState<WrongPasswordInfo>({ visible: false });\n\n    const [accountTipModal, setAccountTipModal] = useState<AccountTipModalProps>({\n        visible: false,\n    });\n\n    const initParticleAuthRef = React.useRef<any>(false);\n\n    const [paymentVerify, setPaymentVerify] = useState<PaymentVerify>({ visible: false });\n\n    const [loginAuthorization, setLoginAuthorization] = useState<LoginAuthorization>();\n\n    const [connectionStatus, setConnectionStatus] = useState<ConnectionStatus>(defaultData.connectionStatus);\n\n    const showSelectSecurityAccount = (display: boolean, state?: any) => {\n        setVerifySecurityAccountState(state);\n        setSelectSecurityAccount(display);\n    };\n\n    const showAccountTipModal = (props: AccountTipModalProps) => {\n        setAccountTipModal(props);\n    };\n\n    const loadStyles = () => {\n        const fns = styles.styleList.map((item: any) => {\n            return item?.loadStyle?.();\n        });\n        Promise.all(fns).then((styles: any) => {\n            const styleList = styles.map((item: any) => {\n                return {\n                    styleContent: item.default,\n                };\n            });\n            setStyles({\n                styleList,\n            });\n        });\n    };\n\n    const [customRouter, setCustomRouter] = useSetState<ICustomRouter>({ path: '/' });\n    const [authCoreModal, setAuthCoreModal] = useSetState<IAuthCoreModal>({\n        viewType: 'mobile' as ViewType,\n        particleModalVisible: false,\n        rootModalContainer: null,\n        rootBody: null,\n        closable: true,\n    });\n\n    const customNavigate = useCallback(\n        (url: string | number, options?: NavigateOptions) => {\n            if (typeof url === 'string' && url !== '/') {\n                url = url.replace(/^\\//, '');\n            }\n\n            console.log('customNavigate', url, options);\n\n            let { history } = customRouter;\n\n            if (!history) {\n                history = [];\n            }\n\n            if (options?.back === true) {\n                if (\n                    typeof url === 'string' &&\n                    !!history.find((item: any) => item.path.replace(/^\\//, '') === (url as string).replace(/^\\//, ''))\n                ) {\n                    url = history.findIndex((item) => item.path === url) - history.length + 1;\n                }\n            }\n\n            if (typeof url === 'string') {\n                if (url !== AuthPage.Login && url !== AuthPage.Index && !isConnected()) {\n                    throw AuthError.notLogin();\n                }\n\n                const { replace = false, state = {} } = options || {};\n\n                if (history.length && replace) {\n                    history.pop();\n                }\n\n                history.push({\n                    path: url,\n                    state,\n                    updateAt: new Date().getTime(),\n                });\n\n                setCustomRouter({\n                    path: url,\n                    replace,\n                    state,\n                    history,\n                });\n            } else if (typeof url === 'number' && history.length > 0) {\n                for (let i = 0; i < Math.abs(url); i++) {\n                    history.pop();\n                }\n\n                if (history.length === 0) {\n                    setAuthCoreModal({\n                        particleModalVisible: false,\n                    });\n                    return;\n                }\n\n                const route = history[history.length - 1];\n                setCustomRouter({\n                    path: route?.path,\n                    replace: false,\n                    state: route?.state,\n                    history,\n                });\n            }\n        },\n        [customRouter, setAuthCoreModal, setCustomRouter]\n    );\n\n    const setPaymentPassword = useCallback(() => {\n        if (userInfo?.security_account?.has_set_payment_password) {\n            return;\n        }\n        if (!userInfo?.security_account?.email && !userInfo?.security_account?.phone) {\n            customNavigate('/account/bind', {\n                state: {\n                    accountType: userInfo?.email ? 'phone' : 'email',\n                    showSwitch: true,\n                    redirectUrl: '/account/set-password',\n                },\n            });\n            return;\n        }\n        if (userInfo?.security_account?.email && userInfo?.security_account?.phone) {\n            showSelectSecurityAccount(true);\n        } else {\n            customNavigate('/account/set-password', {\n                state: {\n                    account: userInfo?.security_account?.email || userInfo?.security_account?.phone,\n                },\n            });\n        }\n    }, [userInfo, customNavigate]);\n\n    const loginSuccessRedirectToApp = useCallback(() => {\n        console.log('login success', 'redirectToApp');\n\n        let authorizeResult;\n        if (loginAuthorization && authorizeUtils.isNeedAuthorize(loginAuthorization)) {\n            if (hasPaymentPassword()) {\n                if (isSolana(loginAuthorization.chain)) {\n                    const message = (loginAuthorization.authorization as SolanaAuthorization).message;\n                    customNavigate(AuthPage.SolanaSign, {\n                        state: {\n                            method: SolanaRpcMethod.signMessage,\n                            param: base58.decode(message),\n                            loginAuthorizationSign: true,\n                        },\n                    });\n                } else {\n                    authorizeUtils\n                        .generateMessage(loginAuthorization.chain, modalOptions.erc4337)\n                        .then((message) => {\n                            customNavigate(AuthPage.EvmSign, {\n                                state: {\n                                    method: loginAuthorization.authorization.uniq\n                                        ? EvmRpcMethod.personalSignUniq\n                                        : EvmRpcMethod.personalSign,\n                                    param: toHexPrefixString(message),\n                                    loginAuthorizationSign: true,\n                                },\n                            });\n                        })\n                        .catch((error) => {\n                            events.emit(AuthCoreModalEvent.LoginFail, error);\n                        });\n                }\n                return;\n            } else {\n                authorizeUtils\n                    .authorize(loginAuthorization, modalOptions.erc4337)\n                    .then((result) => {\n                        events.emit(AuthCoreModalEvent.LoginSuccess, {\n                            ...userInfo,\n                            authorization: result,\n                        });\n                    })\n                    .catch((error) => {\n                        events.emit(AuthCoreModalEvent.LoginFail, error);\n                    });\n            }\n        } else {\n            events.emit(AuthCoreModalEvent.LoginSuccess, {\n                ...(userInfo ?? getUserInfo()),\n                authorization: authorizeResult,\n            });\n        }\n    }, [customNavigate, events, userInfo, modalOptions.erc4337, loginAuthorization]);\n\n    const authCoreModalClose = () => {\n        if (events.listenerCount(AuthCoreModalEvent.SignResponse) > 0) {\n            events.emit(AuthCoreModalEvent.SignResponse, {\n                error: AuthError.userRejectedRequest(),\n            });\n        }\n\n        if (events.listenerCount(AuthCoreModalEvent.LoginSuccess)) {\n            if (customRouter?.path === AuthPage.Login || !userInfo) {\n                events.emit(AuthCoreModalEvent.LoginFail, AuthError.userCancelOperation());\n            } else {\n                events.emit(AuthCoreModalEvent.LoginSuccess, userInfo);\n            }\n        }\n\n        setAuthCoreModal({\n            particleModalVisible: false,\n        });\n    };\n\n    const getPageHTML = () => {\n        let htmlContent = rootRef.current?.outerHTML || '';\n        const path = rootRef.current?.getAttribute('data-path');\n        htmlContent = Buffer.from(htmlContent).toString('base64');\n        console.log('getPageHTML', path, htmlContent.substring(0, 30) + '...');\n        return htmlContent;\n    };\n\n    const fontStyle = useMemo(() => {\n        let style = '';\n        if (!isServer()) {\n            const bodyFontFamily = window.getComputedStyle(window.document.body).fontFamily;\n            const fontFamily =\n                props.options?.customStyle?.fontFamily ||\n                bodyFontFamily ||\n                '\"PingFang SC\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif';\n\n            style = ` \n                            .particle-auth-core-shadow-root {\n                                --auth-core-font-family: ${fontFamily};\n                            }\n                        `;\n        }\n\n        return style;\n    }, [props.options?.customStyle?.fontFamily]);\n\n    // \u81EA\u5B9A\u4E49 \u4E3B\u9898\n    const customThemeStyle = useMemo(() => {\n        const themeType = modalOptions.themeType;\n        const customStyle = modalOptions.customStyle || {};\n\n        const theme = {\n            ...Object.fromEntries(\n                Object.keys(customStyle || {})\n                    .filter((key) => key !== 'theme')\n                    .map((key) => {\n                        return [key, (customStyle as any)?.[key] || ''];\n                    })\n            ),\n\n            ...(customStyle?.theme?.[themeType === 'light' ? 'light' : 'dark'] || {}),\n        };\n\n        const styleContent = Object.keys(theme)\n            .filter((key) => key !== 'fontFamily')\n            .map((key) => {\n                const name = key.replace(/([A-Z])/g, '-$1').toLowerCase();\n                let value = theme[key as keyof typeof theme];\n                if (!isNaN(Number(value))) {\n                    value = value + 'px';\n                }\n                return `--${name}:${value};`;\n            })\n            .join('\\n');\n\n        if (themeType === 'dark') {\n            return `.particle-auth-core-shadow-root.dark{\n                    ${styleContent}\n                }`;\n        }\n\n        return `.particle-auth-core-shadow-root{\n            ${styleContent}\n        }`;\n    }, [modalOptions.themeType, modalOptions.customStyle]);\n\n    useEffect(() => {\n        setModalOptions({\n            ...defaultData.modalOptions,\n            ...props.options,\n            promptSettingConfig: {\n                ...defaultData.modalOptions.promptSettingConfig,\n                ...props.options.promptSettingConfig,\n            },\n            customStyle: {\n                ...defaultData.modalOptions.customStyle,\n                ...props.options.customStyle,\n            },\n        });\n    }, [props.options, setModalOptions]);\n\n    useEffect(() => {\n        // \u5F39\u51FA\u7A97\u53E3\u540E \u9501\u5B9Abody \u6EDA\u52A8\n        if (!document.querySelector('.particle-auth-core-body-style')) {\n            const style = document.createElement('style');\n            style.classList.add('particle-auth-core-body-style');\n            const styleContent = `.particle-modal-lock {\n                overflow: hidden !important;\n            }`;\n            style.innerHTML = styleContent;\n            document.head.appendChild(style);\n        }\n\n        if (authCoreModal.particleModalVisible) {\n            document.body.classList.add('particle-modal-lock');\n            const rootBody = authCoreModal.rootModalContainer?.querySelector(\n                '.root-particle-modal-container .ant-drawer-body,.root-particle-modal-container .ant-modal-body'\n            ) as HTMLDivElement;\n            setAuthCoreModal({\n                rootBody,\n            });\n        } else {\n            // \u5173\u95EDrootModal\u5F39\u7A97\u540E\uFF0C\u5EF6\u65F6\u6E05\u7A7A\u8DEF\u7531\n            setTimeout(() => {\n                setCustomRouter({\n                    path: '/',\n                    history: [],\n                });\n            }, 100);\n            document.body.classList.remove('particle-modal-lock');\n        }\n    }, [authCoreModal.particleModalVisible, authCoreModal.rootModalContainer]);\n\n    const bodySze = useSize(isServer() ? null : document.body);\n\n    useEffect(() => {\n        // \u8BBE\u7F6EviewType \u4E3A\u5168\u5C40\u53D8\u91CF desktop | mobile\n        let viewType: ViewType = 'mobile';\n        if (document.body.clientWidth >= 600) {\n            viewType = 'desktop';\n        }\n        setAuthCoreModal({\n            viewType,\n        });\n    }, [bodySze]);\n\n    useEffect(() => {\n        if (customRouter?.path && customRouter?.path != '/') {\n            // \u8DEF\u7531 path \u4E0D\u4E3A / \u65F6\uFF0C\u6253\u5F00rootModal\u5F39\u7A97\n            setAuthCoreModal({\n                particleModalVisible: true,\n            });\n        }\n    }, [customRouter?.path]);\n\n    useEffect(() => {\n        // \u8BBE\u7F6E\u6A21\u6001\u6846\u7684\u5BBD\u5EA6\u548C\u9AD8\u5EA6\uFF0C\u54CD\u5E94\u79FB\u52A8\u7AEF\u89C6\u56FE\n        if (rootRef.current) {\n            const minWidth = 300;\n            const minHeight = 500;\n            let modalWidth = Math.max(minWidth, Number(modalOptions.customStyle?.modalWidth));\n            let modalHeight = Math.max(minHeight, Number(modalOptions.customStyle?.modalHeight));\n\n            if (authCoreModal.viewType == 'mobile') {\n                modalWidth = document.body.clientWidth;\n                modalHeight = document.body.clientHeight * 0.86;\n            }\n            const vm = modalWidth / 100;\n            rootRef.current.style.setProperty('--vw', vm + 'px');\n            rootRef.current.style.setProperty('--doc-height', modalHeight + 'px');\n            rootRef.current.style.setProperty('--doc-width', modalWidth + 'px');\n        }\n    }, [\n        rootRef.current,\n        authCoreModal.viewType,\n        modalOptions.customStyle?.modalWidth,\n        modalOptions.customStyle?.modalHeight,\n    ]);\n\n    useEffect(() => {\n        setTimeout(() => {\n            i18n.changeLanguage(modalOptions.language || 'en');\n        });\n    }, [modalOptions.language]);\n\n    useEffect(() => {\n        const onMasterPasswordChange = () => {\n            customNavigate(AuthPage.MasterPasswordVerify);\n        };\n        window?.particleAuth?.on(AuthCoreEvent.MasterPasswordChanged, onMasterPasswordChange);\n        return () => {\n            window?.particleAuth?.off(AuthCoreEvent.MasterPasswordChanged, onMasterPasswordChange);\n        };\n    }, [customRouter.history, customNavigate]);\n\n    useEffect(() => {\n        i18nInit(modalOptions.language || 'en');\n\n        const userInfoChanged = (userInfo: UserInfo) => {\n            setUserInfo(userInfo);\n        };\n        const onDisconnect = (error?: Error) => {\n            setUserInfo(undefined);\n            if (events.listenerCount(AuthCoreModalEvent.SignResponse) > 0) {\n                // \u5982\u679C\u6709\u76D1\u542CsignResponse\u4E8B\u4EF6\uFF0C\u8BF4\u660E\u662F\u5728\u7B7E\u540D\u4E2D\u65AD\uFF0C\u9700\u8981\u89E6\u53D1signResponse\u4E8B\u4EF6\n                events.emit(AuthCoreModalEvent.SignResponse, {\n                    error: error || AuthError.notLogin(),\n                });\n            }\n            setAuthCoreModal({\n                particleModalVisible: false,\n            });\n        };\n\n        window?.particleAuth?.on(AuthCoreEvent.UserInfoChanged, userInfoChanged);\n        window?.particleAuth?.on(AuthCoreEvent.ParticleAuthDisconnect, onDisconnect);\n        return () => {\n            window?.particleAuth?.off(AuthCoreEvent.UserInfoChanged, userInfoChanged);\n            window?.particleAuth?.off(AuthCoreEvent.ParticleAuthDisconnect, onDisconnect);\n        };\n    }, []);\n\n    if (!initParticleAuthRef.current) {\n        // authCore \u521D\u59CB\u5316\n        particleAuth.init({\n            projectId: modalOptions.projectId || props.options.projectId,\n            clientKey: modalOptions.clientKey || props.options.clientKey,\n            appId: modalOptions.appId || props.options.appId,\n        });\n        const info = getUserInfo();\n        setUserInfo(info);\n        initParticleAuthRef.current = true;\n        sendAnalyticsActive('open', info);\n    }\n\n    useEffect(() => {\n        if (isConnected()) {\n            syncUserInfo().catch((e) => console.error('syncUserInfo', e));\n        }\n        loadStyles();\n    }, []);\n\n    if (!isServer()) {\n        // @ts-ignore\n        window.__getConnectCaptcha = getConnectCaptcha;\n        // @ts-ignore\n        window.__connect = connect;\n        // @ts-ignore\n        window.__getUserInfo = getUserInfo;\n        // @ts-ignore\n        window.__getPageHTML = getPageHTML;\n        // @ts-ignore\n        window.__navigate = customNavigate;\n    }\n\n    useEffect(() => {\n        console.log('\uD83D\uDE80 ~ AuthCoreContextProvider ~ connectionStatus:', connectionStatus);\n    }, [connectionStatus]);\n\n    const [socialConnectCallback, setSocialConnectCallback] = useState<SocialConnectCallback>();\n\n    return (\n        <GlobalContext.Provider\n            value={{\n                connectionStatus,\n                setConnectionStatus,\n                userInfo,\n                modalOptions,\n                setModalOptions,\n                showSelectSecurityAccount,\n                setWrongPassword,\n                setPaymentVerify,\n                showAccountTipModal,\n                setPaymentPassword,\n                loginSuccessRedirectToApp,\n                events,\n                authCoreModal,\n                setAuthCoreModal,\n                customRouter,\n                setCustomRouter,\n                customNavigate,\n                setLoginAuthorization,\n                authCoreModalClose,\n                socialConnectCallback,\n                setSocialConnectCallback,\n            }}\n        >\n            {props.children}\n\n            {isServer() ? (\n                <div></div>\n            ) : (\n                <root.div mode=\"closed\">\n                    <div\n                        className={`particle-auth-core-shadow-root ${modalOptions.themeType}`}\n                        data-path={customRouter?.path}\n                        ref={rootRef}\n                    >\n                        <style data-name=\"fontStyle\">{fontStyle}</style>\n                        {!!styles.styleList[0].styleContent &&\n                            styles.styleList.map((item: any, index: number) => {\n                                return (\n                                    <style data-name={item.name} data-index={index} key={index}>\n                                        {item.styleContent}\n                                    </style>\n                                );\n                            })}\n                        <style data-name=\"customTheme\">{customThemeStyle as unknown as string}</style>\n\n                        {authCoreModal.rootModalContainer && (\n                            <ParticleModal\n                                visible={authCoreModal.particleModalVisible}\n                                closable={authCoreModal.closable}\n                                onClose={() => {\n                                    authCoreModalClose();\n                                }}\n                                className=\"root-particle-modal-container\"\n                                modalProps={{\n                                    footer: null,\n                                    width: parseInt(modalOptions.customStyle?.modalWidth as unknown as string),\n                                    height: parseInt(modalOptions.customStyle?.modalHeight as unknown as string),\n                                    forceRender: true,\n                                    destroyOnClose: true,\n                                    style: {\n                                        maxWidth: modalOptions.customStyle?.modalWidth,\n                                    },\n                                    zIndex: modalOptions.customStyle?.zIndex || 99999,\n                                }}\n                                drawerProps={{\n                                    height: '86%',\n                                    closable: false,\n                                    forceRender: true,\n                                    destroyOnClose: true,\n                                    push: false,\n                                    zIndex: modalOptions.customStyle?.zIndex || 99999,\n                                }}\n                            >\n                                <CustomRouter\n                                    path={customRouter?.path}\n                                    state={customRouter?.state}\n                                    replace={customRouter?.replace}\n                                    children={customRouter?.children}\n                                />\n                            </ParticleModal>\n                        )}\n\n                        <React.Suspense>\n                            <IframeWalletPlugin />\n                            <SelectSecurityAccount visible={selectSecurityAccount} state={verifySecurityAccountState} />\n                            <AccountTipModal modal={accountTipModal} />\n                            <PaymentVerifyModal props={paymentVerify} />\n                            <WrongPasswordModal info={wrongPassword} />\n                        </React.Suspense>\n                        <AuthCoreModalContainer data-ref=\"rootModalContainer\" setAuthCoreModal={setAuthCoreModal} />\n                    </div>\n                </root.div>\n            )}\n        </GlobalContext.Provider>\n    );\n};\n\nexport const useAuthCoreModal = () => {\n    const { authCoreModal, setAuthCoreModal, authCoreModalClose } = useContext(GlobalContext);\n    return {\n        authCoreModalClose,\n        authCoreModal,\n        setAuthCoreModal,\n    };\n};\n\nexport const useCustomRouter = () => {\n    const { customRouter, setCustomRouter } = useContext(GlobalContext);\n    return {\n        customRouter,\n        setCustomRouter,\n    };\n};\n\nexport const useCustomNavigate = () => {\n    const { customNavigate } = useContext(GlobalContext);\n\n    return customNavigate;\n};\n\nexport const useParticleAuth = () => {\n    const context = useContext(GlobalContext);\n    if (!context.modalOptions) {\n        throw new Error('Auth Core hooks must used in AuthCoreContextProvider');\n    }\n    return context;\n};\n\nexport const useModalOptions = () => {\n    const { modalOptions, setModalOptions } = useContext(GlobalContext);\n    return {\n        modalOptions,\n        setModalOptions,\n    };\n};\n\nexport const useEvents = () => {\n    const { events } = useContext(GlobalContext);\n    return { events };\n};\n", "import { isConnected } from '@particle-network/auth-core';\nimport qs from 'qs';\nimport React, { useMemo } from 'react';\nimport type { ICustomRouter } from '../../context/types';\nimport ParticleLoading from '../loading';\n\nexport enum AuthPage {\n    Index = 'index',\n    Login = 'login',\n    EvmSign = 'evm-chain/sign',\n    SolanaSign = 'solana/sign',\n    LoginAccount = 'login-account',\n    AccountSecurity = 'account/security',\n    MasterPasswordVerify = 'account/master-password/verify',\n    MasterPasswordPrompt = 'account/master-password/prompt',\n}\n\ninterface IPage {\n    name?: AuthPage;\n    path?: string;\n    component: React.LazyExoticComponent<any>;\n}\n\nconst pages: IPage[] = [\n    {\n        name: AuthPage.Index,\n        component: React.lazy(() => import('../../pages/index/index')),\n    },\n    {\n        name: AuthPage.Login,\n        component: React.lazy(() => import('../../pages/login')),\n    },\n    {\n        path: 'account/security',\n        component: React.lazy(() => import('../../pages/account/security')),\n    },\n    {\n        name: AuthPage.LoginAccount,\n        path: 'login-account',\n        component: React.lazy(() => import('../../pages/loginAccount/index')),\n    },\n    {\n        path: 'manageDevices/deviceList',\n        component: React.lazy(() => import('../../pages/manageDevices/deviceList/index')),\n    },\n    {\n        path: 'manageDevices/deviceDetails',\n        component: React.lazy(() => import('../../pages/manageDevices/deviceDetails/index')),\n    },\n    {\n        name: AuthPage.EvmSign,\n        component: React.lazy(() => import('../../pages/sign/index')),\n    },\n    {\n        name: AuthPage.SolanaSign,\n        component: React.lazy(() => import('../../pages/sign/components/info-sign')),\n    },\n    {\n        path: 'account/bind',\n        component: React.lazy(() => import('../../pages/account/accountBind/index')),\n    },\n    {\n        path: 'account/verify',\n        component: React.lazy(() => import('../../pages/account/accountVerify/index')),\n    },\n    {\n        path: 'login-account',\n        component: React.lazy(() => import('../../pages/loginAccount/index')),\n    },\n    {\n        path: 'manageDevices/deviceDetails',\n        component: React.lazy(() => import('../../pages/manageDevices/deviceDetails/index')),\n    },\n    {\n        path: 'account/master-password',\n        component: React.lazy(() => import('../../pages/account/setMasterPassword/index')),\n    },\n    {\n        path: 'account/master-password/description',\n        component: React.lazy(() => import('../../pages/account/masterPasswordDescription/index')),\n    },\n    {\n        path: AuthPage.MasterPasswordVerify,\n        component: React.lazy(() => import('../../pages/account/masterPasswordVerify/index')),\n    },\n    {\n        path: AuthPage.MasterPasswordPrompt,\n        component: React.lazy(() => import('../../pages/account/masterPasswordModal/index')),\n    },\n    {\n        path: 'account/master-password/change',\n        component: React.lazy(() => import('../../pages/account/masterPasswordChange/index')),\n    },\n    {\n        path: 'account/set-password',\n        component: React.lazy(() => import('../../pages/account/setPaymentPassword/index')),\n    },\n    {\n        path: 'account/change-password',\n        component: React.lazy(() => import('../../pages/account/changePaymentPassword/index')),\n    },\n    {\n        path: 'login-account/bind',\n        component: React.lazy(() => import('../../pages/loginAccountBind/index')),\n    },\n    {\n        path: 'login-account/bind-loading',\n        component: React.lazy(() => import('../../pages/account/loginAccountBindLoading/index')),\n    },\n];\n\nconst CustomRouter = (props: ICustomRouter) => {\n    const path = useMemo(() => {\n        let path = props.path?.split('?')?.[0].replace(/^\\//, '');\n        if (path == '' || path == '/') {\n            path = AuthPage.Index;\n        }\n        if (path !== AuthPage.Login && !isConnected() && path !== AuthPage.Index) {\n            path = AuthPage.Login;\n        }\n        return path;\n    }, [props.path]);\n\n    const queryString = useMemo(() => {\n        let queryString = props.path?.split('?')?.[1];\n        if (path !== AuthPage.Login && !isConnected() && path !== AuthPage.Index) {\n            queryString = '';\n        }\n        return queryString;\n    }, [props.path, path]);\n\n    const state = useMemo(() => {\n        return {\n            ...(props.state || {}),\n            ...qs.parse(queryString),\n        };\n    }, [props.state, queryString]);\n\n    const Comp = useMemo(() => {\n        let Comp = pages.find((item: IPage) => item.name === path || item.path === path);\n        if (!Comp) {\n            if (path) {\n                console.log('Not Found', path);\n            }\n            Comp = pages[0];\n        }\n        return Comp;\n    }, [path]);\n\n    return (\n        <div data-path={path} data-state={qs.stringify(state)} key={path}>\n            <React.Suspense\n                fallback={\n                    <div className=\"lazy-loaing-container\">\n                        <ParticleLoading />\n                    </div>\n                }\n            >\n                <Comp.component {...state} children={props.children} />\n            </React.Suspense>\n        </div>\n    );\n};\n\nexport default CustomRouter;\n", "import React from 'react';\nimport styles from './index.less';\n\nconst ParticleLoading = () => {\n    return (\n        <>\n            <style>{styles as unknown as string}</style>\n            <div className=\"loading-content\">\n                <div className=\"lds-default\">\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                </div>\n                <div className=\"power-text\">Powered by</div>\n                <div className=\"logo-text\">Particle Network</div>\n            </div>\n        </>\n    );\n};\n\nexport default ParticleLoading;\n", "import { Modal } from 'antd';\nimport React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\n\nimport { useAuthCoreModal } from '../../context';\nimport ParticleDrawer from '../particle-drawer';\nimport styles from './index.less';\n\ninterface IProps {\n    children?: React.ReactNode;\n    visible?: boolean;\n    containerSelector?: any;\n    title?: string | any;\n    modalProps?: any;\n    locked?: 'modal' | 'drawer';\n    drawerProps?: any;\n    className?: string;\n    closable?: boolean;\n    onOpen?: () => void;\n    onClose?: () => void;\n}\nconst ParticleModal = forwardRef((props: IProps, ref) => {\n    const { children, title, drawerProps = {}, modalProps = {} } = props;\n    const { authCoreModal } = useAuthCoreModal();\n    const [visible, setVisible] = useState(props.visible || false);\n\n    const onClose = () => {\n        setVisible(false);\n        props.onClose && props.onClose();\n    };\n\n    const onOpen = () => {\n        setVisible(true);\n        props.onOpen && props.onOpen();\n    };\n\n    useImperativeHandle(ref, () => ({\n        setVisible,\n        onOpen,\n        onClose,\n    }));\n\n    useEffect(() => {\n        setVisible(props.visible ?? false);\n    }, [props.visible]);\n\n    if (modalProps?.style?.top) {\n        modalProps.style.top = '';\n    }\n\n    return (\n        <>\n            <style>{styles as unknown as string}</style>\n            {authCoreModal.viewType == 'desktop' || props.locked === 'modal' ? (\n                <Modal\n                    title={title}\n                    open={visible}\n                    okText=\"\"\n                    wrapClassName={`w-model-container ${props.className || ''}`}\n                    centered={true}\n                    maskClosable={false}\n                    getContainer={() => {\n                        return props.containerSelector\n                            ? document.querySelector(props.containerSelector)\n                            : authCoreModal.rootModalContainer || document.querySelector('body');\n                    }}\n                    onCancel={() => {\n                        onClose();\n                    }}\n                    closable={props.closable ?? true}\n                    // closeIcon={<MIcon name=\"icon_63\" size={30} />}\n                    {...modalProps}\n                    styles={{\n                        ...modalProps.styles,\n                    }}\n                >\n                    {children}\n                </Modal>\n            ) : (\n                <ParticleDrawer\n                    className={`w-drawer-container ${props.className || ''}`}\n                    closable={props.closable ?? true}\n                    onClose={onClose}\n                    visible={visible}\n                    placement=\"bottom\"\n                    getContainer={() => {\n                        return props.containerSelector\n                            ? document.querySelector(props.containerSelector)\n                            : authCoreModal.rootModalContainer || document.querySelector('body');\n                    }}\n                    extra={<>{/* <MIcon name=\"icon_63\" size={30} onClick={() => onClose()} /> */}</>}\n                    title={title}\n                    {...drawerProps}\n                >\n                    {children}\n                </ParticleDrawer>\n            )}\n        </>\n    );\n});\n\nexport default ParticleModal;\n", "import React, { useEffect, useRef } from 'react';\n\nconst AuthCoreModalContainer = ({ setAuthCoreModal }: any) => {\n    const rootModalContainerRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        setAuthCoreModal({\n            rootModalContainer: rootModalContainerRef.current,\n        });\n    }, [setAuthCoreModal]);\n\n    return <div ref={rootModalContainerRef}></div>;\n};\n\nexport default AuthCoreModalContainer;\n", "import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport resources from './locales/resources';\n\nexport const i18nInit = (lng = 'en') => {\n    i18n.use(initReactI18next).init({\n        fallbackLng: 'en',\n        resources,\n        lng: lng ? lng.replace('_', '-') : undefined,\n        interpolation: {\n            escapeValue: false,\n        },\n    });\n};\nexport default i18n;\n", "import en from './en.json';\nimport jp from './jp.json';\nimport kr from './kr.json';\nimport tc from './tc.json';\nimport zh from './zh.json';\n\nconst resources = {\n    en: {\n        translation: en,\n    },\n    'zh-CN': {\n        translation: zh,\n    },\n    'zh-TW': {\n        translation: tc,\n    },\n    'zh-HK': {\n        translation: tc,\n    },\n    ja: {\n        translation: jp,\n    },\n    ko: {\n        translation: kr,\n    },\n};\nexport default resources;\n", "import {\n    getLatestAuthType,\n    getUserInfo,\n    isNullish,\n    requireNotNullish,\n    type ERC4337Options,\n} from '@particle-network/auth-core';\nimport type { Chain } from '@particle-network/chains';\nimport base58 from 'bs58';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getEVMPublicAddress } from '../api/getPublicAddress';\nimport type { LoginAuthorization, SolanaAuthorization } from '../types/connectOptions';\nimport { isSolana } from './chain-utils';\nimport { shortString, toHexPrefixString } from './common-utils';\n\nexport type AuthorizationResult = {\n    message: string;\n    signature: string;\n};\n\n//https://eips.ethereum.org/EIPS/eip-4361\nconst signInEthereumMessage = `{0} wants you to sign in with your Ethereum account:\n{1}\n\n{2}\n\nURI: https://{3}/\nVersion: 1\nChain ID: {4}\nNonce: {5}\nIssued At: {6}\nExpiration Time: {7}`;\n\nconst authorizeUtils = {\n    isNeedAuthorize({ authorization, chain }: LoginAuthorization): boolean {\n        if (!authorization) {\n            return false;\n        }\n        if (chain.name.toLowerCase() === 'solana') {\n            return (\n                'message' in authorization &&\n                !isNullish(authorization.message) &&\n                'uniq' in authorization &&\n                !isNullish(authorization.uniq)\n            );\n        } else {\n            return 'uniq' in authorization && !isNullish(authorization.uniq);\n        }\n    },\n\n    async generateMessage(chain: Chain, erc4337?: ERC4337Options): Promise<string> {\n        const domain = location.host;\n        const userInfo = getUserInfo() as any;\n        const address = isSolana(chain)\n            ? window.particleAuth?.solana.selectedAddress\n            : await getEVMPublicAddress({\n                  ...erc4337,\n                  chainId: chain.id,\n              });\n        const authType = getLatestAuthType() || 'email';\n        const account = userInfo[authType] || userInfo[`${authType}_email`] || shortString(userInfo[`${authType}_id`]);\n        const statement = `${authType.titleCase()}: ${account}`;\n        const nonce = uuidv4().replace(/-/g, '');\n        const issuedAt = new Date().toISOString();\n        // 15\u5206\u949F\u6709\u6548\u671F\n        const expirationTime = new Date(Date.now() + 10 * 60 * 1000).toISOString();\n        return signInEthereumMessage.format(\n            domain,\n            address || '',\n            statement,\n            domain,\n            chain.id.toString(),\n            nonce,\n            issuedAt,\n            expirationTime\n        );\n    },\n\n    async authorize(\n        { authorization, chain }: LoginAuthorization,\n        erc4337?: ERC4337Options\n    ): Promise<AuthorizationResult> {\n        const message = isSolana(chain)\n            ? (authorization as SolanaAuthorization).message\n            : toHexPrefixString(await this.generateMessage(chain, erc4337));\n        const particleAuth = requireNotNullish(window.particleAuth);\n        let signature;\n        if (isSolana(chain)) {\n            const result = await particleAuth.solana.signMessage(base58.decode(message));\n            signature = Buffer.from(result).toString('base64');\n        } else {\n            signature = await particleAuth.ethereum.signMessage(message);\n        }\n        return {\n            message,\n            signature,\n        };\n    },\n};\n\nexport default authorizeUtils;\n", "import { analyticsActive, getUserInfo, type UserInfo } from '@particle-network/auth-core';\nimport { isClient } from '.';\n\nexport const sendAnalyticsActive = (action: 'sign' | 'login' | 'open' | 'open_wallet', userInfo?: UserInfo) => {\n    const info = userInfo ?? getUserInfo();\n    if (info && isClient()) {\n        let wallet = info.wallets.find((item) => item.chain_name !== 'solana');\n        if (!wallet?.public_address) {\n            wallet = info.wallets.find((item) => item.chain_name === 'solana');\n        }\n        if (wallet && wallet.public_address) {\n            /* eslint-disable */\n            analyticsActive({\n                chain_id:\n                    wallet.chain_name !== 'solana'\n                        ? Number(window.particleAuth?.ethereum.chainId)\n                        : window.particleAuth?.solana.chainId || 101,\n                identity: info.uuid,\n                login_type: 'particle' as any,\n                action: action as any,\n                wallet_address: wallet.public_address,\n                user_info: JSON.stringify(info),\n            });\n            /* eslint-enable */\n        }\n    }\n};\n"],
  "mappings": "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",
  "names": ["AuthCoreModalEvent", "isHexString", "isValidPhoneNumber", "isHexString", "React", "React", "circle_close_default", "tronAddressFromHex", "chains", "chains", "tronAddressFromHex", "React", "useEffect", "useMemo", "useRef", "useState", "getUserInfo", "isConnected", "base58", "React", "useEffect", "useMemo", "useState", "React", "React", "React", "loading_default", "React", "path", "queryString", "Comp", "loading_default", "React", "_a", "React", "particle_modal_default", "React", "useEffect", "isNullish", "isNullish", "particleAuth", "getUserInfo", "getUserInfo", "React", "useState", "props", "_a", "styles", "isConnected", "_b", "_c", "_d", "_e", "_f", "_g", "base58", "getUserInfo", "useMemo", "useEffect", "userInfo", "particle_modal_default", "useState", "useRef", "useMemo", "useEffect", "_a", "_b", "React", "particle_drawer_default", "circle_close_default"]
}
