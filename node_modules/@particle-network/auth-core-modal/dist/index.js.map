{
  "version": 3,
  "sources": ["../src/api/model/authError.ts", "../src/components/loading/index.tsx", "../src/utils/index.ts", "../src/common/config/index.ts", "../src/utils/sendAnalyticsActive.ts", "../src/context/hooks/useAuthCore.ts", "../src/context/types.ts", "../src/repository/index.ts", "../src/api/model/bundle.ts", "../src/api/master-password.ts", "../src/context/hooks/useLogin.ts", "../src/context/hooks/useConnect.ts", "../src/context/hooks/useCustomize.ts", "../src/utils/chain-utils.ts", "../src/utils/common-utils.ts", "../src/utils/number-utils.ts", "../src/utils/transaction-utils.ts", "../src/utils/evmSendTransaction.ts", "../src/context/evmProvider.ts", "../src/context/hooks/useUserInfo.ts", "../src/context/hooks/useEthereum.ts", "../src/context/hooks/useIsMounted.ts", "../src/context/solanaWallet.ts", "../src/context/hooks/useSolana.ts", "../src/context/hooks/index.ts", "../src/pages/index/index.tsx", "../src/components/power-footer.tsx", "../src/common/icon/arrow1_icon.svg", "../src/common/icon/arrow_icon.svg", "../src/common/icon/arrow_right_icon.svg", "../src/common/icon/backspace.svg", "../src/common/icon/circle_back.svg", "../src/common/icon/circle_close.svg", "../src/common/icon/collapse_icon.svg", "../src/common/icon/copy.svg", "../src/common/icon/eye_close.svg", "../src/common/icon/eye_open.svg", "../src/common/icon/facebook_icon.svg", "../src/common/icon/google_icon.svg", "../src/common/icon/master_password.svg", "../src/common/icon/menu.svg", "../src/common/icon/passkeys_icon.svg", "../src/common/icon/security.svg", "../src/common/icon/security_icon.svg", "../src/common/icon/transaction_icon.svg", "../src/common/icon/twitter_icon.svg", "../src/common/icon/wallet.svg", "../src/common/icon/wallet_icon.svg", "../src/components/icon/icons.ts", "../src/components/icon/svg-icon.tsx", "../src/components/react-auth-code-input/index.tsx", "../src/context/hooks/useMessage.ts", "../src/pages/login/components/captcha-input.tsx", "../src/pages/login/components/email-login.tsx", "../src/api/model/all-countries.ts", "../src/pages/login/components/phone-login.tsx", "../src/pages/login/components/social-login.tsx", "../src/pages/login/index.tsx", "../src/components/header/index.tsx", "../src/components/icon/circle-close.tsx", "../src/pages/account/bindSecurityAccountPrompt/index.tsx", "../src/pages/account/security/index.tsx", "../src/pages/loginAccount/index.tsx", "../src/pages/manageDevices/deviceList/index.tsx", "../src/pages/manageDevices/deviceDetails/index.tsx", "../src/api/getPublicAddress.ts", "../src/components/icon/icon-copy.tsx", "../src/context/hooks/useError.ts", "../src/context/hooks/usePaymentPassword.ts", "../src/utils/ethereumUtils.ts", "../src/pages/sign/evmContextProvider.tsx", "../src/context/hooks/usePending.tsx", "../src/pages/sign/riskTypography/index.tsx", "../src/pages/sign/riskReminder/index.tsx", "../src/components/icon-edit-pen.tsx", "../src/components/icon-to.tsx", "../src/pages/sign/components/gas-display.tsx", "../src/pages/sign/components/no-gas.tsx", "../src/pages/sign/components/NewErcTransfers.tsx", "../src/components/particle-drawer/index.tsx", "../src/pages/sign/components/evm-gas.tsx", "../src/pages/sign/components/menu.tsx", "../src/pages/sign/components/evm-sign.tsx", "../src/pages/sign/index.tsx", "../src/utils/solana-utils.ts", "../src/pages/sign/components/info-sign.tsx", "../src/pages/account/accountBind/captcha-input.tsx", "../src/pages/account/accountBind/index.tsx", "../src/pages/account/accountVerify/index.tsx", "../src/components/eyeIcon/index.tsx", "../src/components/input-password/index.tsx", "../src/pages/account/setMasterPasswordSuccess/index.tsx", "../src/pages/account/setMasterPassword/masterPasswordLoading.tsx", "../src/pages/account/setMasterPassword/index.tsx", "../src/pages/account/masterPasswordDescription/index.tsx", "../src/pages/account/masterPasswordVerify/index.tsx", "../src/pages/account/masterPasswordModal/index.tsx", "../src/pages/account/masterPasswordChange/index.tsx", "../src/pages/account/ParticleKeywords/index.tsx", "../src/pages/account/setPaymentPassword/index.tsx", "../src/pages/account/changePaymentPassword/index.tsx", "../src/components/phoneInputItem/index.tsx", "../src/pages/loginAccountBind/index.tsx", "../src/pages/account/loginAccountBindLoading/index.tsx", "../src/components/customRouter/index.tsx", "../src/components/particle-modal/index.tsx", "../src/components/particle-modal/authCoreModalContainer.tsx", "../src/locales/resources.ts", "../src/i18n.ts", "../src/utils/authorizeUtils.ts", "../src/context/iframeWalletPlugin.tsx", "../src/pages/account/accountTipModal/index.tsx", "../src/pages/account/paymentVerifyModal/index.tsx", "../src/pages/account/wrongPasswordModal/index.tsx", "../src/pages/account/selectSecurityAccount/index.tsx", "../src/context/index.tsx", "../src/index.ts", "../src/types/currency.ts"],
  "sourcesContent": ["export class AuthError {\n    constructor(public code: number, public message: string) {\n        this.code = code;\n        this.message = message;\n    }\n\n    public static feeError() {\n        return new AuthError(8101, 'maxFeePerGas cannot be less than maxPriorityFeePerGas');\n    }\n\n    public static userRejectedRequest() {\n        return new AuthError(4001, 'The user rejected the request');\n    }\n\n    public static userCancelOperation() {\n        return new AuthError(4011, 'The user cancel the operation');\n    }\n\n    public static unauthorized() {\n        return new AuthError(4100, 'The requested method and/or account has not been authorized by the user');\n    }\n\n    public static systemError() {\n        return new AuthError(8001, 'System Error');\n    }\n\n    public static paramsError() {\n        return new AuthError(8002, 'Param error, see doc for more info');\n    }\n\n    public static notLogin() {\n        return new AuthError(8005, 'Please connect first!');\n    }\n\n    public static walletNotCreated() {\n        return new AuthError(8006, 'Wallet not created');\n    }\n\n    public static authorizeError() {\n        return new AuthError(8007, 'Authorize error');\n    }\n\n    public static network() {\n        return new AuthError(8011, 'Network error');\n    }\n\n    public static unknown(message: string) {\n        return new AuthError(9000, message);\n    }\n\n    public static pending(method: string) {\n        return new AuthError(-32002, `Request of type ${method} already pending, please wait.`);\n    }\n}\n", "import React from 'react';\nimport styles from './index.less';\n\nconst ParticleLoading = () => {\n    return (\n        <>\n            <style>{styles as unknown as string}</style>\n            <div className=\"loading-content\">\n                <div className=\"lds-default\">\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                </div>\n                <div className=\"power-text\">Powered by</div>\n                <div className=\"logo-text\">Particle Network</div>\n            </div>\n        </>\n    );\n};\n\nexport default ParticleLoading;\n", "import type { CountryCode } from 'libphonenumber-js/max';\nimport { isValidPhoneNumber, parsePhoneNumberWithError } from 'libphonenumber-js/max';\n\nexport const ipfsToSrc = (ipfs: string) => {\n    if (!ipfs || !ipfs.startsWith('ipfs://')) {\n        return ipfs || '';\n    }\n\n    return `https://ipfs.particle.network/${encodeURI(ipfs.slice(7))}`;\n};\n\nexport const EmailRegExp = /^\\w+([-+.]\\w+)*@[a-zA-Z0-9]+([.-][a-zA-Z0-9]+)*\\.[a-zA-Z0-9]+([.-][a-zA-Z0-9]+)*$/;\n\nexport const PhoneRegExp = /^[0-9]{4,16}$/;\n\nexport const PhoneE164Exp = /^\\+[1-9]\\d{4,14}$/;\n\nexport function isValidEmail(email?: string) {\n    if (email && EmailRegExp.test(email)) {\n        return email;\n    }\n}\n\nexport function isPhoneValid(phone: string, regionCode: string): boolean {\n    if (!phone || phone.length < 5) {\n        return false;\n    }\n    const countryCode = regionCode?.toUpperCase() as CountryCode;\n    const result = isValidPhoneNumber(phone, countryCode);\n    return result;\n}\n\nexport const isValidE164PhoneNumber = (phone: string | undefined) => {\n    if (phone && PhoneE164Exp.test(phone)) {\n        try {\n            if (isValidPhoneNumber(phone)) {\n                const e164Phone = parsePhoneNumberWithError(phone).format('E.164');\n                return e164Phone;\n            }\n        } catch (e) {\n            // ignore\n        }\n    }\n};\n\nexport function isValidCaptcha(code?: string) {\n    return code && code.match(/^\\d{6}$/);\n}\n\nexport const isAutoFocusSupported = () => {\n    return true;\n};\n\nexport const isMobile = () => {\n    if (isServer()) return false;\n    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n};\n\nexport const isServer = () => typeof window === 'undefined';\n\nexport const isClient = () => typeof window !== 'undefined';\n", "import { isServer } from '../../utils';\n\ntype Env = {\n    buyUrl: string;\n};\n\nclass GlobalConfig {\n    #devEnv: Env = {\n        buyUrl: 'https://ramp-debug.particle.network',\n    };\n\n    #stagingEnv: Env = {\n        buyUrl: 'https://ramp-staging.particle.network',\n    };\n\n    #productionEnv: Env = {\n        buyUrl: 'https://ramp.particle.network',\n    };\n\n    get env() {\n        if (!isServer() && window.__PARTICLE_ENVIRONMENT__ === 'development') {\n            return this.#devEnv;\n        } else if (!isServer() && window.__PARTICLE_ENVIRONMENT__ === 'staging') {\n            return this.#stagingEnv;\n        } else {\n            return this.#productionEnv;\n        }\n    }\n}\n\nconst globalConfig = new GlobalConfig();\nexport default globalConfig;\n", "import { analyticsActive, getUserInfo, type UserInfo } from '@particle-network/auth-core';\nimport { isClient } from '.';\n\nexport const sendAnalyticsActive = (action: 'sign' | 'login' | 'open' | 'open_wallet', userInfo?: UserInfo) => {\n    const info = userInfo ?? getUserInfo();\n    if (info && isClient()) {\n        let wallet = info.wallets.find((item) => item.chain_name !== 'solana');\n        if (!wallet?.public_address) {\n            wallet = info.wallets.find((item) => item.chain_name === 'solana');\n        }\n        if (wallet && wallet.public_address) {\n            /* eslint-disable */\n            analyticsActive({\n                chain_id:\n                    wallet.chain_name !== 'solana'\n                        ? Number(window.particleAuth?.ethereum.chainId)\n                        : window.particleAuth?.solana.chainId || 101,\n                identity: info.uuid,\n                login_type: 'particle' as any,\n                action: action as any,\n                wallet_address: wallet.public_address,\n                user_info: JSON.stringify(info),\n            });\n            /* eslint-enable */\n        }\n    }\n};\n", "import {\n    AuthCoreEvent,\n    getSecurityAccount,\n    hasMasterPassword,\n    hasPaymentPassword,\n    isConnected,\n    isNeedRestoreWallet,\n    particleAuth,\n} from '@particle-network/auth-core';\nimport { walletEntryPlugin, type WalletConfig } from '@particle-network/wallet';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useCustomNavigate, useParticleAuth } from '..';\nimport { AuthError } from '../../api/model/authError';\nimport globalConfig from '../../common/config';\nimport { AuthPage } from '../../components/customRouter';\nimport { PageType } from '../../pages/account/accountVerify/config';\nimport { sendAnalyticsActive } from '../../utils/sendAnalyticsActive';\nimport type { OpenBuyOptions, OpenBuyOptionsKeys } from '../types';\n\ninterface OpenWalletOptions {\n    windowSize?: 'small' | 'large';\n    pathName?: string;\n    query?: Record<string, unknown>;\n    topMenuType?: 'close' | 'fullscreen';\n}\n\nexport const useAuthCore = () => {\n    const navigate = useCustomNavigate();\n    const { userInfo, modalOptions } = useParticleAuth();\n    const [needRestoreWallet, setNeedRestoreWallet] = useState(isNeedRestoreWallet());\n\n    const openAccountAndSecurity = useCallback(() => {\n        navigate(AuthPage.AccountSecurity);\n    }, [navigate]);\n\n    const openSetMasterPassword = useCallback(() => {\n        if (hasMasterPassword()) {\n            throw new Error('Master password already exists.');\n        }\n        navigate('account/master-password');\n    }, [navigate]);\n\n    const openChangeMasterPassword = useCallback(() => {\n        if (!hasMasterPassword()) {\n            throw new Error('Master password not exist, please set it first!');\n        }\n        if (isNeedRestoreWallet()) {\n            throw new Error('Wallet not restore, please restore it by master password first!');\n        }\n        navigate('account/master-password/change');\n    }, [navigate]);\n\n    const openRestoreByMasterPassword = useCallback(() => {\n        if (!hasMasterPassword()) {\n            throw new Error('Master password not exists.');\n        }\n        if (!isNeedRestoreWallet()) {\n            throw new Error('Wallet has been restore.');\n        }\n        navigate(AuthPage.MasterPasswordVerify);\n    }, [navigate]);\n\n    const openWallet = useCallback((options?: OpenWalletOptions) => {\n        const { windowSize, pathName, query, topMenuType } = options || {};\n        if (!isConnected()) {\n            throw AuthError.notLogin();\n        }\n        walletEntryPlugin.openWallet({\n            windowSize: windowSize || 'large',\n            pathName: pathName || '/',\n            query,\n            topMenuType,\n        });\n        sendAnalyticsActive('open_wallet');\n    }, []);\n\n    const buildWalletUrl = useCallback((options?: WalletConfig): string => {\n        if (!isConnected()) {\n            throw AuthError.notLogin();\n        }\n        return walletEntryPlugin.getWalletUrl(options);\n    }, []);\n\n    const openBuy = useCallback(\n        (options?: OpenBuyOptions) => {\n            let url = `${globalConfig.env.buyUrl}/?language=${modalOptions.language || 'en'}&theme=${\n                modalOptions.themeType || 'light'\n            }`;\n            if (modalOptions.wallet?.customStyle) {\n                const { light, dark } = modalOptions.wallet.customStyle;\n                url += `&customStyle=${encodeURIComponent(\n                    Buffer.from(JSON.stringify({ light, dark })).toString('base64')\n                )}`;\n            }\n\n            if (options) {\n                Object.keys(options).forEach((key) => {\n                    const value = options[key as OpenBuyOptionsKeys];\n                    if (value) {\n                        url += `&${key}=${encodeURIComponent(value)}`;\n                    }\n                });\n            }\n            if (typeof window !== 'undefined') {\n                window.open(url);\n            }\n        },\n        [modalOptions.wallet, modalOptions.themeType, modalOptions.language]\n    );\n\n    const openSetPaymentPassword = useCallback(\n        (securityAccountEmailOrPhone: string) => {\n            const securityAccount = getSecurityAccount();\n            if (!securityAccount.email && !securityAccount.phone) {\n                throw new Error('Please set security account first!');\n            }\n            if (hasPaymentPassword()) {\n                throw new Error('Payment password already exists.');\n            }\n\n            if (\n                securityAccountEmailOrPhone &&\n                securityAccountEmailOrPhone !== securityAccount.email &&\n                securityAccountEmailOrPhone !== securityAccount.phone\n            ) {\n                throw new Error('Invalid security account.');\n            }\n            navigate('account/set-password', {\n                state: {\n                    account: securityAccountEmailOrPhone,\n                },\n            });\n        },\n        [navigate]\n    );\n\n    const openChangePaymentPassword = useCallback(() => {\n        if (!hasPaymentPassword()) {\n            throw new Error('Payment password not exists.');\n        }\n        navigate('account/change-password');\n    }, [navigate]);\n\n    const openSetSecurityAccount = useCallback(() => {\n        const securityAccount = getSecurityAccount();\n        if (securityAccount.email && securityAccount.phone) {\n            throw new Error('Security account already exists.');\n        }\n\n        const showSwitch = !securityAccount.email && !securityAccount.phone;\n\n        if ((securityAccount.email && !securityAccount.phone) || (!securityAccount.email && securityAccount.phone)) {\n            navigate('/account/verify', {\n                state: {\n                    account: securityAccount.email || securityAccount.phone,\n                    authType: securityAccount.email ? 'phone' : 'email',\n                    redirectUrl: '/account/security',\n                    pageType: PageType.VerifySecurityAccount_SetSecurityAccount,\n                },\n            });\n        } else {\n            if (userInfo?.email && !securityAccount.phone) {\n                navigate('account/bind', {\n                    state: { showSwitch, accountType: 'phone', redirectUrl: AuthPage.AccountSecurity },\n                });\n            } else if (!securityAccount.email) {\n                navigate('account/bind', {\n                    state: { showSwitch, accountType: 'email', redirectUrl: AuthPage.AccountSecurity },\n                });\n            } else {\n                navigate('account/bind', {\n                    state: { showSwitch, accountType: 'phone', redirectUrl: AuthPage.AccountSecurity },\n                });\n            }\n        }\n    }, [navigate, userInfo]);\n\n    const openLinkLoginAccount = useCallback(() => {\n        const securityAccount = getSecurityAccount();\n        if (!securityAccount.email && !securityAccount.phone) {\n            throw new Error('Please set security account first!');\n        }\n        navigate(AuthPage.LoginAccount);\n    }, [navigate]);\n\n    useEffect(() => {\n        if (userInfo) {\n            setNeedRestoreWallet(isNeedRestoreWallet());\n        } else {\n            setNeedRestoreWallet(false);\n        }\n    }, [userInfo]);\n\n    useEffect(() => {\n        const onWalletRestored = () => {\n            setNeedRestoreWallet(isNeedRestoreWallet());\n        };\n        particleAuth.on(AuthCoreEvent.ParticleWalletRestored, onWalletRestored);\n        return () => {\n            particleAuth.off(AuthCoreEvent.ParticleWalletRestored, onWalletRestored);\n        };\n    }, []);\n\n    return {\n        userInfo,\n        needRestoreWallet,\n        openAccountAndSecurity,\n        openSetMasterPassword,\n        openChangeMasterPassword,\n        openRestoreByMasterPassword,\n        openSetPaymentPassword,\n        openChangePaymentPassword,\n        openSetSecurityAccount,\n        openLinkLoginAccount,\n        openWallet,\n        buildWalletUrl,\n        openBuy,\n    };\n};\n", "import type { AuthType, ERC4337Options, ServerError, UserInfo } from '@particle-network/auth-core';\nimport type { WalletOption } from '@particle-network/wallet';\nimport type { PromptSettingConfig } from '../api/model/bundle';\nimport type { CurrencyUnit, Theme } from '../types';\n\nexport type ViewType = 'desktop' | 'mobile';\n\nexport interface NavigateOptions {\n    replace?: boolean;\n    back?: boolean;\n    state?: any;\n}\n\nexport interface IAuthCoreModal {\n    rootModalContainer: HTMLDivElement | null;\n    rootBody: HTMLDivElement | null;\n    particleModalVisible: boolean;\n    viewType: ViewType;\n    closable?: boolean;\n}\n\nexport interface ICustomRouter {\n    path: string;\n    replace?: boolean;\n    state?: any;\n    history?: any[];\n    children?: React.ReactNode;\n}\n\nexport enum AuthCoreModalEvent {\n    Login = 'login', // \u767B\u5F55\n    LoginSuccess = 'loginSuccess', // \u767B\u5F55\u6210\u529F\n    LoginFail = 'loginFail', // \u767B\u5F55\u5931\u8D25\n    SignResponse = 'signResponse', // \u7B7E\u540D\u54CD\u5E94\n}\n\nexport type Language = 'en' | 'zh-cn' | 'ja' | 'ko' | 'zh-tw';\n\nexport interface ThemeStyle {\n    primaryBtnColor?: string;\n    primaryBtnBackgroundColor?: string;\n    secondaryBtnColor?: string;\n    secondaryBtnBackgroundColor?: string;\n    textColor?: string;\n    secondaryTextColor?: string;\n    themeBackgroundColor?: string;\n    iconBorderColor?: string;\n    accentColor?: string;\n    inputBackgroundColor?: string;\n    inputBorderColor?: string;\n    inputPlaceholderColor?: string;\n    cardBorderColor?: string;\n    cardUnclickableBackgroundColor?: string;\n    cardUnclickableBorderColor?: string;\n    cardDividerColor?: string;\n    tagBackgroundColor?: string;\n    modalBackgroundColor?: string;\n    tipsBackgroundColor?: string;\n}\n\nexport interface CustomStyle {\n    logo?: string;\n    projectName?: string;\n    subtitle?: string;\n    modalWidth?: number;\n    modalHeight?: number;\n    zIndex?: number;\n    primaryBtnBorderRadius?: number | string;\n    modalBorderRadius?: number | string;\n    cardBorderRadius?: number | string;\n    fontFamily?: string;\n    theme?: {\n        dark?: ThemeStyle;\n        light?: ThemeStyle;\n    };\n}\n\nexport interface AuthCoreModalOptions {\n    projectId: string;\n    clientKey: string;\n    appId: string;\n    authTypes?: AuthType[];\n    themeType?: Theme;\n    fiatCoin?: CurrencyUnit;\n    erc4337?: ERC4337Options;\n    language?: Language;\n    promptSettingConfig?: PromptSettingConfig;\n    customStyle?: CustomStyle;\n    wallet?: Omit<WalletOption, 'language' | 'erc4337'>;\n}\n\nexport type ConnectionStatus = 'loading' | 'connecting' | 'connected' | 'disconnected';\n\nexport type SocialConnectCallback = {\n    onSuccess?: (info: UserInfo) => void;\n    onError?: (error: ServerError | Error) => void;\n};\n\nexport interface OpenBuyOptions {\n    network?: string;\n    fiatCoin?: string;\n    cryptoCoin?: string;\n    fiatAmt?: number;\n    fixFiatCoin?: boolean;\n    fixCryptoCoin?: boolean;\n    fixFiatAmt?: boolean;\n    walletAddress?: string;\n}\n\nexport type OpenBuyOptionsKeys = keyof OpenBuyOptions;\n", "export function save(key: string, value: string | null) {\n    if (value) {\n        localStorage.setItem(key, value);\n    } else {\n        removeItem(key);\n    }\n}\n\nexport function load(key: string): string | null {\n    return localStorage.getItem(key);\n}\n\nexport function once(key: string): boolean {\n    const value = localStorage.getItem(key);\n\n    if (!value) {\n        localStorage.setItem(key, '1');\n    }\n    return Boolean(value);\n}\n\nexport function removeItem(key: string) {\n    localStorage.removeItem(key);\n}\n\nexport class PreferenceKey {\n    static PN_OPEN_SET_PAYMENT_PASSWORD = 'PN_OPEN_SET_PAYMENT_PASSWORD';\n    static PN_OPEN_SET_MASTER_PASSWORD = 'PN_OPEN_SET_MASTER_PASSWORD';\n}\n", "export interface AuthorizationOptions {\n    message?: string;\n    uniq?: boolean;\n}\n\nexport enum PromptSettingType {\n    /**\n     * \u4E0D\u63D0\u9192\n     */\n    none = 0,\n    /**\n     * \u9996\u6B21\u63D0\u9192\n     */\n    first = 1,\n    /**\n     * \u6BCF\u6B21\u90FD\u63D0\u9192\n     */\n    every = 2,\n    /**\n     * \u6BCF\u6B21\u90FD\u63D0\u9192\uFF0C\u4E14\u4E0D\u53EF\u8DF3\u8FC7\n     */\n    everyAndNotSkip = 3,\n}\n\nexport interface PromptSettingConfig {\n    promptPaymentPasswordSettingWhenSign?: PromptSettingType | boolean; // 0: \u4E0D\u63D0\u9192\uFF0C 1: \u9996\u6B21\u63D0\u9192\uFF0C 2: \u6BCF\u6B21\u90FD\u63D0\u9192, 3: \u6BCF\u6B21\u90FD\u63D0\u9192\uFF0C\u4E14\u4E0D\u53EF\u8DF3\u8FC7\n    promptMasterPasswordSettingWhenLogin?: PromptSettingType | boolean; // 0: \u4E0D\u63D0\u9192\uFF0C 1: \u9996\u6B21\u63D0\u9192\uFF0C 2: \u6BCF\u6B21\u90FD\u63D0\u9192\uFF0C 3: \u6BCF\u6B21\u90FD\u63D0\u9192\uFF0C\u4E14\u4E0D\u53EF\u8DF3\u8FC7\n}\n", "import { PreferenceKey, once } from '../repository';\nimport { PromptSettingType } from './model/bundle';\n\nexport const isPromptSetMasterPassword = (promptMasterPasswordSettingWhenLogin?: number | boolean) => {\n    if (\n        promptMasterPasswordSettingWhenLogin === PromptSettingType.every ||\n        promptMasterPasswordSettingWhenLogin === PromptSettingType.everyAndNotSkip\n    ) {\n        return true;\n    } else if (\n        promptMasterPasswordSettingWhenLogin ||\n        promptMasterPasswordSettingWhenLogin === PromptSettingType.first\n    ) {\n        return !once(PreferenceKey.PN_OPEN_SET_MASTER_PASSWORD);\n    } else {\n        return false;\n    }\n};\n", "import { RecordType } from '@particle-network/analytics';\nimport type { ConnectParam, SocialAuthType } from '@particle-network/auth-core';\nimport { analyticsRecord, connect, thirdpartyAuth } from '@particle-network/auth-core';\nimport { type Chain } from '@particle-network/chains';\nimport base64url from 'base64url';\nimport { useCallback } from 'react';\nimport { useCustomNavigate, useParticleAuth } from '..';\nimport { isPromptSetMasterPassword } from '../../api/master-password';\nimport { AuthPage } from '../../components/customRouter';\nimport type { Authorization, ConnectWithSocialOptions } from '../../types';\nimport { sendAnalyticsActive } from '../../utils/sendAnalyticsActive';\nimport { AuthCoreModalEvent } from '../types';\n\nconst useLogin = () => {\n    const navigate = useCustomNavigate();\n    const { loginSuccessRedirectToApp, modalOptions, events } = useParticleAuth();\n    const loginHandler = useCallback(\n        async (data: ConnectParam, emitError: boolean = true) => {\n            try {\n                const userInfo = await connect(data);\n                sendAnalyticsActive('login', userInfo);\n\n                analyticsRecord({\n                    // eslint-disable-next-line camelcase\n                    record_type: RecordType.PAGE_LOGIN_BUTTON_CLICK_SUCCESS, // \u767B\u5F55\u6210\u529F\n                });\n                console.log('login successful, check master password');\n\n                if (userInfo.security_account?.has_set_master_password) {\n                    console.log('login successful, start verify master password');\n                    navigate(AuthPage.MasterPasswordVerify, {\n                        replace: true,\n                        state: {\n                            loginVerifyMasterPassword: true,\n                        },\n                    });\n                } else {\n                    if (\n                        isPromptSetMasterPassword(\n                            modalOptions.promptSettingConfig?.promptMasterPasswordSettingWhenLogin\n                        )\n                    ) {\n                        console.log('login successful, popup set master password');\n                        navigate(AuthPage.MasterPasswordPrompt, {\n                            replace: true,\n                        });\n                    } else {\n                        loginSuccessRedirectToApp();\n                    }\n                }\n            } catch (error) {\n                analyticsRecord({\n                    // eslint-disable-next-line camelcase\n                    record_type: RecordType.PAGE_LOGIN_BUTTON_CLICK_FAILURE, // \u767B\u5F55\u5931\u8D25\n                });\n                if (emitError) {\n                    console.log('login failed, emit LoginFail event', error);\n                    events.emit(AuthCoreModalEvent.LoginFail, error);\n                } else {\n                    throw error;\n                }\n            }\n        },\n        [modalOptions.promptSettingConfig, navigate, loginSuccessRedirectToApp]\n    );\n\n    const socialAuthLogin = useCallback(\n        async (\n            options: ConnectWithSocialOptions & {\n                authorization?: Authorization;\n                chain?: Chain;\n            }\n        ) => {\n            try {\n                const appState = base64url(\n                    JSON.stringify({\n                        chain: options.chain,\n                        authorization: options.authorization,\n                        socialType: options.socialType,\n                    })\n                );\n                await thirdpartyAuth({\n                    authType: options.socialType as SocialAuthType,\n                    appState,\n                    prompt: options.prompt,\n                });\n            } catch (error) {\n                events.emit(AuthCoreModalEvent.LoginFail, error);\n            }\n        },\n        [events]\n    );\n\n    return { loginHandler, socialAuthLogin };\n};\n\nexport default useLogin;\n", "import {\n    AuthCoreEvent,\n    AuthType,\n    check,\n    disconnect,\n    getCloudflareTurnstileResponse,\n    getConnectCaptcha,\n    isConnected,\n    isNullish,\n    particleAuth,\n    requireNotNullish,\n    type CloudflareOptions,\n    type ConnectParam,\n    type E164Phone,\n    type UserInfo,\n} from '@particle-network/auth-core';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { AuthPage } from '../../components/customRouter';\nimport { useCustomNavigate, useEvents, useParticleAuth } from '../../context';\nimport type { ConnectOptions } from '../../types/connectOptions';\nimport { isValidCaptcha, isValidE164PhoneNumber, isValidEmail } from '../../utils';\nimport { AuthCoreModalEvent } from '../types';\nimport useLogin from './useLogin';\n\nexport const useConnect = () => {\n    const navigate = useCustomNavigate();\n    const { events } = useEvents();\n    const {\n        modalOptions,\n        setLoginAuthorization,\n        setConnectionStatus,\n        connectionStatus,\n        setAuthCoreModal,\n        socialConnectCallback,\n        setSocialConnectCallback,\n    } = useParticleAuth();\n    const { loginHandler, socialAuthLogin } = useLogin();\n\n    const isLoginDirectly = useCallback((options: ConnectOptions) => {\n        // @ts-ignore\n        const { email, phone, code, jwt, socialType } = options;\n\n        return ((isValidEmail(email) || isValidE164PhoneNumber(phone)) && isValidCaptcha(code)) || socialType || jwt;\n    }, []);\n\n    const connect = useCallback(\n        async (options?: ConnectOptions): Promise<UserInfo | undefined> => {\n            if (options && options.authorization) {\n                check(options.chain, 'chain is required when authorization is provided');\n            }\n            if (options && modalOptions.authTypes && modalOptions.authTypes.length > 0) {\n                if ('email' in options && !isNullish(options.email)) {\n                    check(\n                        modalOptions.authTypes.includes(AuthType.email),\n                        'Email login is not supported, please add AuthType.email to AuthCoreContextProvider init-param \"authTypes\"'\n                    );\n                } else if ('phone' in options && !isNullish(options.phone)) {\n                    check(\n                        modalOptions.authTypes.includes(AuthType.phone),\n                        'Phone login is not supported, please add AuthType.phone to AuthCoreContextProvider init-param \"authTypes\"'\n                    );\n                } else if ('socialType' in options && options.socialType) {\n                    const type = (options.socialType as string) === 'twitterv1' ? 'twitter' : options.socialType;\n                    check(\n                        modalOptions.authTypes.includes(type as AuthType),\n                        `${type} login is not supported, please add AuthType.${type} to AuthCoreContextProvider init-param \"authTypes\"`\n                    );\n                } else if ('jwt' in options && options.jwt) {\n                    check(\n                        modalOptions.authTypes.includes(AuthType.jwt),\n                        'JWT login is not supported, please add AuthType.jwt to AuthCoreContextProvider init-param \"authTypes\"'\n                    );\n                }\n            }\n            setConnectionStatus('connecting');\n            return new Promise((resolve, reject) => {\n                events.once(AuthCoreModalEvent.LoginSuccess, (userInfo) => {\n                    setConnectionStatus('connected');\n                    // \u5173\u95ED\u7A97\u53E3\n                    setAuthCoreModal({\n                        particleModalVisible: false,\n                    });\n                    const { socialType, nonce, code } = (options as any) || {};\n                    if (socialType && nonce && code) {\n                        socialConnectCallback?.onSuccess?.(userInfo);\n                    }\n                    resolve(userInfo);\n                });\n\n                events.once(AuthCoreModalEvent.LoginFail, (error) => {\n                    setConnectionStatus('disconnected');\n                    setAuthCoreModal({\n                        particleModalVisible: false,\n                    });\n                    const { socialType, nonce, code } = (options as any) || {};\n                    if (socialType && nonce && code) {\n                        socialConnectCallback?.onError?.(error);\n                    }\n                    reject(error);\n                });\n                if (options && isLoginDirectly(options)) {\n                    const { authorization, chain, socialType, nonce, prompt, code } = options as any;\n                    if (authorization) {\n                        setLoginAuthorization({ authorization, chain: requireNotNullish(chain) });\n                    } else {\n                        setLoginAuthorization(undefined);\n                    }\n                    if (socialType && (!nonce || !code)) {\n                        socialAuthLogin({\n                            socialType,\n                            prompt,\n                            authorization,\n                            chain,\n                        });\n                    } else {\n                        loginHandler(options as ConnectParam);\n                    }\n                } else {\n                    navigate(AuthPage.Login, {\n                        state: options,\n                    });\n                }\n            });\n        },\n        [events, modalOptions.authTypes, loginHandler, isLoginDirectly, navigate, socialConnectCallback]\n    );\n\n    useEffect(() => {\n        const onConnect = () => {\n            setConnectionStatus('connected');\n        };\n\n        const onDisconnect = () => {\n            setConnectionStatus('disconnected');\n        };\n        particleAuth.on(AuthCoreEvent.ParticleAuthConnect, onConnect);\n        particleAuth.on(AuthCoreEvent.ParticleAuthDisconnect, onDisconnect);\n\n        if (isConnected()) {\n            setConnectionStatus('connected');\n        }\n\n        return () => {\n            particleAuth.off(AuthCoreEvent.ParticleAuthConnect, onConnect);\n            particleAuth.off(AuthCoreEvent.ParticleAuthDisconnect, onDisconnect);\n        };\n    }, []);\n\n    const requestConnectCaptcha = useCallback(\n        async (\n            config: { email: string } | { phone: E164Phone; cloudflareOptions?: CloudflareOptions }\n        ): Promise<boolean> => {\n            if ('email' in config && config.email) {\n                return await getConnectCaptcha(config);\n            } else if ('phone' in config && config.phone) {\n                const token = await getCloudflareTurnstileResponse(config.cloudflareOptions);\n                // eslint-disable-next-line camelcase\n                return await getConnectCaptcha({ phone: config.phone, cf_turnstile_response: token });\n            }\n            throw new Error('Invalid config');\n        },\n        []\n    );\n\n    const connected = useMemo(() => connectionStatus === 'connected', [connectionStatus]);\n\n    return {\n        connect,\n        disconnect,\n        connectionStatus,\n        connected,\n        requestConnectCaptcha,\n        setSocialConnectCallback,\n    };\n};\n", "import type { AuthType, ERC4337Options } from '@particle-network/auth-core';\nimport type { WalletOption } from '@particle-network/wallet';\nimport { useParticleAuth } from '..';\nimport type { CurrencyUnit, Theme } from '../../types';\nimport { type CustomStyle, type Language } from '../types';\nimport type { PromptSettingConfig } from './../../api/model/bundle';\n\nexport const useCustomize = () => {\n    const { modalOptions, setModalOptions } = useParticleAuth();\n\n    const setThemeType = (themeType?: Theme) => {\n        setModalOptions({\n            themeType,\n        });\n    };\n\n    const setCustomStyle = (customStyle?: CustomStyle) => {\n        setModalOptions({\n            customStyle: customStyle ? { ...customStyle } : undefined,\n        });\n    };\n\n    const setLanguage = (language?: Language) => {\n        setModalOptions({\n            language,\n        });\n    };\n\n    const setAuthTypes = (authTypes?: AuthType[]) => {\n        setModalOptions({\n            authTypes: authTypes ? [...authTypes] : undefined,\n        });\n    };\n\n    const setFiatCoin = (fiatCoin?: CurrencyUnit) => {\n        setModalOptions({\n            fiatCoin,\n        });\n    };\n\n    const setERC4337 = (erc4337?: ERC4337Options) => {\n        setModalOptions({\n            erc4337,\n        });\n    };\n\n    const setWalletOptions = (wallet: Omit<WalletOption, 'language' | 'erc4337'>) => {\n        setModalOptions({\n            wallet: { ...wallet },\n        });\n    };\n\n    const setPromptSettingConfig = (promptSettingConfig?: PromptSettingConfig) => {\n        setModalOptions({\n            promptSettingConfig,\n        });\n    };\n\n    return {\n        themeType: modalOptions.themeType,\n        setThemeType,\n        customStyle: modalOptions.customStyle,\n        setCustomStyle: setCustomStyle,\n        walletOptions: modalOptions.wallet,\n        setWalletOptions,\n        language: modalOptions.language,\n        setLanguage,\n        authTypes: modalOptions.authTypes,\n        setAuthTypes,\n        fiatCoin: modalOptions.fiatCoin,\n        setFiatCoin,\n        erc4337: modalOptions.erc4337,\n        setERC4337,\n        promptSettingConfig: modalOptions.promptSettingConfig,\n        setPromptSettingConfig,\n    };\n};\n", "import { isHexString } from '@ethereumjs/util';\nimport { tronAddressFromHex } from '@particle-network/auth-core';\nimport { Ethereum, chains, type Chain, type ChainInfo } from '@particle-network/chains';\n\nexport const getChainDisplayName = (chain: Chain) => {\n    const chainInfo = getChainInfo(chain);\n    if (!chainInfo) {\n        return '';\n    }\n    if (chainInfo.network === 'Mainnet') {\n        return chainInfo.fullname.replace(' Mainnet', '');\n    } else {\n        return chainInfo.fullname;\n    }\n};\n\nexport function getNativeSymbol(chain: Chain): string {\n    return getChainInfo(chain)?.nativeCurrency?.symbol || '';\n}\n\nexport function getChainIcon(chain: Chain): string {\n    return formatPng(getChainInfo(chain)?.icon ?? defaultTokenIcon);\n}\n\nexport function getChainInfo(chain: Chain): ChainInfo | undefined {\n    return chains.getChainInfo(chain);\n}\n\nexport function getEvmChain(id: number) {\n    return chains.getEVMChainInfoById(id);\n}\n\nexport function getSolanaChain(id: number) {\n    return chains.getSolanaChainInfoById(id);\n}\n\nexport function formatAddress(address: string, chain: Chain): string {\n    if (isTron(chain) && isHexString(address)) {\n        return tronAddressFromHex(address);\n    }\n    return address;\n}\n\nexport const defaultTokenIcon = 'https://static.particle.network/token-list/defaultToken/default.png';\n\nexport function isSolana(chain: Chain) {\n    return chain.name.toLowerCase() === 'solana';\n}\n\nexport function isEvm(chain: Chain) {\n    return chain.name.toLowerCase() !== 'solana';\n}\n\nexport function isTron(chain?: Chain) {\n    return chain && chain.name.toLowerCase() === 'tron';\n}\n\nexport const formatPng = (src = '') => {\n    if (!src) return src;\n    return src + (src.includes('?') ? '&' : '?') + 'x-oss-process=image/format,png';\n};\n\nexport function getNativeTokenIcon(chain?: Chain): string {\n    if (chain) {\n        const chainInfo = getChainInfo(chain);\n        if (chainInfo) {\n            if (chainInfo.nativeCurrency.symbol === 'ETH') {\n                return Ethereum.icon;\n            } else {\n                return chainInfo?.nativeIcon || chainInfo?.icon || defaultTokenIcon;\n            }\n        } else {\n            return defaultTokenIcon;\n        }\n    }\n    return defaultTokenIcon;\n}\n", "import type { PrefixedHexString, ToBufferInputTypes } from '@ethereumjs/util';\nimport { bufferToHex, isHexString, toBuffer } from '@ethereumjs/util';\nimport { AuthType } from '@particle-network/auth-core';\nimport type BN from 'bn.js';\nimport { isValidPhoneNumber, parsePhoneNumber } from 'libphonenumber-js/max';\n\nexport function shortString(str: any): string {\n    if (Array.isArray(str)) {\n        str = '[' + str.toString() + ']';\n    }\n    if (str) {\n        if (typeof str.toString === 'function') {\n            str = str.toString();\n        }\n        if (str.length <= 10) {\n            return str;\n        }\n        return `${str.slice(0, 5)}...${str.slice(str.length - 5, str.length)}`;\n    }\n    return '';\n}\n\nexport const displayEmail = (email: string): string => {\n    if (!email) {\n        return '';\n    }\n    const parts = email.split('@');\n    if (parts[0].length <= 3) {\n        return `${parts[0]}****@${parts[1]}`;\n    } else {\n        return `${parts[0].slice(0, 3)}****@${parts[1]}`;\n    }\n};\n\nexport const displayPhone = (phone: string) => {\n    if (!phone) {\n        return '';\n    }\n    if (isValidPhoneNumber(phone)) {\n        const phoneNumber = parsePhoneNumber(phone);\n        const countryCode = phoneNumber.countryCallingCode;\n        const code = phoneNumber.nationalNumber.toString();\n\n        if (code && countryCode) {\n            const count = code.length >= 6 ? 3 : Math.floor(code.length / 2);\n            return `+${countryCode} ${code.slice(0, count)}****${code.slice(-count)}`;\n        }\n    }\n    return phone;\n};\n\ndeclare global {\n    interface String {\n        format(...params: string[]): string;\n        titleCase(): string;\n    }\n}\n\n/*eslint no-extend-native: [\"error\", { \"exceptions\": [\"String\"] }]*/\nString.prototype.format = function (...params: string[]): string {\n    const args = params;\n    return this.replace(/{(\\d+)}/g, function (match, number) {\n        return typeof args[number] != 'undefined' ? args[number] : match;\n    });\n};\n\nString.prototype.titleCase = function (): string {\n    if (this.length === 0) {\n        return '';\n    } else if (this.length === 1) {\n        return this.toUpperCase();\n    }\n\n    return this.slice(0, 1).toUpperCase() + this.slice(1);\n};\n\nexport function assert(condition: any, message?: any) {\n    if (!condition) {\n        throw new Error(message || 'Assertion failed');\n    }\n}\n\nexport function isSocialLogin(type: string): boolean {\n    return type !== AuthType.phone && type !== AuthType.email && type !== AuthType.jwt;\n}\n\n/**\n * Returns `true` if the given value is nullish.\n *\n * @param value - The value being checked.\n * @returns Whether the value is nullish.\n */\nexport function isNullish(value: any) {\n    return value === null || value === undefined;\n}\n\n/**\n * Convert a value to a Buffer.\n *\n * @param value - The value to convert to a Buffer.\n * @returns The given value as a Buffer.\n */\nexport function legacyToBuffer(value: ToBufferInputTypes) {\n    return typeof value === 'string' && !isHexString(value) ? Buffer.from(value) : toBuffer(value);\n}\n\nexport function toHexPrefixString(value: ToBufferInputTypes): PrefixedHexString {\n    if (typeof value === 'string' && isHexString(value)) {\n        return value;\n    } else {\n        return bufferToHex(legacyToBuffer(value));\n    }\n}\n\n/**\n * Convert BN to 0x-prefixed hex string.\n */\nexport function bnToHex(value: BN): PrefixedHexString {\n    return `0x${value.toString(16)}`;\n}\n\nexport function popupwindow(url: string, title: string, w: number, h: number): Window | null {\n    const left = screen.width / 2 - w / 2;\n    const top = screen.height / 2 - h / 2;\n    return window.open(\n        url,\n        title,\n        'toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=' +\n            w +\n            ', height=' +\n            h +\n            ', top=' +\n            top +\n            ', left=' +\n            left\n    );\n}\n\nexport function popupwindowNoLimit(url: string, title: string, w: number, h: number): Window | null {\n    const left = screen.width / 2 - w / 2;\n    const top = screen.height / 2 - h / 2;\n    return window.open(url, title, 'width=' + w + ', height=' + h + ', top=' + top + ', left=' + left);\n}\n\nexport function getVersion(): string {\n    const packages = require('./../../package.json');\n    return `webauth_${packages.version}`;\n}\n\nexport function isInIframe(): boolean {\n    return window.location !== window.parent.location;\n}\n\n/**\n * \u7A97\u53E3\u4FE1\u606F\u4F20\u9012\n */\nexport function authPostMessage(key: string, data: any) {\n    data = {\n        ...data,\n        name: key,\n        _: Date.now(),\n    };\n    try {\n        window.parent.postMessage(data, '*');\n    } catch (error) {\n        // pass\n    }\n    try {\n        window.opener.postMessage(data, '*');\n    } catch (error) {\n        // pass\n    }\n    try {\n        window.opener.parent.postMessage(data, '*');\n    } catch (error) {\n        // pass\n    }\n    sessionStorage.setItem(key, JSON.stringify(data));\n    localStorage.setItem(key, JSON.stringify(data));\n}\n\n/**\n * \u53E3\u4FE1\u606F\u63A5\u6536\n * @param key\n * @param cb\n * @returns\n */\nexport function authReceiveMessage(key: string, cb: any) {\n    const messageHandler = (event: any) => {\n        if (event instanceof MessageEvent || event instanceof StorageEvent) {\n            let data;\n            if (event instanceof MessageEvent) {\n                data = event.data;\n            } else {\n                // @ts-ignore\n                data = JSON.parse(event.newValue);\n            }\n\n            if (data?.name === key) {\n                const newData = {\n                    ...data,\n                    messageType: event instanceof MessageEvent ? 'message' : 'storage',\n                };\n                cb(newData);\n            }\n        }\n    };\n\n    window.addEventListener('message', messageHandler);\n    window.addEventListener('storage', messageHandler);\n\n    return {\n        destroyMessage() {\n            window.removeEventListener('message', messageHandler);\n            window.removeEventListener('storage', messageHandler);\n        },\n    };\n}\n", "import type { PrefixedHexString } from '@ethereumjs/util';\nimport { isHexString, stripHexPrefix } from '@ethereumjs/util';\nimport { BigNumber } from 'bignumber.js';\nimport BN from 'bn.js';\nimport ethjs from 'ethjs-unit';\nimport numbro from 'numbro';\nimport { bnToHex, isNullish, toHexPrefixString } from './common-utils';\n\nexport function formatTokenAmount(amount: number, decimals: number): string {\n    if (!amount || !decimals) {\n        return '0';\n    }\n\n    return numbro(amount / Math.pow(10, decimals)).format({\n        thousandSeparated: true,\n        mantissa: decimals,\n        trimMantissa: true,\n    });\n}\n\nexport function toWeiBigNumber(amount: string | number | undefined, unit = 'ether'): BigNumber {\n    return new BigNumber(bnToHex(toWei(amount, unit)));\n}\n\nexport function toBigNumber(amount: string | number | undefined): BigNumber {\n    if (typeof amount === 'string' || typeof amount === 'number') {\n        return new BigNumber(amount);\n    }\n    return new BigNumber(toHexPrefixString(amount));\n}\n\nexport function toWei(amount: BN | string | number | undefined, unit = 'ether'): BN {\n    if (!amount) {\n        return new BN(0);\n    }\n\n    return ethjs.toWei(amount, unit);\n}\n\nexport function fromWei(amount: BN | PrefixedHexString | undefined, unit = 'ether'): string {\n    if (!amount) {\n        return '0';\n    }\n\n    let result;\n    if (typeof amount === 'string' && amount.startsWith('0x')) {\n        result = ethjs.fromWei(new BN(stripHexPrefix(amount), 16), unit);\n    } else {\n        result = ethjs.fromWei(new BN(amount), unit);\n    }\n    return result;\n}\n\nexport function fromWeiFormat(amount: BN | PrefixedHexString | undefined, unit = 'ether', mantissa = 6): string {\n    if (!amount) {\n        return '0';\n    }\n\n    let result;\n    if (typeof amount === 'string' && amount.startsWith('0x')) {\n        result = ethjs.fromWei(new BN(stripHexPrefix(amount), 16), unit);\n    } else {\n        result = ethjs.fromWei(new BN(amount), unit);\n    }\n    return numbro(result).format({\n        thousandSeparated: true,\n        trimMantissa: true,\n        mantissa: mantissa,\n    });\n}\n\nexport function formatPrice({\n    amount,\n    price,\n    mantissa,\n    fiatCoin,\n}: {\n    amount: string | number;\n    price: number;\n    mantissa?: number;\n    fiatCoin: string;\n}): string {\n    if (!price) {\n        return '';\n    }\n    const value = new BigNumber(amount).multipliedBy(new BigNumber(price));\n    if (isNullish(mantissa)) {\n        if (value.lt(new BigNumber(1))) {\n            mantissa = 4;\n        } else {\n            mantissa = 2;\n        }\n    }\n\n    return `\u2248${numbro(value)\n        .format({\n            thousandSeparated: true,\n            trimMantissa: true,\n            mantissa: mantissa,\n        })\n        .replace(/-0$/, '0')} ${fiatCoin.toUpperCase()}`;\n}\n\nexport function trimDecimals(value: number | string, mantissa = 6): string {\n    return numbro(value).format({\n        thousandSeparated: true,\n        trimMantissa: true,\n        mantissa: mantissa,\n    });\n}\n\nexport function fromSunFormat(amount: PrefixedHexString | string, mantissa = 6): string {\n    const bn = new BigNumber(amount, isHexString(amount) ? 16 : 10);\n    const value = bn.div(new BigNumber(1000_000)).toString(10);\n    return numbro(value).format({\n        thousandSeparated: true,\n        trimMantissa: true,\n        mantissa: mantissa,\n    });\n}\n\n/**\n * \u683C\u5F0F\u5316\u4EE3\u5E01\u6570\u91CF\n * @param value \u539F\u59CB\u503C\uFF0C\u53EF\u4EE5\u662F BigNumber\u3001number \u6216 string \u7C7B\u578B\n * @param decimals \u5C0F\u6570\u4F4D\u6570\n * @returns \u683C\u5F0F\u5316\u540E\u7684\u4EE3\u5E01\u6570\u91CF\n */\nexport const formatTokenAmount2 = (value: BigNumber | number | string, decimals: number): string => {\n    let bn: BigNumber;\n    if (!(value instanceof BigNumber)) {\n        bn = new BigNumber(value).dividedBy(new BigNumber(10).pow(decimals));\n    } else {\n        bn = value;\n    }\n\n    const str = bn.toFixed();\n    const [int, dec] = str.split('.');\n    let decimalLength = 9;\n\n    if (int.length > 15) {\n        return bn.toExponential(2); // \u4F7F\u7528\u79D1\u5B66\u8BA1\u6570\u6CD5\uFF0C\u5C0F\u6570\u70B9\u540E\u4E24\u4F4D\n    }\n\n    if (int.length > 5) {\n        decimalLength = Math.max(9 - (int.length - 5), 0);\n    }\n\n    if (dec && decimalLength > 0) {\n        const decPart = dec.slice(0, decimalLength);\n        return new BigNumber(`${int}.${decPart}`).toFixed();\n    }\n\n    return int;\n};\n\n/**\n * \u683C\u5F0F\u5316\u6CD5\u5E01\u6570\u91CF\n * @param value \u539F\u59CB\u503C\uFF0C\u53EF\u4EE5\u662F BigNumber\u3001number \u6216 string \u7C7B\u578B\n * @returns \u683C\u5F0F\u5316\u540E\u7684\u6CD5\u5E01\u6570\u91CF\n */\nexport const formatFiatAmount = (value: BigNumber | number | string): string => {\n    let bn: BigNumber;\n    if (!(value instanceof BigNumber)) {\n        bn = new BigNumber(value);\n    } else {\n        bn = value;\n    }\n\n    const str = bn.toFixed();\n    const [int, dec] = str.split('.');\n\n    if (dec) {\n        const decPart = dec.slice(0, 4);\n        return new BigNumber(`${int}.${decPart}`).toFixed();\n    }\n\n    return int;\n};\n", "import { isHexString } from '@ethereumjs/util';\nimport type { GasFeeMode } from '@particle-network/auth-core';\nimport { tronAddressToHex, type EIP1559TxData, type EVMTransaction, type TxData } from '@particle-network/auth-core';\nimport type { Chain, ChainInfo } from '@particle-network/chains';\nimport { chains } from '@particle-network/chains';\nimport { BigNumber } from 'bignumber.js';\nimport { toHexPrefixString } from './common-utils';\n\nexport function isEIP1559Type(type: string | number | undefined): boolean {\n    if (typeof type == 'number') {\n        return type === 2;\n    } else if (typeof type == 'string') {\n        return Number(type) === 2;\n    }\n    return false;\n}\n\nconst parseValue = (value: string | number) => {\n    if (typeof value === 'string') {\n        if (value.startsWith('0x')) {\n            return value;\n        } else {\n            return `0x${new BigNumber(value).toString(16)}`;\n        }\n    } else {\n        return toHexPrefixString(value);\n    }\n};\n\nexport function parseTransaction(txData: TxData | EIP1559TxData, chainInfo: ChainInfo): EVMTransaction {\n    let nonce,\n        gasPrice,\n        gasLimit,\n        from,\n        to,\n        value,\n        data,\n        type,\n        chainId,\n        maxPriorityFeePerGas,\n        maxFeePerGas,\n        action,\n        gasLevel;\n\n    const tron = isTron(chainInfo);\n    if (tron && !isHexString(txData.from)) {\n        from = tronAddressToHex(txData.from);\n    } else {\n        from = txData.from;\n    }\n    if (txData.to) {\n        if (tron && !isHexString(txData.to)) {\n            to = tronAddressToHex(txData.to);\n        } else {\n            to = txData.to;\n        }\n    }\n\n    if (txData.gas && !txData.gasLimit) {\n        gasLimit = parseValue(txData.gas);\n    } else if (txData.gasLimit) {\n        gasLimit = parseValue(txData.gasLimit);\n    }\n    if (txData.value) {\n        value = parseValue(txData.value);\n    }\n    if (txData.data) {\n        data = toHexPrefixString(txData.data);\n    }\n    if (txData.chainId) {\n        chainId = parseValue(txData.chainId);\n    } else {\n        chainId = parseValue(chainInfo.id);\n    }\n    if (txData.nonce) {\n        nonce = parseValue(txData.nonce);\n    }\n    if ('maxPriorityFeePerGas' in txData && txData.maxPriorityFeePerGas) {\n        maxPriorityFeePerGas = parseValue(txData.maxPriorityFeePerGas);\n    }\n    if ('maxFeePerGas' in txData && txData.maxFeePerGas) {\n        maxFeePerGas = parseValue(txData.maxFeePerGas);\n    }\n    if (txData.gasPrice) {\n        gasPrice = parseValue(txData.gasPrice);\n    }\n\n    if (txData.type || txData.type === 0) {\n        type = parseValue(txData.type);\n    } else {\n        if (\n            'maxPriorityFeePerGas' in txData &&\n            txData.maxPriorityFeePerGas &&\n            'maxFeePerGas' in txData &&\n            txData.maxFeePerGas &&\n            chains.isChainSupportEIP1559(chainInfo)\n        ) {\n            type = '0x2';\n        } else if ('gasPrice' in txData && txData.gasPrice) {\n            type = '0x0';\n        } else {\n            type = chains.isChainSupportEIP1559(chainInfo) ? '0x2' : '0x0';\n        }\n    }\n\n    if (txData.action && ['normal', 'cancel', 'speedup'].includes(txData.action)) {\n        action = txData.action;\n    } else {\n        action = undefined;\n    }\n\n    if (txData.gasLevel && ['custom', 'low', 'medium', 'high'].includes(txData.gasLevel)) {\n        gasLevel = txData.gasLevel as GasFeeMode;\n    } else {\n        gasLevel = undefined;\n    }\n\n    return {\n        nonce,\n        gasPrice,\n        gasLimit,\n        from,\n        to,\n        value,\n        data,\n        type,\n        chainId,\n        maxPriorityFeePerGas,\n        maxFeePerGas,\n        action,\n        gasLevel,\n    };\n}\n\nexport function isEMVMethod(method: string): boolean {\n    return typeof method === 'string' && (method.startsWith('eth_') || method.startsWith('personal_'));\n}\n\n/**\n * isEVMAddress\n * @param address\n * @returns\n */\nexport function isEVMAddress(address: string): boolean {\n    // @ts-ignore\n    return address && address.length === 42 && address.startsWith('0x');\n}\n\nexport function isTron(chain: Chain): boolean {\n    return chain.name.toLowerCase() === 'tron';\n}\n", "import {\n    EvmEnhancedMethod,\n    GasFeeMode,\n    isNullish,\n    particleAuth,\n    type EIP1559TxData,\n    type GasFeeResult,\n    type TxData,\n} from '@particle-network/auth-core';\nimport { chains } from '@particle-network/chains';\nimport { bnToHex } from './common-utils';\nimport { toWei } from './number-utils';\nimport { parseTransaction } from './transaction-utils';\n\nconst evmSendTransaction = async (transaction: Omit<TxData | EIP1559TxData, 'from'>): Promise<string> => {\n    const chainId = Number(transaction.chainId || particleAuth.ethereum.chainId);\n    const txData = {\n        ...transaction,\n        from: particleAuth.ethereum.selectedAddress!,\n        chainId,\n    };\n\n    const chain = chains.getEVMChainInfoById(chainId)!;\n\n    if (isNullish(txData.data)) {\n        txData.data = '0x';\n    }\n\n    const evmTx = parseTransaction(txData, chain);\n\n    if (!evmTx.gasLimit) {\n        evmTx.gasLimit = await fetchEstimateGas(\n            { from: evmTx.from, to: evmTx.to, value: evmTx.value, data: evmTx.data },\n            chainId\n        );\n    }\n\n    if (Number(evmTx.type) === 2) {\n        if (!evmTx.maxPriorityFeePerGas || !evmTx.maxFeePerGas) {\n            const gasFee = await fetchSuggestedGasFee(chainId);\n            evmTx.maxFeePerGas = bnToHex(toWei(gasFee[GasFeeMode.medium].maxFeePerGas, 'gwei'));\n            evmTx.maxPriorityFeePerGas = bnToHex(toWei(gasFee[GasFeeMode.medium].maxPriorityFeePerGas, 'gwei'));\n        }\n    } else {\n        if (!evmTx.gasPrice) {\n            const gasFee = await fetchSuggestedGasFee(chainId);\n            evmTx.gasPrice = bnToHex(toWei(gasFee[GasFeeMode.medium].maxFeePerGas, 'gwei'));\n        }\n    }\n\n    const result = await particleAuth.ethereum.sendTransaction(evmTx);\n    return result;\n};\n\nconst fetchEstimateGas = async (\n    param: {\n        from: string;\n        to?: string;\n        value?: string | number;\n        data?: string;\n    },\n    chainId: number\n): Promise<string> => {\n    if (!param.to || param.to.length === 0) {\n        delete param.to;\n    }\n    const result = await particleAuth.ethereum.request({\n        chainId,\n        method: 'eth_estimateGas',\n        params: [param],\n    });\n    return result;\n};\n\nconst fetchSuggestedGasFee = async (chainId: number): Promise<GasFeeResult> => {\n    const result = await particleAuth.ethereum.request({\n        chainId,\n        method: EvmEnhancedMethod.suggestedGasFees,\n    });\n    return result;\n};\n\nexport default evmSendTransaction;\n", "import { addHexPrefix, isHexString } from '@ethereumjs/util';\nimport { providerErrors, rpcErrors } from '@metamask/rpc-errors';\nimport {\n    EvmRpcMethod,\n    ethereumUtils,\n    isNullish,\n    requireNotNullish,\n    type EIP1193Provider,\n    type EIP1559TxData,\n    type MessageTypes,\n    type PrefixedHexString,\n    type RpcInput,\n    type SignTypedDataVersion,\n    type TxData,\n    type TypedDataV1,\n    type TypedMessage,\n} from '@particle-network/auth-core';\nimport { chains } from '@particle-network/chains';\n\nexport class EVMProvider implements EIP1193Provider {\n    signMessage = async (message: PrefixedHexString | string, uniq?: boolean): Promise<string> => {\n        throw new Error('signMessage not implemented.');\n    };\n\n    sendTransaction = async (transaction: Omit<TxData | EIP1559TxData, 'from'>): Promise<string> => {\n        throw new Error('sendTransaction not implemented.');\n    };\n\n    signTypedData = async <V extends SignTypedDataVersion, T extends MessageTypes>({\n        data,\n        version,\n        uniq,\n    }: {\n        data: V extends 'V1' ? TypedDataV1 : TypedMessage<T>;\n        version: V;\n        uniq?: boolean;\n    }): Promise<string> => {\n        throw new Error('signTypedData not implemented.');\n    };\n\n    get selectedAddress(): string | null {\n        return requireNotNullish(window.particleAuth).ethereum.selectedAddress;\n    }\n\n    get chainId(): string {\n        return requireNotNullish(window.particleAuth).ethereum.chainId;\n    }\n\n    isConnected(): boolean {\n        return requireNotNullish(window.particleAuth).ethereum.isConnected();\n    }\n\n    on(event: string, listener: (...args: any[]) => void): this {\n        window.particleAuth?.ethereum.on(event, listener);\n        return this;\n    }\n\n    once(event: string, listener: (...args: any[]) => void): this {\n        window.particleAuth?.ethereum.once(event, listener);\n        return this;\n    }\n\n    off(event: string, listener: (...args: any[]) => void): this {\n        window.particleAuth?.ethereum.off(event, listener);\n        return this;\n    }\n\n    removeListener(event: string, listener: (...args: any[]) => void): this {\n        window.particleAuth?.ethereum.removeListener(event, listener);\n        return this;\n    }\n\n    /**\n     * @deprecated user `request` instead\n     */\n    async enable(): Promise<string[]> {\n        return await requireNotNullish(window.particleAuth).ethereum.enable();\n    }\n\n    async disconnect() {\n        return await requireNotNullish(window.particleAuth).ethereum.disconnect();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async request(data: Partial<RpcInput>): Promise<any> {\n        const method = data.method;\n        if (!method) {\n            throw rpcErrors.invalidParams('Invalid parameters: method is required.');\n        }\n        if (Object.values(EvmRpcMethod).includes(method as EvmRpcMethod)) {\n            if (method === EvmRpcMethod.ethAccounts || method === EvmRpcMethod.ethRequestAccounts) {\n                return await requireNotNullish(window.particleAuth).ethereum.request(data);\n            } else if (method === EvmRpcMethod.ethChainId) {\n                return this.chainId;\n            } else if (method.startsWith(EvmRpcMethod.ethSignTypedData)) {\n                this.#checkConnected();\n                /**\n                 * v1: https://medium.com/metamask/scaling-web3-with-signtypeddata-91d6efc8b290\n                 * v3: https://medium.com/metamask/eip712-is-coming-what-to-expect-and-how-to-use-it-bb92fd1a7a26\n                 * v4: https://docs.metamask.io/wallet/reference/eth_signtypeddata_v4/\n                 */\n                const isV1 = ethereumUtils.isSignTypedDataV1(method);\n                const from = isV1 ? data?.params?.[1] : data?.params?.[0];\n                let typedData = isV1 ? data?.params?.[0] : data?.params?.[1];\n                if (!from || typeof from !== 'string') {\n                    throw rpcErrors.invalidParams('Invalid parameters: must provide an Ethereum address.');\n                }\n                if (!typedData) {\n                    throw rpcErrors.invalidParams('Invalid parameters: must provide typed data.');\n                }\n                if (from.toLowerCase() !== this.selectedAddress?.toLowerCase()) {\n                    throw providerErrors.unauthorized();\n                }\n                if (typeof typedData === 'string') {\n                    typedData = JSON.parse(typedData);\n                }\n                const uniq = ethereumUtils.isUniq(method);\n                const version = ethereumUtils.getSignTypedVersion(method);\n\n                const result = await this.signTypedData({\n                    data: typedData as any, // eslint-disable-line\n                    version,\n                    uniq,\n                });\n                return result;\n            } else if (method.startsWith(EvmRpcMethod.personalSign)) {\n                this.#checkConnected();\n                let message = data?.params?.[0];\n                const from = data?.params?.[1];\n                if (!message || typeof message !== 'string') {\n                    throw rpcErrors.invalidParams('Invalid parameters: must provide a valid message.');\n                }\n                if (!from || typeof from !== 'string') {\n                    throw rpcErrors.invalidParams('Invalid parameters: must provide an Ethereum address.');\n                }\n                if (from.toLowerCase() !== this.selectedAddress?.toLowerCase()) {\n                    throw providerErrors.unauthorized();\n                }\n\n                if (!isHexString(message)) {\n                    message = addHexPrefix(Buffer.from(message).toString('hex'));\n                }\n                const uniq = ethereumUtils.isUniq(method);\n                const result = await this.signMessage(message as PrefixedHexString, uniq);\n                return result;\n            } else if (method === EvmRpcMethod.walletSwitchEthereumChain) {\n                return await requireNotNullish(window.particleAuth).ethereum.request(data);\n            } else if (method === EvmRpcMethod.ethSendTransaction) {\n                this.#checkConnected();\n                const chainId = Number(data.chainId || this.chainId);\n                const chain = chains.getEVMChainInfoById(chainId);\n                if (!chain) {\n                    throw providerErrors.chainDisconnected();\n                }\n                const txData = data.params?.[0] as any; // eslint-disable-line\n                if (!txData) {\n                    throw rpcErrors.invalidParams('Invalid parameters: must provide an transaction data.');\n                }\n                if (isNullish(txData.type)) {\n                    if (chains.isChainSupportEIP1559(chain)) {\n                        // set transaction default type \"0x2\", EIP1559.\n                        txData.type = '0x2';\n                    } else {\n                        txData.type = '0x0';\n                    }\n                }\n                if (isNullish(txData.chainId)) {\n                    txData.chainId = `0x${chainId.toString(16)}`;\n                }\n                if (isNullish(txData.nonce)) {\n                    txData.nonce = '0x0';\n                }\n                if (isNullish(txData.data)) {\n                    txData.data = '0x';\n                }\n                const result = await this.sendTransaction(txData);\n                return result;\n            } else {\n                throw providerErrors.unsupportedMethod();\n            }\n        } else {\n            return await requireNotNullish(window.particleAuth).ethereum.request(data);\n        }\n    }\n\n    #checkConnected() {\n        if (!this.isConnected()) {\n            throw providerErrors.unauthorized();\n        }\n    }\n}\n", "import { useParticleAuth } from '..';\n\nexport const useUserInfo = () => {\n    const { userInfo } = useParticleAuth();\n    return {\n        userInfo,\n    };\n};\n", "import {\n    AuthCoreEvent,\n    AuthType,\n    EvmRpcMethod,\n    SignTypedDataVersion,\n    check,\n    getLatestAuthType,\n    isConnected,\n    particleAuth,\n    requireNotNullish,\n    type EIP1559TxData,\n    type MessageTypes,\n    type PrefixedHexString,\n    type TxData,\n    type TypedDataV1,\n    type TypedMessage,\n} from '@particle-network/auth-core';\nimport { chains, type ChainInfo } from '@particle-network/chains';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useCustomNavigate, useEvents, useModalOptions, useParticleAuth } from '..';\nimport { AuthError } from '../../api/model/authError';\nimport { AuthPage } from '../../components/customRouter';\nimport { getEvmChain } from '../../utils/chain-utils';\nimport { toHexPrefixString } from '../../utils/common-utils';\nimport evmSendTransaction from '../../utils/evmSendTransaction';\nimport { EVMProvider } from '../evmProvider';\nimport { AuthCoreModalEvent } from '../types';\nimport { useAuthCore } from './useAuthCore';\nimport { useConnect } from './useConnect';\nimport { useUserInfo } from './useUserInfo';\n\nexport const useEthereum = () => {\n    const navigate = useCustomNavigate();\n\n    const { events } = useEvents();\n\n    const [chainId, setChainId] = useState<number>(Number(particleAuth.ethereum.chainId));\n\n    const [chainInfo, setChainInfo] = useState<ChainInfo>(requireNotNullish(getEvmChain(chainId)));\n\n    const [address, setAddress] = useState(particleAuth.ethereum.selectedAddress);\n\n    const { userInfo } = useUserInfo();\n\n    const { needRestoreWallet } = useAuthCore();\n\n    const { modalOptions } = useModalOptions();\n\n    const { setAuthCoreModal } = useParticleAuth();\n\n    const { connect } = useConnect();\n\n    const silentApprove = useMemo(() => {\n        if (\n            needRestoreWallet ||\n            userInfo?.security_account.has_set_payment_password ||\n            modalOptions.promptSettingConfig?.promptPaymentPasswordSettingWhenSign ||\n            getLatestAuthType() !== AuthType.jwt\n        ) {\n            return false;\n        }\n        return true;\n    }, [\n        userInfo?.security_account.has_set_payment_password,\n        needRestoreWallet,\n        modalOptions.promptSettingConfig?.promptPaymentPasswordSettingWhenSign,\n    ]);\n\n    useEffect(() => {\n        const onChainChanged = (chainId: string) => {\n            setChainId(Number(chainId));\n        };\n        particleAuth.ethereum.on('chainChanged', onChainChanged);\n\n        const onConnect = () => {\n            setAddress(particleAuth.ethereum.selectedAddress);\n        };\n        particleAuth.ethereum.on('connect', onConnect);\n\n        const onAccountsChanged = (accounts: string[]) => {\n            if (accounts[0]) {\n                setAddress(accounts[0]);\n            }\n        };\n        particleAuth.ethereum.on('accountsChanged', onAccountsChanged);\n\n        const onDisconnect = () => {\n            setAddress(null);\n        };\n        particleAuth.ethereum.on('disconnect', onDisconnect);\n\n        const onRequestAccount = ({ resolve, reject }: any) => {\n            connect()\n                .then((userInfo) => {\n                    resolve(userInfo);\n                })\n                .catch((error) => {\n                    reject(error);\n                });\n        };\n        particleAuth.on(AuthCoreEvent.RequestEthereumAccount, onRequestAccount);\n\n        return () => {\n            particleAuth.ethereum.off('chainChanged', onChainChanged);\n            particleAuth.ethereum.off('connect', onConnect);\n            particleAuth.ethereum.off('accountsChanged', onAccountsChanged);\n            particleAuth.ethereum.off('disconnect', onDisconnect);\n            particleAuth.off(AuthCoreEvent.RequestEthereumAccount, onRequestAccount);\n        };\n    }, [connect]);\n\n    useEffect(() => {\n        if (chainId) {\n            setChainInfo(requireNotNullish(getEvmChain(chainId)));\n        }\n    }, [chainId]);\n\n    const checkAuthCoreState = () => {\n        check(particleAuth, 'Please init first!');\n        check(isConnected(), AuthError.notLogin());\n        check(particleAuth.ethereum.selectedAddress, 'Please create wallet first!');\n    };\n\n    const signImpl = useCallback(\n        async <T>(state: { method: string; param: unknown }): Promise<T> => {\n            checkAuthCoreState();\n            const result = await new Promise<T>((resolve, reject) => {\n                if (events.listenerCount(AuthCoreModalEvent.SignResponse) > 0) {\n                    reject(AuthError.pending('sign'));\n                } else {\n                    events.once(AuthCoreModalEvent.SignResponse, (response) => {\n                        if (response.error) {\n                            reject(response.error);\n                        } else {\n                            resolve(response.result);\n                        }\n                        setAuthCoreModal({ particleModalVisible: false });\n                    });\n                    navigate(AuthPage.EvmSign, {\n                        replace: true,\n                        state,\n                    });\n                }\n            });\n            return result;\n        },\n        [navigate, events]\n    );\n\n    const signMessage = useCallback(\n        async (message: PrefixedHexString | string, uniq?: boolean): Promise<string> => {\n            if (silentApprove) {\n                const result = await particleAuth.ethereum.signMessage(toHexPrefixString(message), uniq);\n                return result;\n            } else {\n                const result = await signImpl<string>({\n                    param: toHexPrefixString(message),\n                    method: uniq ? EvmRpcMethod.personalSignUniq : EvmRpcMethod.personalSign,\n                });\n                return result;\n            }\n        },\n        [signImpl, silentApprove]\n    );\n\n    const signTypedData = useCallback(\n        async <V extends SignTypedDataVersion, T extends MessageTypes>({\n            data,\n            version,\n            uniq,\n        }: {\n            data: V extends 'V1' ? TypedDataV1 : TypedMessage<T>;\n            version: V;\n            uniq?: boolean;\n        }): Promise<string> => {\n            if (silentApprove) {\n                const result = await particleAuth.ethereum.signTypedData({ data, version, uniq });\n                return result;\n            } else {\n                const result = await signImpl<string>({\n                    param: data,\n                    method: getSignTypedDataMethod({ version, uniq }),\n                });\n                return result;\n            }\n        },\n        [signImpl, silentApprove]\n    );\n\n    const sendTransaction = useCallback(\n        async (transaction: Omit<TxData, 'from'> | Omit<EIP1559TxData, 'from'>): Promise<string> => {\n            if (transaction.chainId && !chains.getEVMChainInfoById(Number(transaction.chainId))) {\n                throw new Error(`The chainId: ${transaction.chainId} is not supported.`);\n            }\n\n            if (silentApprove) {\n                const result = await evmSendTransaction(transaction);\n                return result;\n            } else {\n                const result = await signImpl<string>({\n                    param: { ...transaction, from: address, chainId: transaction.chainId || chainId },\n                    method: EvmRpcMethod.ethSendTransaction,\n                });\n                return result;\n            }\n        },\n        [address, chainId, signImpl, silentApprove]\n    );\n\n    const switchChain = useCallback(async (id: number | PrefixedHexString) => {\n        await requireNotNullish(particleAuth, 'Please init first!').ethereum.switchChain(id);\n    }, []);\n\n    const enable = useCallback(async (): Promise<string> => {\n        const result = await requireNotNullish(particleAuth, 'Please init first!').ethereum.enable();\n        return result[0];\n    }, []);\n\n    const provider = useMemo(() => {\n        const eip1193Provider = new EVMProvider();\n        eip1193Provider.signMessage = signMessage;\n        eip1193Provider.signTypedData = signTypedData;\n        eip1193Provider.sendTransaction = sendTransaction;\n        return eip1193Provider;\n    }, []);\n\n    useEffect(() => {\n        if (provider) {\n            provider.signMessage = signMessage;\n            provider.signTypedData = signTypedData;\n            provider.sendTransaction = sendTransaction;\n        }\n    }, [provider, signMessage, signTypedData, sendTransaction]);\n\n    return {\n        provider,\n        address,\n        chainId,\n        chainInfo,\n        switchChain,\n        signMessage,\n        signTypedData,\n        sendTransaction,\n        enable,\n    };\n};\n\nfunction getSignTypedDataMethod({ version, uniq }: { version: SignTypedDataVersion; uniq?: boolean }): string {\n    if (SignTypedDataVersion.V1 === version) {\n        return EvmRpcMethod.ethSignTypedDataV1;\n    } else if (SignTypedDataVersion.V3 === version) {\n        return EvmRpcMethod.ethSignTypedDataV3;\n    } else {\n        return uniq ? EvmRpcMethod.ethSignTypedDataV4Uniq : EvmRpcMethod.ethSignTypedDataV4;\n    }\n}\n", "import { useEffect, useReducer } from 'react';\n\nexport const useIsMounted = () => {\n    const [mounted, setMounted] = useReducer(() => true, false);\n    useEffect(setMounted, [setMounted]);\n    return mounted;\n};\n", "import type { RpcInput } from '@particle-network/auth-core';\nimport type { PublicKey, Transaction, VersionedTransaction } from '@solana/web3.js';\n\nexport class SolanaWallet {\n    readonly isParticleNetwork = true;\n\n    name = 'Particle';\n    url = 'https://particle.network';\n    icon = 'https://static.particle.network/wallet-icons/Particle.png';\n\n    on(event: string, listener: (...args: any[]) => void): this {\n        window.particleAuth?.solana.on(event, listener);\n        return this;\n    }\n\n    once(event: string, listener: (...args: any[]) => void): this {\n        window.particleAuth?.solana.once(event, listener);\n        return this;\n    }\n\n    off(event: string, listener: (...args: any[]) => void): this {\n        window.particleAuth?.solana.off(event, listener);\n        return this;\n    }\n\n    removeListener(event: string, listener: (...args: any[]) => void): this {\n        window.particleAuth?.solana.removeListener(event, listener);\n        return this;\n    }\n\n    get connecting(): boolean {\n        return window.particleAuth?.solana.connecting ?? false;\n    }\n\n    get connected(): boolean {\n        return window.particleAuth?.solana.connected ?? false;\n    }\n\n    async publicKey(): Promise<PublicKey | undefined> {\n        return window.particleAuth?.solana.publicKey();\n    }\n\n    get selectedAddress(): string | null {\n        return window.particleAuth?.solana.selectedAddress ?? null;\n    }\n\n    get chainId(): number {\n        return window.particleAuth?.solana.chainId ?? 101;\n    }\n\n    async connect(): Promise<void> {\n        await window.particleAuth?.solana.connect();\n    }\n\n    async disconnect(): Promise<void> {\n        await window.particleAuth?.solana.disconnect();\n    }\n\n    signTransaction = async <T extends Transaction | VersionedTransaction>(\n        transaction: T,\n        chainId?: number\n    ): Promise<T> => {\n        throw new Error('signMessage not implemented.');\n    };\n\n    signAllTransactions = async <T extends Transaction | VersionedTransaction>(\n        transactions: T[],\n        chainId?: number\n    ): Promise<T[]> => {\n        throw new Error('signMessage not implemented.');\n    };\n\n    signAndSendTransaction = async <T extends Transaction | VersionedTransaction>(\n        transaction: T,\n        chainId?: number\n    ): Promise<string> => {\n        throw new Error('signMessage not implemented.');\n    };\n\n    signMessage = async (message: Uint8Array): Promise<Uint8Array> => {\n        throw new Error('signMessage not implemented.');\n    };\n\n    switchChain = async (chainId: number) => {\n        await window.particleAuth?.solana.switchChain(chainId);\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async request(data: Partial<RpcInput>): Promise<any> {\n        return window.particleAuth?.solana.request(data);\n    }\n}\n", "import {\n    AuthCoreEvent,\n    AuthType,\n    SolanaRpcMethod,\n    check,\n    getLatestAuthType,\n    isConnected,\n    particleAuth,\n    requireNotNullish,\n} from '@particle-network/auth-core';\nimport { chains, type ChainInfo } from '@particle-network/chains';\nimport type { Transaction, VersionedTransaction } from '@solana/web3.js';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useCustomNavigate, useEvents, useModalOptions, useParticleAuth } from '..';\nimport { AuthError } from '../../api/model/authError';\nimport { AuthPage } from '../../components/customRouter';\nimport { getSolanaChain } from '../../utils/chain-utils';\nimport { SolanaWallet } from '../solanaWallet';\nimport { AuthCoreModalEvent } from '../types';\nimport { useAuthCore } from './useAuthCore';\nimport { useConnect } from './useConnect';\nimport { useUserInfo } from './useUserInfo';\n\nexport const useSolana = () => {\n    const navigate = useCustomNavigate();\n\n    const { events } = useEvents();\n\n    const [chainId, setChainId] = useState<number>(particleAuth.solana.chainId);\n\n    const [chainInfo, setChainInfo] = useState<ChainInfo>(\n        requireNotNullish(getSolanaChain(particleAuth.solana.chainId))\n    );\n\n    const [address, setAddress] = useState(particleAuth.solana.selectedAddress);\n\n    const { setAuthCoreModal } = useParticleAuth();\n\n    const { connect } = useConnect();\n\n    const { userInfo } = useUserInfo();\n\n    const { needRestoreWallet } = useAuthCore();\n\n    const { modalOptions } = useModalOptions();\n\n    const silentApprove = useMemo(() => {\n        if (\n            needRestoreWallet ||\n            userInfo?.security_account.has_set_payment_password ||\n            modalOptions.promptSettingConfig?.promptPaymentPasswordSettingWhenSign ||\n            getLatestAuthType() !== AuthType.jwt\n        ) {\n            return false;\n        }\n        return true;\n    }, [\n        userInfo?.security_account.has_set_payment_password,\n        needRestoreWallet,\n        modalOptions.promptSettingConfig?.promptPaymentPasswordSettingWhenSign,\n    ]);\n\n    useEffect(() => {\n        const onChainChanged = (chainId: number) => {\n            setChainId(chainId);\n        };\n        particleAuth.solana.on('chainChanged', onChainChanged);\n\n        const onConnect = () => {\n            setAddress(particleAuth.solana.selectedAddress);\n        };\n        particleAuth.solana.on('connect', onConnect);\n\n        setChainId(particleAuth.solana.chainId ?? 101);\n\n        const onDisconnect = () => {\n            setAddress(null);\n        };\n        particleAuth.solana.on('disconnect', onDisconnect);\n\n        const onRequestAccount = ({ resolve, reject }: any) => {\n            connect()\n                .then((userInfo) => {\n                    resolve(userInfo);\n                })\n                .catch((error) => {\n                    reject(error);\n                });\n        };\n        particleAuth.on(AuthCoreEvent.RequestSolanaAccount, onRequestAccount);\n\n        return () => {\n            particleAuth.solana.off('chainChanged', onChainChanged);\n            particleAuth.solana.off('connect', onConnect);\n            particleAuth.solana.off('disconnect', onDisconnect);\n            particleAuth.off(AuthCoreEvent.RequestSolanaAccount, onRequestAccount);\n        };\n    }, [connect]);\n\n    useEffect(() => {\n        if (chainId) {\n            setChainInfo(requireNotNullish(getSolanaChain(chainId)));\n        }\n    }, [chainId]);\n\n    const checkAuthCoreState = () => {\n        check(particleAuth, 'Please init first!');\n        check(isConnected(), AuthError.notLogin());\n        check(particleAuth.solana.selectedAddress, 'Please create wallet first!');\n    };\n\n    const signImpl = useCallback(\n        async <T>(state: { method: string; param: unknown; chainId?: number }): Promise<T> => {\n            checkAuthCoreState();\n            const result = await new Promise<T>((resolve, reject) => {\n                if (events.listenerCount(AuthCoreModalEvent.SignResponse) > 0) {\n                    reject(AuthError.pending('sign'));\n                } else {\n                    events.once(AuthCoreModalEvent.SignResponse, (response) => {\n                        if (response.error) {\n                            reject(response.error);\n                        } else {\n                            resolve(response.result);\n                        }\n                        setAuthCoreModal({ particleModalVisible: false });\n                    });\n                    navigate(AuthPage.SolanaSign, {\n                        replace: true,\n                        state,\n                    });\n                }\n            });\n            return result;\n        },\n        [navigate]\n    );\n\n    const signMessage = useCallback(\n        async (message: Uint8Array): Promise<Uint8Array> => {\n            if (silentApprove) {\n                const signature = await particleAuth.solana.signMessage(message);\n                return signature;\n            } else {\n                const signature = await signImpl<Uint8Array>({\n                    param: message,\n                    method: SolanaRpcMethod.signMessage,\n                });\n                return signature;\n            }\n        },\n        [signImpl, silentApprove]\n    );\n\n    const signTransaction = useCallback(\n        async <T extends Transaction | VersionedTransaction>(transaction: T, chainId?: number): Promise<T> => {\n            check(!chainId || chains.getSolanaChainInfoById(chainId), `The chainId: ${chainId} is not supported`);\n            if (silentApprove) {\n                const signature = await particleAuth.solana.signTransaction(transaction, chainId);\n                return signature;\n            } else {\n                const signature = await signImpl<T>({\n                    param: transaction,\n                    method: SolanaRpcMethod.signTransaction,\n                    chainId,\n                });\n                return signature;\n            }\n        },\n        [signImpl, silentApprove]\n    );\n\n    const signAllTransactions = useCallback(\n        async <T extends Transaction | VersionedTransaction>(transactions: T[], chainId?: number): Promise<T[]> => {\n            check(!chainId || chains.getSolanaChainInfoById(chainId), `The chainId: ${chainId} is not supported`);\n            if (silentApprove) {\n                const signature = await particleAuth.solana.signAllTransactions(transactions, chainId);\n                return signature;\n            } else {\n                const signature = await signImpl<T[]>({\n                    param: transactions,\n                    method: SolanaRpcMethod.signAllTransactions,\n                    chainId,\n                });\n                return signature;\n            }\n        },\n        [signImpl, silentApprove]\n    );\n\n    const signAndSendTransaction = useCallback(\n        async <T extends Transaction | VersionedTransaction>(transaction: T, chainId?: number): Promise<string> => {\n            check(!chainId || chains.getSolanaChainInfoById(chainId), `The chainId: ${chainId} is not supported`);\n            if (silentApprove) {\n                const signature = await particleAuth.solana.signAndSendTransaction(transaction, chainId);\n                return signature;\n            } else {\n                const signature = await signImpl<string>({\n                    param: transaction,\n                    method: SolanaRpcMethod.signAndSendTransaction,\n                    chainId,\n                });\n                return signature;\n            }\n        },\n        [signImpl, silentApprove]\n    );\n\n    const switchChain = useCallback(async (id: number) => {\n        await requireNotNullish(particleAuth, 'Please init first!').solana.switchChain(id);\n    }, []);\n\n    const enable = useCallback(async (): Promise<string> => {\n        await requireNotNullish(particleAuth, 'Please init first!').solana.connect();\n        return requireNotNullish(particleAuth.solana.selectedAddress);\n    }, []);\n\n    const wallet = useMemo(() => {\n        const solanaWallet = new SolanaWallet();\n        solanaWallet.signMessage = signMessage;\n        solanaWallet.signTransaction = signTransaction;\n        solanaWallet.signAllTransactions = signAllTransactions;\n        solanaWallet.signAndSendTransaction = signAndSendTransaction;\n        return solanaWallet;\n    }, []);\n\n    useEffect(() => {\n        if (wallet) {\n            wallet.signMessage = signMessage;\n            wallet.signTransaction = signTransaction;\n            wallet.signAllTransactions = signAllTransactions;\n            wallet.signAndSendTransaction = signAndSendTransaction;\n        }\n    }, [wallet, signMessage, signTransaction, signAllTransactions, signAndSendTransaction]);\n\n    return {\n        address,\n        chainId,\n        chainInfo,\n        switchChain,\n        signMessage,\n        signTransaction,\n        signAllTransactions,\n        signAndSendTransaction,\n        enable,\n        wallet,\n    };\n};\n", "// export for library\nexport { useAuthCore } from './useAuthCore';\nexport { useConnect } from './useConnect';\nexport { useCustomize } from './useCustomize';\nexport { useEthereum } from './useEthereum';\nexport { useIsMounted } from './useIsMounted';\nexport { useSolana } from './useSolana';\nexport { useUserInfo } from './useUserInfo';\n", "import { isConnected } from '@particle-network/auth-core';\nimport { message } from 'antd';\nimport base64url from 'base64url';\nimport qs from 'qs';\nimport React, { useEffect } from 'react';\nimport { useCustomNavigate, useParticleAuth } from '../../context';\nimport { useConnect } from '../../context/hooks';\nimport { isServer } from '../../utils';\nimport styles from './index.less';\n\nconst Index = () => {\n    const { connect } = useConnect();\n    const navigate = useCustomNavigate();\n    const { setConnectionStatus, socialConnectCallback } = useParticleAuth();\n    const thirdpartyLogin = async () => {\n        try {\n            const query = qs.parse(!isServer() ? window.location.search : '', {\n                ignoreQueryPrefix: true,\n            });\n            const particleThirdpartyParamsContent = query?.particleThirdpartyParams as string;\n            if (!particleThirdpartyParamsContent) {\n                if (!isConnected()) {\n                    setConnectionStatus('disconnected');\n                }\n                return;\n            }\n\n            delete query.particleThirdpartyParams;\n            const replaceUrl = (window.location.origin + window.location.pathname + '?' + qs.stringify(query)).replace(\n                /\\?$/,\n                ''\n            );\n            window.history.replaceState({}, document.title, replaceUrl);\n            document.title = document.title || replaceUrl;\n\n            const particleThirdpartyParams = JSON.parse(base64url.decode(particleThirdpartyParamsContent as string));\n            const { code, nonce, appState, error } = particleThirdpartyParams;\n            const appStateObj = appState ? JSON.parse(base64url.decode(appState as string)) : {};\n            const { authorization, chain, purpose, verifyToken } = appStateObj;\n\n            if (error) {\n                if (!isConnected()) {\n                    setConnectionStatus('disconnected');\n                }\n                if (!purpose) {\n                    socialConnectCallback?.onError?.(new Error(error));\n                } else {\n                    message.error(error);\n                }\n                return;\n            }\n\n            const authType = nonce.split('@')[0];\n\n            if (purpose === 'bindLoginAccount') {\n                navigate('/login-account/bind-loading', {\n                    state: {\n                        authType,\n                        verifyToken,\n                        code,\n                        nonce,\n                    },\n                    replace: true,\n                });\n            } else {\n                await new Promise((resolve) => {\n                    setTimeout(() => {\n                        resolve(true);\n                    }, 20);\n                });\n                await connect({ socialType: authType, code, nonce, authorization, chain });\n            }\n        } catch (error: any) {\n            console.error('after redirect, login or bind', error);\n            if (!isConnected()) {\n                setConnectionStatus('disconnected');\n            }\n        }\n    };\n\n    useEffect(() => {\n        thirdpartyLogin();\n    }, []);\n\n    return (\n        <div className=\"index-container\">\n            <style>{styles as unknown as string}</style>\n        </div>\n    );\n};\n\nexport default Index;\n", "import React, { useMemo } from 'react';\nimport { useCustomize } from '../context/hooks';\nimport styles from './power-footer.less';\n\nfunction PowerFooter(props: any) {\n    const { themeType } = useCustomize();\n    const imgUrl = useMemo(() => {\n        return themeType === 'dark'\n            ? require('../common/images/footer_img_b.png').default\n            : require('../common/images/footer_img.png').default;\n    }, [themeType]);\n\n    return (\n        <>\n            <style>{styles as unknown as string}</style>\n            <div className=\"footer-box\" {...props}>\n                <img className=\"footer\" src={imgUrl} alt=\"\" />\n            </div>\n        </>\n    );\n}\n\nexport default PowerFooter;\n", "import * as React from \"react\";\nfunction MyComponent(props) {\n  return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 13.131 8.756\" {...props}><path stroke=\"currentColor\" strokeWidth={1.2} d=\"M13.13 4.732h-11M5.131 1.131l-4 4M5.13 8.331l-4-4\" /></svg>;\n}\nexport default MyComponent;", "import * as React from \"react\";\nfunction MyComponent(props) {\n  return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 9.995 5.891\" {...props}><rect width={0.282} height={6.049} x={10.495} y={7.297} stroke=\"currentColor\" rx={0.141} transform=\"rotate(135 10.37 5.89)\" /><rect width={0.282} height={6.049} x={19.583} y={6.391} stroke=\"currentColor\" rx={0.141} transform=\"rotate(-135 9.995 9.655)\" /></svg>;\n}\nexport default MyComponent;", "import * as React from \"react\";\nfunction MyComponent(props) {\n  return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 5.891 9.995\" {...props}><rect width={0.282} height={6.049} x={0.5} y={11.401} stroke=\"currentColor\" rx={0.141} transform=\"rotate(-135 .265 10.26)\" /><rect width={0.282} height={6.049} x={9.588} y={10.495} stroke=\"currentColor\" rx={0.141} transform=\"rotate(-45 -6.426 16.421)\" /></svg>;\n}\nexport default MyComponent;", "import * as React from \"react\";\nfunction MyComponent(props) {\n  return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 18.727 14.697\" {...props}><g data-name=\"\\u7EC4 1332\"><g data-name=\"\\u8DEF\\u5F84 2126\" style={{\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\"\n      }}><path d=\"M6593.83 1700h-12.62l-.12-.159-5.105-6.737-.189-.248.196-.244 5.106-6.36.12-.149h12.612V1700Z\" style={{\n          stroke: \"none\"\n        }} transform=\"translate(-6575.504 -1685.703)\" /><path d=\"m6581.41 1686.503-5.106 6.36 5.106 6.737h12.02v-13.097h-12.02m0-.8h12.02a.8.8 0 0 1 .8.8v13.097a.8.8 0 0 1-.8.8h-12.02a.8.8 0 0 1-.638-.317l-5.106-6.737a.8.8 0 0 1 .014-.984l5.106-6.36a.8.8 0 0 1 .624-.299Z\" style={{\n          fill: \"#000\",\n          stroke: \"none\"\n        }} transform=\"translate(-6575.504 -1685.703)\" /></g><path d=\"m-6367-942-3 3 3-3-3-3 3 3 3-3-3 3 3 3Z\" data-name=\"\\u8054\\u5408 5\" style={{\n        fill: \"none\",\n        stroke: \"var(--background-color)\",\n        strokeWidth: \"1.2px\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\"\n      }} transform=\"translate(6378.3 949.3)\" /></g></svg>;\n}\nexport default MyComponent;", "import * as React from \"react\";\nfunction MyComponent(props) {\n  return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 28 28\" {...props}><defs><style>{\".prefix__cls-3{stroke:none}\"}</style></defs><g id=\"prefix__\\u7EC4_1226\" data-name=\"\\u7EC4 1226\" transform=\"translate(-557 -219)\"><g id=\"prefix__receive\" transform=\"translate(457.921 -104.037)\"><g id=\"prefix__\\u7EC4_142\" data-name=\"\\u7EC4 142\" transform=\"translate(99.079 323.037)\"><circle id=\"prefix__SEND\" cx={14} cy={14} r={14} style={{\n            opacity: 0.08\n          }} /></g></g><g id=\"prefix__\\u7EC4_36\" data-name=\"\\u7EC4 36\" transform=\"rotate(-90 402.74 -163.677)\"><g id=\"prefix__\\u8DEF\\u5F84_1682\" data-name=\"\\u8DEF\\u5F84 1682\"><path d=\"M.683 6.327a.185.185 0 0 1 0-.261L5.92.83a.185.185 0 0 1 .262.262L.945 6.327a.185.185 0 0 1-.262 0Z\" className=\"prefix__cls-3\" /><path d=\"M.57.104c.379 0 .685.306.685.685v7.404a.685.685 0 0 1-1.37 0V.789C-.115.41.192.104.57.104Z\" style={{\n            fill: \"currentColor\",\n            stroke: \"none\"\n          }} transform=\"rotate(45 3.102 7.489)\" /></g><g id=\"prefix__\\u77E9\\u5F62_23\" data-name=\"\\u77E9\\u5F62 23\" style={{\n          stroke: \"currentColor\"\n        }} transform=\"rotate(-45 3.724 -5.681)\"><rect width={1.37} height={8.774} className=\"prefix__cls-3\" rx={0.685} /><rect width={0.37} height={7.774} x={0.5} y={0.5} rx={0.185} style={{\n            fill: \"none\"\n          }} /></g></g></g></svg>;\n}\nexport default MyComponent;", "import * as React from \"react\";\nfunction MyComponent(props) {\n  return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 28 28\" {...props}><circle cx={14} cy={14} r={14} opacity={0.08} /><rect width={1.368} height={12.992} rx={0.684} transform=\"rotate(-45 16.924 -5.61)\" /><rect width={1.368} height={12.992} rx={0.684} transform=\"rotate(45 -2.24 26.54)\" /></svg>;\n}\nexport default MyComponent;", "import * as React from \"react\";\nfunction MyComponent(props) {\n  return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 43 43\" {...props}><circle cx={21.5} cy={21.5} r={21.5} fill=\"#F5F6FB\" /><path fill=\"currentColor\" d=\"M19.764 16.523c.767-1.343 2.705-1.343 3.472 0l4.554 5.97c.762 1.332-.2 2.991-1.736 2.991h-9.108c-1.535 0-2.498-1.659-1.736-2.992l4.554-5.969Z\" /></svg>;\n}\nexport default MyComponent;", "import * as React from \"react\";\nfunction MyComponent(props) {\n  return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 12.068 12.043\" {...props}><defs><mask id=\"prefix__a\"><path fill=\"#FFF\" fillRule=\"evenodd\" d=\"M14.069.653H8.122v8.369H1.708v5.021h10.718v-2.51h1.643V.653Z\" /></mask></defs><rect width={6.788} height={6.788} x={1.2} y={1.2} fill=\"none\" rx={1.8} /><path fill=\"currentColor\" fillRule=\"evenodd\" d=\"M0 3v3.188Q0 7.43.879 8.309q.878.879 2.121.879h3.188q1.242 0 2.121-.879t.879-2.121V3q0-1.243-.879-2.121Q7.43 0 6.188 0H3Q1.757 0 .879.879 0 1.757 0 3Zm1.2 0v3.188q0 .088.009.176.008.088.026.175.017.087.043.171.025.085.059.166.034.082.076.16.041.078.09.152.05.073.106.142.056.068.118.13.063.063.131.12.068.055.142.104.073.05.151.091.078.042.16.076.082.033.166.06.085.025.172.042.087.017.175.026.088.009.176.009h3.188q.088 0 .176-.009t.175-.026q.087-.017.171-.043.085-.026.166-.06.082-.033.16-.075.078-.042.152-.09.073-.05.142-.106.068-.056.13-.119.063-.062.12-.13.055-.069.104-.142.05-.074.091-.152.042-.078.076-.16.033-.081.06-.166.025-.084.042-.171.017-.087.026-.175.009-.088.009-.176V3q0-.088-.009-.176t-.026-.175q-.017-.087-.043-.172-.026-.084-.06-.166-.033-.082-.075-.16-.042-.077-.09-.151-.05-.074-.106-.142-.056-.068-.119-.13-.062-.063-.13-.12-.069-.056-.142-.105-.074-.049-.152-.09-.078-.042-.16-.076-.081-.034-.166-.06-.084-.025-.171-.042-.087-.018-.175-.026-.088-.009-.176-.009H3q-.088 0-.176.009-.088.008-.175.026-.087.017-.172.043-.084.025-.166.059-.082.034-.16.076-.078.041-.151.09-.074.05-.142.106-.068.056-.13.118-.063.063-.12.131-.056.068-.105.142-.049.074-.09.151-.042.078-.076.16-.034.082-.06.166-.025.085-.042.172-.018.087-.026.175Q1.2 2.912 1.2 3Z\" /><g mask=\"url(#prefix__a)\"><path fill=\"currentColor\" fillRule=\"evenodd\" d=\"M2.545 4.984v3.733q0 1.13.8 1.929.798.799 1.928.799h3.733q1.13 0 1.928-.8.799-.798.799-1.928V4.984q0-1.13-.799-1.928-.799-.799-1.928-.799H5.273q-1.13 0-1.929.799-.799.799-.799 1.928Zm6.46-1.527H5.274c-.844 0-1.528.684-1.528 1.527v3.733c0 .844.684 1.528 1.528 1.528h3.733c.843 0 1.527-.684 1.527-1.528V4.984c0-.843-.684-1.527-1.527-1.527Z\" /></g></svg>;\n}\nexport default MyComponent;", "import * as React from \"react\";\nfunction MyComponent(props) {\n  return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 23 17\" {...props}><clipPath id=\"prefix__a\"><path d=\"M-1-3h23v17H-1z\" /></clipPath><g clipPath=\"url(#prefix__a)\" transform=\"translate(1 3)\"><path d=\"M19.345.367c-2.861 3.348-5.719 4.973-8.582 4.973s-5.85-1.636-8.925-5A1.091 1.091 0 0 0 .364.24a.944.944 0 0 0-.111 1.387c3.437 3.758 6.939 5.682 10.51 5.682s6.988-1.935 10.211-5.708a.945.945 0 0 0-.16-1.383 1.09 1.09 0 0 0-1.47.15z\" /><path d=\"m3.378 3.785-1.971 2.59a.921.921 0 0 0 .076 1.184.68.68 0 0 0 1.043-.086l1.971-2.59a.921.921 0 0 0-.076-1.184.68.68 0 0 0-1.043.086zm3.981 3.039-.789 3.581a.853.853 0 0 0 .538 1.018.738.738 0 0 0 .9-.611l.789-3.581a.853.853 0 0 0-.538-1.018.738.738 0 0 0-.895.612zm5.724.146 1.109 3.581a.72.72 0 0 0 .942.514.873.873 0 0 0 .452-1.07l-1.108-3.581a.72.72 0 0 0-.942-.514.873.873 0 0 0-.452 1.07zm4.023-3.051 2.281 2.59a.679.679 0 0 0 1.045 0 .922.922 0 0 0 0-1.187l-2.281-2.59a.679.679 0 0 0-1.045 0 .922.922 0 0 0 0 1.187z\" /></g></svg>;\n}\nexport default MyComponent;", "import * as React from \"react\";\nfunction MyComponent(props) {\n  return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 23 17\" {...props}><path d=\"M11.697 13.232a3.724 3.724 0 1 1 3.727-3.725 3.724 3.724 0 0 1-3.727 3.725zm0-2.085a1.638 1.638 0 1 0-1.638-1.638 1.638 1.638 0 0 0 1.638 1.638z\" /><path d=\"M11.773 14.296c2.608 0 5.222-1.534 7.841-4.7-2.286-3.164-4.886-4.7-7.841-4.7s-5.654 1.536-8.118 4.7c2.796 3.164 5.506 4.7 8.118 4.7zm7.814-7.967a18.681 18.681 0 0 1 2.2 2.739l.417.626-.463.593c-3.139 4.026-6.461 6.094-9.964 6.094S4.87 14.325 1.522 10.314l-.518-.621.473-.656a19.167 19.167 0 0 1 2.957-3.3L2.667 3.855a.745.745 0 1 1 1.086-1.019l1.86 1.981A11.188 11.188 0 0 1 8.98 3.199l-.9-2.13A.745.745 0 1 1 9.452.488l1.021 2.409a10.462 10.462 0 0 1 1.307-.081 10.154 10.154 0 0 1 2.23.243L15.203.434a.745.745 0 1 1 1.356.617l-1.112 2.447a11.172 11.172 0 0 1 3.05 1.82l2.177-2.177a.745.745 0 1 1 1.053 1.053l-2.133 2.133z\" /></svg>;\n}\nexport default MyComponent;", "import * as React from \"react\";\nfunction MyComponent(props) {\n  return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 29 29\" {...props}><g data-name=\"\\u7EC4 1138\"><g data-name=\"\\u77E9\\u5F62 400\" style={{\n        fill: \"#fff\",\n        stroke: \"#f5f5f5\"\n      }}><rect width={29} height={29} stroke=\"none\" rx={5} style={{\n          stroke: \"none\"\n        }} /><rect width={28} height={28} x={0.5} y={0.5} rx={4.5} style={{\n          fill: \"none\"\n        }} /></g><path d=\"M289.681 61.936V65.3h-2a1.873 1.873 0 0 0-1.477.458 2.106 2.106 0 0 0-.382 1.375v2.406h3.73l-.5 3.769h-3.234v9.663h-3.9V73.3h-3.246v-3.764h3.246v-2.775a4.926 4.926 0 0 1 1.324-3.673 4.8 4.8 0 0 1 3.527-1.305 21.126 21.126 0 0 1 2.9.152Z\" style={{\n        fill: \"#1877f2\"\n      }} transform=\"translate(-269.681 -57.875)\" /></g></svg>;\n}\nexport default MyComponent;", "import * as React from \"react\";\nfunction MyComponent(props) {\n  return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 29 29\" {...props}><g data-name=\"\\u7EC4 1136\"><g data-name=\"\\u77E9\\u5F62 400\" style={{\n        fill: \"#fff\",\n        stroke: \"#f5f5f5\"\n      }}><rect width={29} height={29} stroke=\"none\" rx={5} style={{\n          stroke: \"none\"\n        }} /><rect width={28} height={28} x={0.5} y={0.5} rx={4.5} style={{\n          fill: \"none\"\n        }} /></g><path d=\"M9.12 294.908a6.158 6.158 0 0 1 .325-1.965L5.8 290.219a10.463 10.463 0 0 0 0 9.374l3.641-2.729a6.143 6.143 0 0 1-.321-1.957\" data-name=\"\\u8DEF\\u5F84 1670\" style={{\n        fill: \"#fbbc05\"\n      }} transform=\"translate(-.774 -280.411)\" /><path d=\"M66.889 15.722a6.344 6.344 0 0 1 3.985 1.395l3.149-3.079a10.948 10.948 0 0 0-16.849 3.249l3.644 2.724a6.366 6.366 0 0 1 6.071-4.289\" data-name=\"\\u8DEF\\u5F84 1671\" style={{\n        fill: \"#ea4335\"\n      }} transform=\"translate(-52.145 -7.48)\" /><path d=\"M66.889 609.217a6.369 6.369 0 0 1-6.073-4.289l-3.643 2.724a10.816 10.816 0 0 0 9.715 5.9 10.441 10.441 0 0 0 7.052-2.638l-3.459-2.618a6.8 6.8 0 0 1-3.595.926\" data-name=\"\\u8DEF\\u5F84 1672\" style={{\n        fill: \"#34a853\"\n      }} transform=\"translate(-52.145 -588.467)\" /><path d=\"M526.984 422.916a8.62 8.62 0 0 0-.246-1.924h-10.087v4.089h5.806a4.763 4.763 0 0 1-2.21 3.164l3.458 2.618a10.418 10.418 0 0 0 3.28-7.946\" data-name=\"\\u8DEF\\u5F84 1673\" style={{\n        fill: \"#4285f4\"\n      }} transform=\"translate(-501.908 -408.42)\" /></g></svg>;\n}\nexport default MyComponent;", "import * as React from \"react\";\nfunction MyComponent(props) {\n  return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 249.876 155.965\" {...props}><defs><clipPath id=\"prefix__clip-path\"><path id=\"prefix__\\u77E9\\u5F62_451\" d=\"M0 0h73.283v45.454H0z\" className=\"prefix__cls-1\" data-name=\"\\u77E9\\u5F62 451\" /></clipPath><clipPath id=\"prefix__clip-path-2\"><path id=\"prefix__\\u77E9\\u5F62_453\" d=\"M0 0h76.066v48.237H0z\" className=\"prefix__cls-1\" data-name=\"\\u77E9\\u5F62 453\" /></clipPath><style>{\".prefix__cls-1,.prefix__cls-14{fill:var(--text-color)}.prefix__cls-1{stroke:#707070}.prefix__cls-2{fill:var(--accent-color)}.prefix__cls-12,.prefix__cls-3,.prefix__cls-4,.prefix__cls-9{fill:none}.prefix__cls-12,.prefix__cls-3{stroke:var(--text-color)}.prefix__cls-3{stroke-width:2px}.prefix__cls-12{stroke-width:1.5px}.prefix__cls-15{stroke:none}\"}</style></defs><g id=\"prefix__\\u7EC4_1229\" data-name=\"\\u7EC4 1229\" transform=\"translate(-56.413 -383.174)\"><g id=\"prefix__\\u7EC4_1227\" data-name=\"\\u7EC4 1227\" transform=\"translate(116.386 383.174)\"><path id=\"prefix__\\u8DEF\\u5F84_1680\" d=\"m0 6.493 48.944.294 4.677-5.566L5.613 0Z\" className=\"prefix__cls-2\" data-name=\"\\u8DEF\\u5F84 1680\" transform=\"rotate(-90 49.024 48.683)\" /><path id=\"prefix__\\u8DEF\\u5F84_1679\" d=\"M57.558 5.493H-1.148L-6-1h57.858Z\" className=\"prefix__cls-2\" data-name=\"\\u8DEF\\u5F84 1679\" transform=\"translate(8.49 46.014)\" /><g id=\"prefix__\\u77E9\\u5F62_440\" className=\"prefix__cls-3\" data-name=\"\\u77E9\\u5F62 440\"><path d=\"M8.055 52.435H65.12v42.026H8.055z\" className=\"prefix__cls-15\" /><path d=\"M7.055 51.435H66.12v44.026H7.055z\" className=\"prefix__cls-4\" /></g><path id=\"prefix__\\u76F4\\u7EBF_105\" d=\"M6.308 6.679 0 0\" className=\"prefix__cls-3\" data-name=\"\\u76F4\\u7EBF 105\" transform=\"translate(60.018 44.55)\" /><path id=\"prefix__\\u76F4\\u7EBF_110\" d=\"M6.308 6.679 0 0\" className=\"prefix__cls-3\" data-name=\"\\u76F4\\u7EBF 110\" transform=\"translate(.82 44.643)\" /><path id=\"prefix__\\u76F4\\u7EBF_108\" d=\"M5.937 6.493 0 0\" className=\"prefix__cls-3\" data-name=\"\\u76F4\\u7EBF 108\" transform=\"translate(.913 89.516)\" /><path id=\"prefix__\\u76F4\\u7EBF_106\" d=\"M60.59 0H0\" className=\"prefix__cls-3\" data-name=\"\\u76F4\\u7EBF 106\" transform=\"translate(.171 44.921)\" /><path id=\"prefix__\\u76F4\\u7EBF_109\" d=\"m0 0 .293 49.791\" className=\"prefix__cls-3\" data-name=\"\\u76F4\\u7EBF 109\" transform=\"translate(1.098 45.292)\" /><path id=\"prefix__\\u8054\\u5408_1\" d=\"M0 30.612 1.6 11.4a6.958 6.958 0 1 1 10.712 0l1.6 19.213Z\" className=\"prefix__cls-4\" data-name=\"\\u8054\\u5408 1\" transform=\"translate(30.612 62.151)\" /><g id=\"prefix__\\u8054\\u5408_2\" data-name=\"\\u8054\\u5408 2\" style={{\n          fill: \"var(--text-color)\"\n        }}><path d=\"M40.021 88.303h-7.687l.922-16.013.02-.339-.242-.238a3.977 3.977 0 0 1-1.209-2.844c0-2.267 1.953-4.112 4.353-4.112 2.4 0 4.352 1.845 4.352 4.112 0 1.065-.43 2.075-1.208 2.844l-.242.238.02.339.921 16.013Z\" className=\"prefix__cls-15\" /><path d=\"M8.152 23.546 7.237 7.649l.483-.477a3.232 3.232 0 0 0 .985-2.31C8.705 3.008 7.09 1.5 5.103 1.5 3.116 1.5 1.5 3.008 1.5 4.862c0 .863.35 1.683.986 2.31l.482.477-.915 15.897h6.099m1.589 1.5H.464L1.432 8.24A4.73 4.73 0 0 1 0 4.862C0 2.177 2.284 0 5.103 0c2.818 0 5.102 2.177 5.102 4.862A4.73 4.73 0 0 1 8.773 8.24l.968 16.806Z\" style={{\n            fill: \"var(--text-color)\",\n            stroke: \"none\"\n          }} transform=\"translate(31.075 64.007)\" /></g><g id=\"prefix__\\u8499\\u7248\\u7EC4_9\" data-name=\"\\u8499\\u7248\\u7EC4 9\" style={{\n          clipPath: \"url(#prefix__clip-path)\"\n        }} transform=\"translate(.928 2.783)\"><g id=\"prefix__\\u77E9\\u5F62_449\" data-name=\"\\u77E9\\u5F62 449\" style={{\n            strokeWidth: 7,\n            stroke: \"var(--text-color)\",\n            fill: \"none\"\n          }} transform=\"translate(8.349 4.638)\"><rect width={48.237} height={76.066} className=\"prefix__cls-15\" rx={24.119} /><rect width={41.237} height={69.066} x={3.5} y={3.5} className=\"prefix__cls-4\" rx={20.619} /></g></g><g id=\"prefix__\\u8499\\u7248\\u7EC4_10\" data-name=\"\\u8499\\u7248\\u7EC4 10\" style={{\n          clipPath: \"url(#prefix__clip-path-2)\"\n        }}><g id=\"prefix__\\u8DEF\\u5F84_1684\" className=\"prefix__cls-9\" data-name=\"\\u8DEF\\u5F84 1684\"><path d=\"M33.46 12.987c10.282 0 18.618 8.929 18.618 19.944v30.612c0 11.015-8.336 19.944-18.618 19.944s-18.618-8.929-18.618-19.944V32.931c0-11.015 8.336-19.944 18.618-19.944Z\" className=\"prefix__cls-15\" /><path d=\"M18.618 2C14.205 2 10.05 3.849 6.915 7.206 3.745 10.602 2 15.126 2 19.944v30.612c0 4.82 1.746 9.343 4.915 12.738 3.134 3.358 7.29 5.207 11.703 5.207 4.413 0 8.569-1.85 11.703-5.207 3.17-3.395 4.915-7.919 4.915-12.738V19.944c0-4.819-1.745-9.342-4.915-12.738C27.187 3.85 23.031 2 18.618 2m0-2c10.283 0 18.618 8.93 18.618 19.944v30.612c0 11.015-8.335 19.945-18.618 19.945C8.336 70.5 0 61.57 0 50.556V19.944C0 8.93 8.336 0 18.618 0Z\" style={{\n              fill: \"var(--accent-color)\",\n              stroke: \"none\"\n            }} transform=\"translate(14.842 12.987)\" /></g></g></g><g id=\"prefix__\\u7EC4_1223\" data-name=\"\\u7EC4 1223\" transform=\"translate(71.435 472.204)\"><path id=\"prefix__\\u8DEF\\u5F84_1680-2\" d=\"m0 6.493 60.145.294 5.747-5.566L6.9 0Z\" data-name=\"\\u8DEF\\u5F84 1680\" style={{\n          fill: \"var(--accent-color)\"\n        }} transform=\"rotate(-90 33.03 32.861)\" /><path id=\"prefix__\\u8DEF\\u5F84_1679-2\" d=\"m204.574 5.493-205.6-.175L-6-1h205.008Z\" data-name=\"\\u8DEF\\u5F84 1679\" style={{\n          fill: \"var(--accent-color)\"\n        }} transform=\"translate(8.319 1.928)\" /><g id=\"prefix__\\u77E9\\u5F62_440-2\" className=\"prefix__cls-3\" data-name=\"\\u77E9\\u5F62 440\"><path d=\"M7.792 8.349h204.081v56.586H7.792z\" className=\"prefix__cls-15\" /><path d=\"M6.792 7.349h206.081v58.586H6.792z\" className=\"prefix__cls-4\" /></g><path id=\"prefix__\\u76F4\\u7EBF_105-2\" d=\"M6.308 6.679 0 0\" className=\"prefix__cls-3\" data-name=\"\\u76F4\\u7EBF 105\" transform=\"translate(206.864 .464)\" /><path id=\"prefix__\\u76F4\\u7EBF_110-2\" d=\"M6.308 6.679 0 0\" className=\"prefix__cls-3\" data-name=\"\\u76F4\\u7EBF 110\" transform=\"translate(.649 .556)\" /><path id=\"prefix__\\u76F4\\u7EBF_108-2\" d=\"M6.2 6.8 0 0\" className=\"prefix__cls-3\" data-name=\"\\u76F4\\u7EBF 108\" transform=\"translate(.644 59.178)\" /><path id=\"prefix__\\u76F4\\u7EBF_106-2\" d=\"M207.606 0H0\" className=\"prefix__cls-3\" data-name=\"\\u76F4\\u7EBF 106\" transform=\"translate(0 .835)\" /><path id=\"prefix__\\u76F4\\u7EBF_109-2\" d=\"M0 0v58.627\" className=\"prefix__cls-3\" data-name=\"\\u76F4\\u7EBF 109\" transform=\"translate(.928 1.206)\" /></g><g id=\"prefix__\\u76F4\\u7EBF_115\" className=\"prefix__cls-9\" data-name=\"\\u76F4\\u7EBF 115\"><path d=\"M237.39 460.47h12.059\" className=\"prefix__cls-15\" /><path d=\"M12.07 0H0h12.07Z\" style={{\n          fill: \"#000\",\n          stroke: \"none\"\n        }} transform=\"translate(237.384 460.47)\" /></g><g id=\"prefix__\\u7EC4_1228\" data-name=\"\\u7EC4 1228\" transform=\"translate(56.5 446.177)\"><g id=\"prefix__\\u77E9\\u5F62_452\" className=\"prefix__cls-12\" data-name=\"\\u77E9\\u5F62 452\"><path d=\"m135.953 3.987 9.398-3.99 3.99 9.398-9.398 3.99z\" className=\"prefix__cls-15\" /><path strokeWidth=\"1.5008399999999997px\" d=\"M136.937 4.385 144.953.98l3.404 8.017-8.017 3.403z\" className=\"prefix__cls-4\" /></g><path id=\"prefix__\\u76F4\\u7EBF_111\" d=\"M1.329 9.879 0 0\" className=\"prefix__cls-12\" data-name=\"\\u76F4\\u7EBF 111\" transform=\"translate(12.059 9.656)\" /><path id=\"prefix__\\u76F4\\u7EBF_113\" d=\"M8.389 0 0 .974\" className=\"prefix__cls-12\" data-name=\"\\u76F4\\u7EBF 113\" transform=\"translate(0 26.307)\" /><path id=\"prefix__\\u76F4\\u7EBF_112\" d=\"M7.46 5.386 0 0\" className=\"prefix__cls-12\" data-name=\"\\u76F4\\u7EBF 112\" transform=\"translate(1.855 16.149)\" /><path id=\"prefix__\\u76F4\\u7EBF_114\" d=\"M0 0h7.911\" className=\"prefix__cls-12\" data-name=\"\\u76F4\\u7EBF 114\" transform=\"rotate(-72 183.474 -123.859)\" /><path id=\"prefix__\\u76F4\\u7EBF_116\" d=\"M0 0h7.911\" className=\"prefix__cls-12\" data-name=\"\\u76F4\\u7EBF 116\" transform=\"rotate(18 -143.927 806.034)\" /><path id=\"prefix__\\u76F4\\u7EBF_117\" d=\"M0 7.096 2.458 0\" className=\"prefix__cls-12\" data-name=\"\\u76F4\\u7EBF 117\" transform=\"translate(226.669 12.439)\" /><path id=\"prefix__\\u76F4\\u7EBF_118\" d=\"M0 4.459 8.589 0\" className=\"prefix__cls-12\" data-name=\"\\u76F4\\u7EBF 118\" transform=\"translate(229.814 18.004)\" /></g><text id=\"prefix__Master_Password\" data-name=\"Master Password\" style={{\n        fontSize: 12,\n        fontFamily: \"SFProText-Semibold,SF Pro Text\",\n        fontWeight: 500,\n        fill: \"var(--text-color)\"\n      }} transform=\"translate(181.5 504.193)\"><tspan x={-50.569} y={0}>{\"Master Password\"}</tspan></text><g id=\"prefix__\\u7EC4_1406\" data-name=\"\\u7EC4 1406\" transform=\"translate(94.069 517.009)\"><circle id=\"prefix__\\u692D\\u5706_283\" cx={2.5} cy={2.5} r={2.5} className=\"prefix__cls-14\" data-name=\"\\u692D\\u5706 283\" transform=\"translate(102.431)\" /><circle id=\"prefix__\\u692D\\u5706_282\" cx={2.5} cy={2.5} r={2.5} className=\"prefix__cls-14\" data-name=\"\\u692D\\u5706 282\" transform=\"translate(50.431)\" /><circle id=\"prefix__\\u692D\\u5706_298\" cx={2.5} cy={2.5} r={2.5} className=\"prefix__cls-14\" data-name=\"\\u692D\\u5706 298\" transform=\"translate(119.431)\" /><circle id=\"prefix__\\u692D\\u5706_284\" cx={2.5} cy={2.5} r={2.5} className=\"prefix__cls-14\" data-name=\"\\u692D\\u5706 284\" transform=\"translate(84.431)\" /><circle id=\"prefix__\\u692D\\u5706_300\" cx={2.5} cy={2.5} r={2.5} className=\"prefix__cls-14\" data-name=\"\\u692D\\u5706 300\" transform=\"translate(153.431)\" /><circle id=\"prefix__\\u692D\\u5706_280\" cx={2.5} cy={2.5} r={2.5} className=\"prefix__cls-14\" data-name=\"\\u692D\\u5706 280\" transform=\"translate(33.431)\" /><circle id=\"prefix__\\u692D\\u5706_281\" cx={2.5} cy={2.5} r={2.5} className=\"prefix__cls-14\" data-name=\"\\u692D\\u5706 281\" transform=\"translate(67.431)\" /><circle id=\"prefix__\\u692D\\u5706_299\" cx={2.5} cy={2.5} r={2.5} className=\"prefix__cls-14\" data-name=\"\\u692D\\u5706 299\" transform=\"translate(136.431)\" /><circle id=\"prefix__\\u692D\\u5706_273\" cx={2.5} cy={2.5} r={2.5} className=\"prefix__cls-14\" data-name=\"\\u692D\\u5706 273\" transform=\"translate(16.431)\" /></g></g></svg>;\n}\nexport default MyComponent;", "import * as React from \"react\";\nfunction MyComponent(props) {\n  return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 28 28\" {...props}><defs><style>{\".prefix__cls-2{fill:none;stroke:var(--text-color,#000);stroke-linecap:round;stroke-width:1.2px}\"}</style></defs><g id=\"prefix__\\u7EC4_1432\" data-name=\"\\u7EC4 1432\" transform=\"translate(-18 -102)\"><g id=\"prefix__receive\" transform=\"translate(-81.079 -221.037)\"><g id=\"prefix__\\u7EC4_142\" data-name=\"\\u7EC4 142\" transform=\"translate(99.079 323.037)\"><circle id=\"prefix__SEND\" cx={14} cy={14} r={14} style={{\n            fill: \"var(--text-color,#000)\",\n            opacity: 0.08\n          }} /></g></g><g id=\"prefix__\\u7EC4_1431\" data-name=\"\\u7EC4 1431\"><path id=\"prefix__\\u76F4\\u7EBF_11\" d=\"M0 0h12.187\" className=\"prefix__cls-2\" data-name=\"\\u76F4\\u7EBF 11\" transform=\"translate(25.906 111.5)\" /><path id=\"prefix__\\u76F4\\u7EBF_12\" d=\"M0 0h12.187\" className=\"prefix__cls-2\" data-name=\"\\u76F4\\u7EBF 12\" transform=\"translate(25.906 116)\" /><path id=\"prefix__\\u76F4\\u7EBF_13\" d=\"M0 0h12.187\" className=\"prefix__cls-2\" data-name=\"\\u76F4\\u7EBF 13\" transform=\"translate(25.906 120.5)\" /></g></g></svg>;\n}\nexport default MyComponent;", "import * as React from \"react\";\nfunction MyComponent(props) {\n  return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 35 35\" {...props}><defs><linearGradient id=\"prefix__a\" x1={1.171} x2={-0.531} y1={0.248} y2={0.242} gradientUnits=\"objectBoundingBox\"><stop offset={0} stopColor=\"#864deb\" /><stop offset={0.502} stopColor=\"#e64be0\" /><stop offset={1} stopColor=\"#fd4bdd\" /></linearGradient></defs><g data-name=\"\\u7EC4 1106\"><g data-name=\"\\u692D\\u5706 251\" style={{\n        fill: \"#fff\",\n        stroke: \"#f5f5f5\"\n      }}><rect width={29} height={29} stroke=\"none\" rx={5} style={{\n          stroke: \"none\"\n        }} /><rect width={28} height={28} x={0.5} y={0.5} rx={4.5} style={{\n          fill: \"none\"\n        }} /></g><path d=\"M1243.8 4411.523q-.629-.634-1.263-1.265c-.051-.051-.1-.1-.154-.151a.229.229 0 0 1-.079-.184v-5.269a.145.145 0 0 0-.081-.151 5.4 5.4 0 0 1-.552-.345 2.572 2.572 0 0 1-.577-.55c-.07-.1-.152-.181-.219-.277a3.4 3.4 0 0 1-.184-.3 4.62 4.62 0 0 1-.146-.29 2.846 2.846 0 0 1-.1-.281c-.031-.094-.06-.2-.089-.3a2.071 2.071 0 0 1-.082-.492c-.005-.184-.023-.367-.018-.55a3.406 3.406 0 0 1 .054-.423c.016-.1.034-.2.056-.3a1.333 1.333 0 0 1 .049-.168 3.777 3.777 0 0 1 .161-.417c.094-.182.2-.355.311-.531a3.047 3.047 0 0 1 .624-.7 3.739 3.739 0 0 1 .431-.314 3.479 3.479 0 0 1 .435-.238 3.246 3.246 0 0 1 .39-.136 3.524 3.524 0 0 1 .4-.11 3.676 3.676 0 0 1 .441-.05 4.225 4.225 0 0 1 .929.052 3.072 3.072 0 0 1 .372.1 3.85 3.85 0 0 1 .39.134 2.5 2.5 0 0 1 .354.188c.173.107.339.223.5.345a2.591 2.591 0 0 1 .348.339c.143.168.278.346.4.528a2.272 2.272 0 0 1 .174.331c.054.115.109.23.152.349a3.441 3.441 0 0 1 .1.331c.026.1.05.2.068.3a1.636 1.636 0 0 1 .021.22c.009.169.025.342.019.512s-.032.333-.061.5a2.461 2.461 0 0 1-.049.254 2.074 2.074 0 0 1-.069.215 1.464 1.464 0 0 1-.051.142c-.052.122-.1.248-.162.364-.085.157-.183.308-.279.458a2.854 2.854 0 0 1-.514.583 3.288 3.288 0 0 1-.658.465c-.132.068-.265.134-.4.2-.042.02-.048.034-.01.071.306.3.608.605.911.909.089.089.175.178.266.265a.053.053 0 0 1 0 .09l-.568.563q-.372.372-.742.746c-.045.044-.09.09-.136.133s-.036.07 0 .106l.423.42 1.015 1.016c.042.039.039.063 0 .1q-.558.554-1.114 1.111l-1.349 1.351a.07.07 0 0 1-.047.027.071.071 0 0 1-.041-.026Zm.114-12.257h-.209a.886.886 0 0 0-.391.141.985.985 0 0 0-.322.311 1.02 1.02 0 0 0 .515 1.531 1.881 1.881 0 0 0 .342.065v-.02a.806.806 0 0 0 .517-.128.979.979 0 0 0 .33-.313 1.07 1.07 0 0 0 .176-.522.819.819 0 0 0-.07-.4 1.814 1.814 0 0 0-.163-.288.85.85 0 0 0-.321-.264.891.891 0 0 0-.385-.111Zm-9.818 11.784h-6.6c-.049 0-.065-.009-.065-.062v-2.256a5.634 5.634 0 0 1 .049-.612 4.194 4.194 0 0 1 .08-.439c.029-.132.072-.263.11-.392.042-.148.086-.3.136-.443.03-.084.072-.169.107-.253.045-.1.085-.207.136-.307a6.16 6.16 0 0 1 .219-.4c.114-.185.229-.369.355-.546.106-.146.226-.283.345-.418a4.577 4.577 0 0 1 .608-.591c.106-.084.2-.176.313-.256.149-.108.306-.211.463-.311.105-.067.213-.13.323-.19.094-.051.194-.093.29-.139a4.63 4.63 0 0 1 .215-.1c.09-.038.182-.072.273-.106s.2-.073.3-.108a1.2 1.2 0 0 1 .144-.042c.141-.032.282-.062.423-.092l.322-.064a.5.5 0 0 1 .055-.012c.207-.016.413-.044.619-.045h3.609a2.532 2.532 0 0 1 .3.011c.184.021.366.047.55.08a3.369 3.369 0 0 1 .374.082c.157.042.311.1.465.147.127.042.255.09.381.135.042.016.085.036.127.053.065.029.063.1.093.15.09.153.164.316.258.465.114.18.236.356.367.526a4.479 4.479 0 0 0 .578.618c.092.081.189.154.281.235a.148.148 0 0 1 .042.077.386.386 0 0 1 0 .089v5.457c0 .055-.018.065-.069.065q-3.281-.006-6.578-.006Zm-1.931-10.815a4.617 4.617 0 1 1 5.95-7.062 4.412 4.412 0 0 1 1.572 2.811 4.509 4.509 0 0 1-.871 3.487 4.445 4.445 0 0 1-2.861 1.764 5.2 5.2 0 0 1-.891.08 4.409 4.409 0 0 1-2.901-1.08Z\" data-name=\"\\u8054\\u5408 6\" style={{\n        fill: \"url(#prefix__a)\"\n      }} transform=\"translate(-1222.5 -4387.291)\" /></g></svg>;\n}\nexport default MyComponent;", "import * as React from \"react\";\nfunction MyComponent(props) {\n  return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 28 28\" {...props}><circle cx={14} cy={14} r={14} opacity={0.08} /><path d=\"M14 21.538a1.718 1.718 0 0 1-.784-.19l-1.932-.986a5.747 5.747 0 0 1-3.067-4.709l-.374-5.261a1.812 1.812 0 0 1 1.044-1.77l4.4-2a1.711 1.711 0 0 1 1.427 0l4.4 2a1.812 1.812 0 0 1 1.04 1.77l-.37 5.261a5.747 5.747 0 0 1-3.068 4.709l-1.932.99a1.718 1.718 0 0 1-.784.186zm0-14.1a.792.792 0 0 0-.325.07l-4.4 2.005a.82.82 0 0 0-.473.8l.364 5.261a4.777 4.777 0 0 0 2.544 3.9l1.931.989a.782.782 0 0 0 .715 0l1.931-.989a4.777 4.777 0 0 0 2.544-3.9l.363-5.261a.818.818 0 0 0-.472-.8l-4.397-2.001a.8.8 0 0 0-.325-.07zm-.515 8.243a.467.467 0 0 1-.342-.143l-1.522-1.634a.5.5 0 0 1 0-.693.471.471 0 0 1 .676 0l1.188 1.287 2.218-2.036a.471.471 0 0 1 .676 0 .5.5 0 0 1 0 .693l-2.556 2.383a.465.465 0 0 1-.338.143z\" /></svg>;\n}\nexport default MyComponent;", "import * as React from \"react\";\nfunction MyComponent(props) {\n  return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 28 28\" {...props}><g data-name=\"\\u7EC4 403\" transform=\"translate(-18 -225)\"><circle cx={14} cy={14} r={14} data-name=\"\\u692D\\u5706 48\" style={{\n        opacity: 0.08\n      }} transform=\"translate(18 225)\" /><path d=\"M6.157 15.076a1.718 1.718 0 0 1-.784-.19L3.441 13.9A5.747 5.747 0 0 1 .374 9.191L0 3.93a1.812 1.812 0 0 1 1.044-1.77l4.4-2a1.711 1.711 0 0 1 1.427 0l4.4 2a1.812 1.812 0 0 1 1.04 1.77l-.37 5.261A5.747 5.747 0 0 1 8.873 13.9l-1.932.99a1.718 1.718 0 0 1-.784.186Zm0-14.1a.792.792 0 0 0-.325.07l-4.4 2.005a.82.82 0 0 0-.473.8l.364 5.261a4.777 4.777 0 0 0 2.544 3.9l1.931.989a.782.782 0 0 0 .715 0l1.931-.989a4.777 4.777 0 0 0 2.544-3.9l.363-5.261a.818.818 0 0 0-.472-.8L6.482 1.05a.8.8 0 0 0-.325-.07Zm-.515 8.243a.467.467 0 0 1-.342-.143L3.778 7.442a.5.5 0 0 1 0-.693.471.471 0 0 1 .676 0l1.188 1.287L7.86 6a.471.471 0 0 1 .676 0 .5.5 0 0 1 0 .693L5.98 9.076a.465.465 0 0 1-.338.143Z\" data-name=\"Fill 744\" style={{\n        stroke: \"currentColor\",\n        strokeWidth: \".25px\"\n      }} transform=\"translate(25.843 231.462)\" /></g></svg>;\n}\nexport default MyComponent;", "import * as React from \"react\";\nfunction MyComponent(props) {\n  return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 28 28\" {...props}><g data-name=\"\\u7EC4 1434\" transform=\"translate(-18 -225)\"><circle cx={14} cy={14} r={14} data-name=\"\\u692D\\u5706 48\" style={{\n        opacity: 0.08\n      }} transform=\"translate(18 225)\" /><path d=\"M9.437 14.826H1.573A1.578 1.578 0 0 1 0 13.247V2.912a1.578 1.578 0 0 1 1.573-1.579h5a.423.423 0 0 1 .3.126l4.005 4.019a.433.433 0 0 1 .125.3v7.465a1.578 1.578 0 0 1-1.566 1.583ZM1.729 2.194a.755.755 0 0 0-.786.717v10.336a.755.755 0 0 0 .786.717h7.542a.755.755 0 0 0 .786-.717V6.213H7.385a1.66 1.66 0 0 1-1.728-1.579v-2.44ZM6.6 2.8v1.834a.755.755 0 0 0 .786.718h2.005Zm.786 8.868H3.614a.473.473 0 0 1 0-.946h3.771a.473.473 0 0 1 0 .946ZM5.5 9.148H3.614a.473.473 0 0 1 0-.946H5.5a.473.473 0 0 1 0 .946Z\" data-name=\"Fill 700\" style={{\n        stroke: \"currentColor\",\n        strokeWidth: \".2px\"\n      }} transform=\"translate(26.495 230.921)\" /></g></svg>;\n}\nexport default MyComponent;", "import * as React from \"react\";\nfunction MyComponent(props) {\n  return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 29 29\" {...props}><g data-name=\"\\u7EC4 1207\"><g data-name=\"\\u77E9\\u5F62 400\" style={{\n        fill: \"#fff\",\n        stroke: \"#f5f5f5\"\n      }}><rect width={29} height={29} stroke=\"none\" rx={5} style={{\n          stroke: \"none\"\n        }} /><rect width={28} height={28} x={0.5} y={0.5} rx={4.5} style={{\n          fill: \"none\"\n        }} /></g><path d=\"M114.145 175.761a7.5 7.5 0 0 1-2.153.579 3.73 3.73 0 0 0 1.644-2.061 7.382 7.382 0 0 1-2.372.9 3.742 3.742 0 0 0-6.471 2.559 4.294 4.294 0 0 0 .092.857 10.625 10.625 0 0 1-7.709-3.914 3.75 3.75 0 0 0 1.158 5 3.771 3.771 0 0 1-1.691-.476v.046a3.74 3.74 0 0 0 3 3.67 3.961 3.961 0 0 1-.984.127 4.975 4.975 0 0 1-.709-.048 3.746 3.746 0 0 0 3.5 2.594 7.493 7.493 0 0 1-4.642 1.6 7.644 7.644 0 0 1-.9-.046 10.645 10.645 0 0 0 16.381-8.964c0-.162 0-.324-.011-.487a8.052 8.052 0 0 0 1.867-1.936Z\" style={{\n        fill: \"#1da1f2\"\n      }} transform=\"translate(-90.388 -166.911)\" /></g></svg>;\n}\nexport default MyComponent;", "import * as React from \"react\";\nfunction MyComponent(props) {\n  return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 28 28\" {...props}><circle cx={14} cy={14} r={14} opacity={0.08} /><path d=\"m14.382 8.146.944 1.6h2.321c1.123 0 1.639.611 1.639 1.735v.876a1.356 1.356 0 0 1 1.356 1.356v2.972c0 .749-.331 1.138-1.08 1.138v.678a2.034 2.034 0 0 1-2.034 2.034H9.392a2.034 2.034 0 0 1-2.034-2.038v-6.78a2.034 2.034 0 0 1 1.547-1.975l3.625-2.093a1.356 1.356 0 0 1 1.852.497zm3.068 2.653H9.309a.829.829 0 0 0-.819.835v7.077a.678.678 0 0 0 .678.678h8.6a.678.678 0 0 0 .678-.678v-.892H14.82a2.712 2.712 0 1 1 0-5.424h3.39v-.761c.001-.471-.152-.807-.76-.835zm2.045 2.737h-4.679a1.573 1.573 0 1 0 0 3.145h4.679zm-4.679.893a.678.678 0 1 1-.678.678.678.678 0 0 1 .678-.678zm-1.513-5.838-2.165 1.155h2.812z\" /></svg>;\n}\nexport default MyComponent;", "import * as React from \"react\";\nfunction MyComponent(props) {\n  return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 28 28\" {...props}><g data-name=\"\\u7EC4 1152\"><circle cx={14} cy={14} r={14} data-name=\"\\u7EC4 142\" style={{\n        opacity: 0.08\n      }} /><path d=\"m14.382 8.146.944 1.6h2.321c1.123 0 1.639.611 1.639 1.735v.876a1.356 1.356 0 0 1 1.356 1.356v2.972c0 .749-.331 1.138-1.08 1.138v.678a2.034 2.034 0 0 1-2.034 2.034H9.392a2.034 2.034 0 0 1-2.034-2.038v-6.78a2.034 2.034 0 0 1 1.547-1.975l3.625-2.093a1.356 1.356 0 0 1 1.852.497Zm3.068 2.653H9.309a.829.829 0 0 0-.819.835v7.077a.678.678 0 0 0 .678.678h8.6a.678.678 0 0 0 .678-.678v-.892H14.82a2.712 2.712 0 1 1 0-5.424h3.39v-.761c.001-.471-.152-.807-.76-.835Zm2.045 2.737h-4.679a1.573 1.573 0 1 0 0 3.145h4.679Zm-4.679.893a.678.678 0 1 1-.678.678.678.678 0 0 1 .678-.678Zm-1.513-5.838-2.165 1.155h2.812Z\" /></g></svg>;\n}\nexport default MyComponent;", "/* eslint-disable */\n            import arrow1icon from '../../common/icon/arrow1_icon.svg';import arrowicon from '../../common/icon/arrow_icon.svg';import arrowrighticon from '../../common/icon/arrow_right_icon.svg';import backspace from '../../common/icon/backspace.svg';import circleback from '../../common/icon/circle_back.svg';import circleclose from '../../common/icon/circle_close.svg';import collapseicon from '../../common/icon/collapse_icon.svg';import copy from '../../common/icon/copy.svg';import eyeclose from '../../common/icon/eye_close.svg';import eyeopen from '../../common/icon/eye_open.svg';import facebookicon from '../../common/icon/facebook_icon.svg';import googleicon from '../../common/icon/google_icon.svg';import masterpassword from '../../common/icon/master_password.svg';import menu from '../../common/icon/menu.svg';import passkeysicon from '../../common/icon/passkeys_icon.svg';import security from '../../common/icon/security.svg';import securityicon from '../../common/icon/security_icon.svg';import transactionicon from '../../common/icon/transaction_icon.svg';import twittericon from '../../common/icon/twitter_icon.svg';import wallet from '../../common/icon/wallet.svg';import walleticon from '../../common/icon/wallet_icon.svg';\n            const svgs = { 'arrow1_icon': arrow1icon,\n'arrow_icon': arrowicon,\n'arrow_right_icon': arrowrighticon,\n'backspace': backspace,\n'circle_back': circleback,\n'circle_close': circleclose,\n'collapse_icon': collapseicon,\n'copy': copy,\n'eye_close': eyeclose,\n'eye_open': eyeopen,\n'facebook_icon': facebookicon,\n'google_icon': googleicon,\n'master_password': masterpassword,\n'menu': menu,\n'passkeys_icon': passkeysicon,\n'security': security,\n'security_icon': securityicon,\n'transaction_icon': transactionicon,\n'twitter_icon': twittericon,\n'wallet': wallet,\n'wallet_icon': walleticon, };\n            export default svgs;", "import Icon from '@ant-design/icons';\nimport React from 'react';\nimport icons from './icons';\n\nconst SVGIcon = ({ className = '', name = '', ...others }) => {\n    return (\n        <Icon\n            data-name={name}\n            className={className ? `theme-font-icon ${className}` : 'theme-font-icon'}\n            // @ts-ignore\n            component={icons[name]}\n            {...others}\n        />\n    );\n};\n\nexport default SVGIcon;\n", "import React, { forwardRef, useEffect, useImperativeHandle, useRef } from 'react';\nimport { isAutoFocusSupported } from '../../utils';\n\nconst allowedCharactersValues = ['alpha', 'numeric', 'alphanumeric'] as const;\n\nexport type AuthCodeProps = {\n    allowedCharacters?: (typeof allowedCharactersValues)[number];\n    ariaLabel?: string;\n    autoFocus?: boolean;\n    containerClassName?: string;\n    disabled?: boolean;\n    inputClassName?: string;\n    isPassword?: boolean;\n    length?: number;\n    placeholder?: string;\n    onChange: (res: string) => void;\n    code?: string;\n};\n\ntype InputMode = 'text' | 'numeric';\n\ntype InputType = 'text' | 'tel' | 'password';\n\ntype InputProps = {\n    type: InputType;\n    inputMode: InputMode;\n    pattern: string;\n    min?: string;\n    max?: string;\n};\n\nexport type AuthCodeRef = {\n    focus: () => void;\n    clear: () => void;\n};\n\nconst propsMap: { [key: string]: InputProps } = {\n    alpha: {\n        type: 'text',\n        inputMode: 'text',\n        pattern: '[a-zA-Z]{1}',\n    },\n\n    alphanumeric: {\n        type: 'text',\n        inputMode: 'text',\n        pattern: '[a-zA-Z0-9]{1}',\n    },\n\n    numeric: {\n        type: 'tel',\n        inputMode: 'numeric',\n        pattern: '[0-9]{1}',\n        min: '0',\n        max: '9',\n    },\n};\n\nconst AuthCode = forwardRef<AuthCodeRef, AuthCodeProps>(\n    (\n        {\n            allowedCharacters = 'alphanumeric',\n            ariaLabel,\n            autoFocus = true,\n            containerClassName,\n            disabled,\n            inputClassName,\n            isPassword = false,\n            length = 6,\n            placeholder,\n            onChange,\n            code = '',\n        },\n        ref\n    ) => {\n        if (isNaN(length) || length < 1) {\n            throw new Error('Length should be a number and greater than 0');\n        }\n\n        if (!allowedCharactersValues.some((value) => value === allowedCharacters)) {\n            throw new Error('Invalid value for allowedCharacters. Use alpha, numeric, or alphanumeric');\n        }\n\n        const inputsRef = useRef<Array<HTMLInputElement>>([]);\n        const inputProps = propsMap[allowedCharacters];\n\n        useImperativeHandle(ref, () => ({\n            focus: () => {\n                if (inputsRef.current) {\n                    inputsRef.current[0].focus();\n                }\n            },\n            clear: () => {\n                if (inputsRef.current) {\n                    for (let i = 0; i < inputsRef.current.length; i++) {\n                        inputsRef.current[i].value = '';\n                    }\n                    inputsRef.current[0].focus();\n                }\n                sendResult();\n            },\n        }));\n\n        useEffect(() => {\n            if (autoFocus && isAutoFocusSupported()) {\n                inputsRef.current[0].focus();\n            }\n        }, []);\n\n        useEffect(() => {\n            if (code) {\n                for (let i = 0; i < inputsRef.current.length; i++) {\n                    inputsRef.current[i].value = '';\n                }\n                for (let i = 0; i < code.length; i++) {\n                    inputsRef.current[i].value = code[i];\n                }\n                sendResult();\n            }\n        }, [code]);\n\n        let oldValue = inputsRef.current.map((input) => input.value).join('') || '';\n\n        const sendResult = () => {\n            const res = inputsRef.current.map((input) => input.value).join('');\n            if (oldValue !== res) {\n                console.log('sendResult', res);\n                onChange && onChange(res);\n                oldValue = res;\n            }\n        };\n\n        const handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n            const {\n                target: { value, nextElementSibling },\n            } = e;\n\n            if (value.length == 1) {\n                if (value.match(inputProps.pattern)) {\n                    if (nextElementSibling !== null) {\n                        (nextElementSibling as HTMLInputElement).focus();\n                    }\n                } else {\n                    e.target.value = '';\n                }\n            } else if (value.length > 1) {\n                const pastedValue = value;\n                let currentInput: number = Number(e.target.getAttribute('data-index')) || 0;\n                for (let i = 0; i < pastedValue.length; i++) {\n                    const pastedCharacter = pastedValue.charAt(i);\n                    if (pastedCharacter.match(inputProps.pattern) && inputsRef.current?.[currentInput]) {\n                        inputsRef.current[currentInput].value = pastedCharacter;\n                        if (inputsRef.current[currentInput].nextElementSibling !== null) {\n                            (inputsRef.current[currentInput].nextElementSibling as HTMLInputElement).focus();\n                            currentInput++;\n                        }\n                    }\n                }\n            }\n            setTimeout(() => {\n                sendResult();\n            });\n        };\n\n        const handleOnKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n            const { key } = e;\n            const target = e.target as HTMLInputElement;\n            if (key === 'Backspace') {\n                if (target.value === '') {\n                    if (target.previousElementSibling !== null) {\n                        const t = target.previousElementSibling as HTMLInputElement;\n                        t.value = '';\n                        t.focus();\n                        e.preventDefault();\n                    }\n                } else {\n                    target.value = '';\n                }\n                setTimeout(() => {\n                    sendResult();\n                });\n            }\n        };\n\n        const handleOnFocus = (e: React.FocusEvent<HTMLInputElement>) => {\n            e.target.select();\n        };\n\n        const handleOnPaste = (e: React.ClipboardEvent<HTMLInputElement>) => {\n            let pastedValue = e.clipboardData.getData('Text') ?? '';\n            pastedValue = pastedValue.replace(/\\s/g, '').substring(0, 6);\n\n            let currentInput = 0;\n\n            for (let i = 0; i < pastedValue.length; i++) {\n                const pastedCharacter = pastedValue.charAt(i);\n                const currentValue = inputsRef.current[currentInput].value;\n                if (pastedCharacter.match(inputProps.pattern)) {\n                    if (!currentValue) {\n                        inputsRef.current[currentInput].value = pastedCharacter;\n                        if (inputsRef.current[currentInput].nextElementSibling !== null) {\n                            (inputsRef.current[currentInput].nextElementSibling as HTMLInputElement).focus();\n                            currentInput++;\n                        }\n                    }\n                }\n            }\n            sendResult();\n\n            e.preventDefault();\n        };\n\n        return (\n            <div className={containerClassName}>\n                {new Array(6).fill(0).map((_, i) => {\n                    return (\n                        <input\n                            key={i}\n                            data-index={i}\n                            onChange={handleOnChange}\n                            onKeyDown={handleOnKeyDown}\n                            onFocus={handleOnFocus}\n                            onPaste={handleOnPaste}\n                            {...inputProps}\n                            type={isPassword ? 'password' : inputProps.type}\n                            ref={(el: HTMLInputElement) => {\n                                inputsRef.current[i] = el;\n                            }}\n                            // maxLength={1}\n                            className={inputClassName}\n                            autoComplete={i === 0 ? 'one-time-code' : 'off'}\n                            aria-label={ariaLabel ? `${ariaLabel}. Character ${i + 1}.` : `Character ${i + 1}.`}\n                            disabled={disabled}\n                            placeholder={placeholder}\n                        />\n                    );\n                })}\n                <div\n                    className=\"input-code-mask\"\n                    onClick={(e) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        for (let i = inputsRef.current.length - 1; i >= 0; i--) {\n                            if (\n                                (i > 0 && !inputsRef.current[i].value && inputsRef.current[i - 1].value) ||\n                                (i === 0 && !inputsRef.current[i].value) ||\n                                (i == inputsRef.current.length - 1 && inputsRef.current[i].value)\n                            ) {\n                                inputsRef.current[i].focus();\n                                inputsRef.current[i].setSelectionRange(\n                                    inputsRef.current[i].value.length,\n                                    inputsRef.current[i].value.length\n                                );\n                                break;\n                            }\n                        }\n                    }}\n                />\n            </div>\n        );\n    }\n);\n\nexport default AuthCode;\n", "import { useCallback, useEffect, useMemo } from 'react';\nimport { useAuthCoreModal } from '..';\n\nenum MessageType {\n    error = 'error',\n    info = 'info',\n    success = 'success',\n    warning = 'warning',\n}\n\nconst useMessage = () => {\n    const { authCoreModal } = useAuthCoreModal();\n\n    const rootModalContainer = useMemo(() => authCoreModal.rootModalContainer, [authCoreModal]);\n\n    const createMessage = useCallback(\n        (type: MessageType, content = '') => {\n            const mainContainer = document.createElement('div');\n            mainContainer.className = 'ant-message-notice';\n\n            const noticeContent = document.createElement('div');\n            noticeContent.className = 'ant-message-notice-content';\n\n            const customContent = document.createElement('div');\n            customContent.className = 'ant-message-custom-content';\n\n            const iconSpan = document.createElement('span');\n            iconSpan.setAttribute('role', 'img');\n            iconSpan.setAttribute('aria-label', 'check-circle');\n            iconSpan.className = 'anticon anticon-check-circle';\n\n            const svgIcon = document.createElement('svg');\n\n            const successIcon =\n                '<svg viewBox=\"64 64 896 896\" focusable=\"false\" data-icon=\"check-circle\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\"><path d=\"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm193.5 301.7l-210.6 292a31.8 31.8 0 01-51.7 0L318.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.2 0 19.9 4.9 25.9 13.3l71.2 98.8 157.2-218c6-8.3 15.6-13.3 25.9-13.3H699c6.5 0 10.3 7.4 6.5 12.7z\"></path></svg>';\n\n            const errorIcon =\n                '<svg viewBox=\"64 64 896 896\" focusable=\"false\" data-icon=\"close-circle\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\"><path d=\"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z\"></path></svg>';\n\n            const infoIcon =\n                '<svg viewBox=\"64 64 896 896\" focusable=\"false\" data-icon=\"info-circle\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\"><path d=\"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm32 664c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V456c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v272zm-32-344a48.01 48.01 0 010-96 48.01 48.01 0 010 96z\"></path></svg>';\n\n            const wranIcon =\n                '<svg viewBox=\"64 64 896 896\" focusable=\"false\" data-icon=\"exclamation-circle\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\"><path d=\"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm-32 232c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v272c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V296zm32 440a48.01 48.01 0 010-96 48.01 48.01 0 010 96z\"></path></svg>';\n\n            if (type === MessageType.success) {\n                customContent.className += ' ant-message-success';\n                svgIcon.innerHTML = successIcon;\n            } else if (type === MessageType.error) {\n                customContent.className += ' ant-message-error';\n                svgIcon.innerHTML = errorIcon;\n            } else if (type === MessageType.info) {\n                customContent.className += ' ant-message-info';\n                svgIcon.innerHTML = infoIcon;\n            } else if (type === MessageType.warning) {\n                customContent.className += ' ant-message-warning';\n                svgIcon.innerHTML = wranIcon;\n            }\n\n            const textSpan = document.createElement('span');\n            textSpan.textContent = content;\n\n            iconSpan.appendChild(svgIcon);\n            customContent.appendChild(iconSpan);\n            customContent.appendChild(textSpan);\n            noticeContent.appendChild(customContent);\n            mainContainer.appendChild(noticeContent);\n            rootModalContainer?.querySelector('.ant-message')?.appendChild(mainContainer);\n            return mainContainer;\n        },\n        [rootModalContainer]\n    );\n\n    const error = useCallback(\n        (content: string) => {\n            const el = createMessage(MessageType.error, content);\n            setTimeout(() => {\n                rootModalContainer?.querySelector('.ant-message')?.removeChild(el);\n            }, 2000);\n        },\n        [createMessage]\n    );\n\n    const info = useCallback(\n        (content: string) => {\n            const el = createMessage(MessageType.info, content);\n            setTimeout(() => {\n                rootModalContainer?.querySelector('.ant-message')?.removeChild(el);\n            }, 2000);\n        },\n        [createMessage]\n    );\n\n    const success = useCallback(\n        (content: string) => {\n            const el = createMessage(MessageType.success, content);\n            setTimeout(() => {\n                rootModalContainer?.querySelector('.ant-message')?.removeChild(el);\n            }, 2000);\n        },\n        [createMessage]\n    );\n\n    const warning = useCallback(\n        (content: string) => {\n            const el = createMessage(MessageType.warning, content);\n            setTimeout(() => {\n                rootModalContainer?.querySelector('.ant-message')?.removeChild(el);\n            }, 2000);\n        },\n        [createMessage]\n    );\n\n    useEffect(() => {\n        if (rootModalContainer) {\n            if (rootModalContainer.querySelector('.ant-message')) return;\n            const messageContainer = document.createElement('div');\n            messageContainer.className = 'ant-message';\n            rootModalContainer.appendChild(messageContainer);\n        }\n    }, [rootModalContainer]);\n\n    return {\n        error,\n        info,\n        success,\n        warning,\n    };\n};\n\nexport default useMessage;\n", "import { ApiError, getCloudflareTurnstileResponse, isApiError, type CaptchaRequest } from '@particle-network/auth-core';\nimport { useInterval } from 'ahooks';\nimport { Button } from 'antd';\nimport throttle from 'lodash/throttle.js';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport SVGIcon from '../../../components/icon/svg-icon';\nimport AuthCode from '../../../components/react-auth-code-input';\nimport { useParticleAuth } from '../../../context';\nimport { useCustomize } from '../../../context/hooks/useCustomize';\nimport useLogin from '../../../context/hooks/useLogin';\nimport useMessage from '../../../context/hooks/useMessage';\nimport styles from './captcha-input.less';\n\nfunction CaptchaInput(props: any) {\n    const { sendCaptcha, setShowInputCaptcha, account, loginWithAccount, chain } = props;\n\n    const [loading, setLoading] = useState(false);\n\n    const { themeType, language } = useCustomize();\n    const [codeVal, setCodeVal] = useState<string>('');\n    const { loginHandler } = useLogin();\n    const [noInput, setNoInput] = useState(false);\n    const [wrongInput, setWrongInput] = useState(false);\n    const [invalidInput, setInvalidInput] = useState(false);\n    const [resendTip, setResendTip] = useState(false);\n    const [confirmBtn, setConfirmBtn] = useState(false);\n    const { authCoreModal } = useParticleAuth();\n    const { t } = useTranslation();\n    const message = useMessage();\n    const codeInput = useRef<any>(null);\n    const codePattern = /^\\d{6}$/;\n    const [interval, setInterval] = useState<number | undefined>(1000);\n\n    const [countdown, setCountdown] = useState(60);\n\n    useInterval(() => {\n        if (countdown > 0) {\n            const result = countdown - 1;\n            setCountdown(result);\n            if (result === 0) {\n                setInterval(undefined);\n            }\n        }\n    }, interval);\n\n    const startCountdown = () => {\n        setCountdown(60);\n        setInterval(1000);\n    };\n\n    const getCaptcha = () => {\n        if (account.includes('@')) {\n            sendCaptchaImpl({ email: account });\n        } else {\n            getCloudflareTurnstileResponse({\n                theme: themeType,\n                language,\n                getContainer: () => {\n                    return authCoreModal.rootBody as HTMLElement;\n                },\n            })\n                .then((token) => {\n                    sendCaptchaImpl({\n                        phone: account,\n                        // eslint-disable-next-line camelcase\n                        cf_turnstile_response: token,\n                    });\n                })\n                .catch(() => {\n                    message.error(t('error.server_20112'));\n                });\n        }\n    };\n\n    const sendCaptchaImpl = (param: CaptchaRequest) => {\n        sendCaptcha(param)\n            .then(() => {\n                console.log('send captcha success');\n                startCountdown();\n                setConfirmBtn(false);\n                setResendTip(false);\n            })\n            .catch(() => {\n                setCountdown(0);\n                setInterval(undefined);\n            });\n    };\n\n    const codeChange = (value: any) => {\n        setWrongInput(false);\n        // const code = value.join(\"\");\n        const code = value;\n        const patt = /^[0-9]+$/g;\n        if (code.length === 0) {\n            setWrongInput(false);\n            setNoInput(true);\n        } else {\n            if (!patt.test(code)) {\n                setNoInput(false);\n                setWrongInput(true);\n            } else {\n                setNoInput(false);\n                setWrongInput(false);\n            }\n        }\n    };\n\n    const login = (code?: string) => {\n        setNoInput(false);\n        setWrongInput(false);\n        setInvalidInput(false);\n        code = code || codeVal;\n        console.log(`code --> ${code}`);\n        if (noInput || wrongInput) {\n            return;\n        }\n        if (codePattern.test(code)) {\n            throttleLoginImpl(code);\n        } else {\n            if ((code.length > 0 && code.length < 6) || !codePattern.test(code)) {\n                setWrongInput(true);\n                setNoInput(false);\n            }\n            if (code.length === 0) {\n                setWrongInput(false);\n                setNoInput(true);\n            }\n        }\n    };\n\n    const loginImpl = async (code: string) => {\n        if (resendTip) {\n            return;\n        }\n        setLoading(true);\n        let data;\n        if (account.includes('@')) {\n            data = {\n                code: code,\n                email: account,\n                chain,\n            };\n        } else {\n            data = {\n                code: code,\n                phone: account,\n                chain,\n            };\n        }\n        try {\n            await loginHandler(data, false);\n        } catch (error) {\n            handleLoginError(error);\n        }\n    };\n\n    const handleLoginError = (error: any) => {\n        console.log('login error', error);\n        setLoading(false);\n        if (isApiError(error)) {\n            const errorCode = error.error_code;\n            if (errorCode === ApiError.InvalidCode) {\n                setInvalidInput(true);\n            } else if (errorCode === ApiError.ResendCode) {\n                setResendTip(true);\n                setConfirmBtn(true);\n            }\n        }\n    };\n\n    const onCodeInputChange = (codeArray: string) => {\n        codeChange(codeArray);\n        setCodeVal(codeArray);\n        setNoInput(false);\n        setWrongInput(false);\n        setInvalidInput(false);\n        setResendTip(false);\n        if (codePattern.test(codeArray)) {\n            throttleLoginImpl(codeArray);\n        }\n    };\n\n    const throttleLoginImpl = useCallback(\n        throttle(\n            (code) => {\n                loginImpl(code);\n            },\n            1000,\n            {\n                leading: true,\n                trailing: false,\n            }\n        ),\n        []\n    );\n\n    const handleCodeInputFocus = () => {\n        const elements = document.getElementsByClassName('input-code-item');\n        //@ts-ignore\n        elements[Math.min(codeVal.length, 5)]?.focus();\n    };\n\n    const verifyCodeErrorMessage = useMemo(() => {\n        const error = [\n            noInput ? t('login.enter_captcha') : '',\n            wrongInput ? t('login.captcha_input_error') : '',\n            invalidInput ? t('login.invalid_code') : '',\n            resendTip ? t('login.please_send_again') : '',\n        ]\n            .map((val) => val.trim())\n            .filter((val) => !!val)\n            .join(',');\n\n        return error.includes(',') ? error + '.' : error;\n    }, [noInput, wrongInput, invalidInput, resendTip]);\n\n    useEffect(() => {\n        const elements = document.getElementsByClassName('react-input-code');\n        const contextmenuEvent = (e: any) => e.preventDefault();\n        elements[0]?.addEventListener('contextmenu', contextmenuEvent);\n        return () => {\n            elements[0]?.removeEventListener('contextmenu', contextmenuEvent);\n        };\n    }, []);\n\n    return (\n        <div className=\"captcha-box\">\n            <style>{styles as unknown as string}</style>\n            <div className=\"captcha-form\">\n                <div className=\"input-code-content\">\n                    <div onClick={handleCodeInputFocus}>\n                        <AuthCode\n                            containerClassName=\"react-input-code\"\n                            inputClassName=\"input-code-item\"\n                            allowedCharacters=\"numeric\"\n                            length={6}\n                            ref={codeInput}\n                            placeholder={' '}\n                            onChange={onCodeInputChange}\n                        />\n                    </div>\n                </div>\n            </div>\n            <div className=\"error-tip\">{verifyCodeErrorMessage}</div>\n\n            <div className=\"btn-box\">\n                <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    className=\"primary-antd-btn submit-btn\"\n                    onClick={() => login()}\n                    disabled={confirmBtn}\n                    loading={loading}\n                >\n                    {t('common.confirm')}\n                </Button>\n\n                <Button className=\"get-btn\" disabled={countdown > 0} type=\"link\" onClick={getCaptcha}>\n                    {t('login.send_again')} {countdown > 0 ? `(${countdown}s)` : ''}\n                </Button>\n\n                {!loginWithAccount && (\n                    <div\n                        className=\"back-box\"\n                        onClick={() => {\n                            setShowInputCaptcha(false);\n                        }}\n                    >\n                        <SVGIcon className=\"arrow1-icon\" name=\"arrow1_icon\" />\n                        <span>{t('login.back')}</span>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default CaptchaInput;\n", "import { Button, Form, Input } from 'antd';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { EmailRegExp } from '../../../utils';\nimport styles from './login.less';\n\nfunction EmailLogin(props: any) {\n    const { t } = useTranslation();\n\n    const { sendCaptcha, setShowInputCaptcha, account, supportAuthTypes, loginWithAccount } = props;\n\n    const [form] = Form.useForm();\n    const [errorTip, setErrorTip] = useState(false);\n    const [noInputTip, setNoInputTip] = useState(false);\n\n    const [loading, setLoading] = useState(false);\n    const emailBoxRef = useRef<any>(null);\n    const emailInput = useRef<any>(null);\n\n    useEffect(() => {\n        if (loginWithAccount && account && sendCaptcha) {\n            form.setFieldsValue({\n                email: account,\n            });\n            getCaptcha(account);\n        }\n    }, []);\n\n    const getCaptcha = (email: string) => {\n        emailInput.current.focus();\n        if (!email) {\n            setNoInputTip(true);\n            setErrorTip(false);\n        } else if (!EmailRegExp.test(email)) {\n            setErrorTip(true);\n        } else {\n            sendCaptchaImpl(email);\n        }\n    };\n\n    const sendCaptchaImpl = (email: string) => {\n        setLoading(true);\n        sendCaptcha({\n            email: email,\n        })\n            .then((result: boolean) => {\n                setShowInputCaptcha(result);\n            })\n            .catch(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <>\n            <style>{styles as unknown as string}</style>\n            <div className=\"login-style\">\n                <Form\n                    name=\"login-form\"\n                    onFinish={(values) => getCaptcha(values.email.trim())}\n                    className=\"form-box\"\n                    requiredMark={false}\n                    form={form}\n                    labelCol={{\n                        style: { textAlign: 'left' },\n                    }}\n                >\n                    <div className=\"email-box\" ref={emailBoxRef}>\n                        <Form.Item\n                            name=\"email\"\n                            label=\"\"\n                            className=\"form-item\"\n                            initialValue={account?.includes('@') ? account : ''}\n                        >\n                            <Input\n                                className=\"email-input\"\n                                placeholder={t('login.email_address') || undefined}\n                                ref={emailInput}\n                                onChange={() => {\n                                    setErrorTip(false);\n                                    setNoInputTip(false);\n                                }}\n                                readOnly={loginWithAccount}\n                                onFocus={() => {\n                                    emailBoxRef.current.setAttribute('data-focus', 'true');\n                                }}\n                                onBlur={() => {\n                                    emailBoxRef.current.removeAttribute('data-focus');\n                                }}\n                            />\n                        </Form.Item>\n                    </div>\n\n                    <div className=\"error-tip\">{errorTip && t('login.email_format_error')}</div>\n                    <div className=\"error-tip\">{noInputTip && t('login.input_email_holder')}</div>\n\n                    <Form.Item className=\"form-item\">\n                        <Button\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            className=\"primary-antd-btn submit-btn\"\n                            loading={loading}\n                        >\n                            {t('login.get_captcha')}\n                        </Button>\n                    </Form.Item>\n\n                    {!loginWithAccount && supportAuthTypes.length > 0 && (\n                        <div className=\"login-or\">\n                            <div className=\"or-line\"></div>\n                            {t('login.or')}\n                            <div className=\"or-line\"></div>\n                        </div>\n                    )}\n                </Form>\n            </div>\n        </>\n    );\n}\n\nexport default EmailLogin;\n", "export const defaultCountriesData = [\n    ['Afghanistan (\u202B\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646\u202C\u200E)', 'af', '93'],\n    ['Albania (Shqip\u00EBri)', 'al', '355'],\n    ['Algeria (\u202B\u0627\u0644\u062C\u0632\u0627\u0626\u0631\u202C\u200E)', 'dz', '213'],\n    ['American Samoa', 'as', '1684'],\n    ['Andorra', 'ad', '376'],\n    ['Angola', 'ao', '244'],\n    ['Anguilla', 'ai', '1264'],\n    ['Antigua and Barbuda', 'ag', '1268'],\n    ['Argentina', 'ar', '54'],\n    ['Armenia (\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576)', 'am', '374'],\n    ['Aruba', 'aw', '297'],\n    ['Australia', 'au', '61'],\n    ['Austria (\u00D6sterreich)', 'at', '43'],\n    ['Azerbaijan (Az\u0259rbaycan)', 'az', '994'],\n    ['Bahamas', 'bs', '1242'],\n    ['Bahrain (\u202B\u0627\u0644\u0628\u062D\u0631\u064A\u0646\u202C\u200E)', 'bh', '973'],\n    ['Bangladesh (\u09AC\u09BE\u0982\u09B2\u09BE\u09A6\u09C7\u09B6)', 'bd', '880'],\n    ['Barbados', 'bb', '1246'],\n    ['Belarus (\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u044C)', 'by', '375'],\n    ['Belgium (Belgi\u00EB)', 'be', '32'],\n    ['Belize', 'bz', '501'],\n    ['Benin (B\u00E9nin)', 'bj', '229'],\n    ['Bermuda', 'bm', '1441'],\n    ['Bhutan (\u0F60\u0F56\u0FB2\u0F74\u0F42)', 'bt', '975'],\n    ['Bolivia', 'bo', '591'],\n    ['Bosnia and Herzegovina', 'ba', '387'],\n    ['Botswana', 'bw', '267'],\n    ['Brazil (Brasil)', 'br', '55'],\n    ['British Indian Ocean Territory', 'io', '246'],\n    ['British Virgin Islands', 'vg', '1284'],\n    ['Brunei', 'bn', '673'],\n    ['Bulgaria (\u0411\u044A\u043B\u0433\u0430\u0440\u0438\u044F)', 'bg', '359'],\n    ['Burkina Faso', 'bf', '226'],\n    ['Burundi (Uburundi)', 'bi', '257'],\n    ['Cambodia (\u1780\u1798\u17D2\u1796\u17BB\u1787\u17B6)', 'kh', '855'],\n    ['Cameroon (Cameroun)', 'cm', '237'],\n    ['Canada', 'ca', '1'],\n    ['Cape Verde (Kabu Verdi)', 'cv', '238'],\n    ['Caribbean Netherlands', 'bq', '599'],\n    ['Cayman Islands', 'ky', '1345'],\n    ['Central African Republic', 'cf', '236'],\n    ['Chad (Tchad)', 'td', '235'],\n    ['Chile', 'cl', '56'],\n    ['China (\u4E2D\u56FD)', 'cn', '86'],\n    ['Christmas Island', 'cx', '61'],\n    ['Cocos (Keeling) Islands', 'cc', '61'],\n    ['Colombia', 'co', '57'],\n    ['Comoros (\u202B\u062C\u0632\u0631 \u0627\u0644\u0642\u0645\u0631\u202C\u200E)', 'km', '269'],\n    ['Congo (DRC)', 'cd', '243'],\n    ['Congo (Republic)', 'cg', '242'],\n    ['Cook Islands', 'ck', '682'],\n    ['Costa Rica', 'cr', '506'],\n    ['C\u00F4te d\u2019Ivoire', 'ci', '225'],\n    ['Croatia (Hrvatska)', 'hr', '385'],\n    ['Cuba', 'cu', '53'],\n    ['Cura\u00E7ao', 'cw', '599'],\n    ['Cyprus (\u039A\u03CD\u03C0\u03C1\u03BF\u03C2)', 'cy', '357'],\n    ['Czech Republic (\u010Cesk\u00E1 republika)', 'cz', '420'],\n    ['Denmark (Danmark)', 'dk', '45'],\n    ['Djibouti', 'dj', '253'],\n    ['Dominica', 'dm', '1767'],\n    ['Dominican Republic', 'do', '1'],\n    ['Ecuador', 'ec', '593'],\n    ['Egypt (\u202B\u0645\u0635\u0631\u202C\u200E)', 'eg', '20'],\n    ['El Salvador', 'sv', '503'],\n    ['Equatorial Guinea', 'gq', '240'],\n    ['Eritrea', 'er', '291'],\n    ['Estonia (Eesti)', 'ee', '372'],\n    ['Ethiopia', 'et', '251'],\n    ['Falkland Islands (Islas Malvinas)', 'fk', '500'],\n    ['Faroe Islands (F\u00F8royar)', 'fo', '298'],\n    ['Fiji', 'fj', '679'],\n    ['Finland (Suomi)', 'fi', '358'],\n    ['France', 'fr', '33'],\n    ['French Guiana', 'gf', '594'],\n    ['French Polynesia', 'pf', '689'],\n    ['Gabon', 'ga', '241'],\n    ['Gambia', 'gm', '220'],\n    ['Georgia (\u10E1\u10D0\u10E5\u10D0\u10E0\u10D7\u10D5\u10D4\u10DA\u10DD)', 'ge', '995'],\n    ['Germany (Deutschland)', 'de', '49'],\n    ['Ghana (Gaana)', 'gh', '233'],\n    ['Gibraltar', 'gi', '350'],\n    ['Greece (\u0395\u03BB\u03BB\u03AC\u03B4\u03B1)', 'gr', '30'],\n    ['Greenland (Kalaallit Nunaat)', 'gl', '299'],\n    ['Grenada', 'gd', '1473'],\n    ['Guadeloupe', 'gp', '590'],\n    ['Guam', 'gu', '1671'],\n    ['Guatemala', 'gt', '502'],\n    ['Guernsey', 'gg', '44'],\n    ['Guinea (Guin\u00E9e)', 'gn', '224'],\n    ['Guinea-Bissau (Guin\u00E9 Bissau)', 'gw', '245'],\n    ['Guyana', 'gy', '592'],\n    ['Haiti', 'ht', '509'],\n    ['Honduras', 'hn', '504'],\n    ['Hong Kong (\u9999\u6E2F)', 'hk', '852'],\n    ['Hungary (Magyarorsz\u00E1g)', 'hu', '36'],\n    ['Iceland (\u00CDsland)', 'is', '354'],\n    ['India (\u092D\u093E\u0930\u0924)', 'in', '91'],\n    ['Indonesia', 'id', '62'],\n    ['Iran (\u202B\u0627\u06CC\u0631\u0627\u0646\u202C\u200E)', 'ir', '98'],\n    ['Iraq (\u202B\u0627\u0644\u0639\u0631\u0627\u0642\u202C\u200E)', 'iq', '964'],\n    ['Ireland', 'ie', '353'],\n    ['Isle of Man', 'im', '44'],\n    ['Israel (\u202B\u05D9\u05E9\u05E8\u05D0\u05DC\u202C\u200E)', 'il', '972'],\n    ['Italy (Italia)', 'it', '39'],\n    ['Jamaica', 'jm', '1876'],\n    ['Japan (\u65E5\u672C)', 'jp', '81'],\n    ['Jersey', 'je', '44'],\n    ['Jordan (\u202B\u0627\u0644\u0623\u0631\u062F\u0646\u202C\u200E)', 'jo', '962'],\n    ['Kazakhstan (\u041A\u0430\u0437\u0430\u0445\u0441\u0442\u0430\u043D)', 'kz', '7'],\n    ['Kenya', 'ke', '254'],\n    ['Kiribati', 'ki', '686'],\n    ['Kosovo', 'xk', '383'],\n    ['Kuwait (\u202B\u0627\u0644\u0643\u0648\u064A\u062A\u202C\u200E)', 'kw', '965'],\n    ['Kyrgyzstan (\u041A\u044B\u0440\u0433\u044B\u0437\u0441\u0442\u0430\u043D)', 'kg', '996'],\n    ['Laos (\u0EA5\u0EB2\u0EA7)', 'la', '856'],\n    ['Latvia (Latvija)', 'lv', '371'],\n    ['Lebanon (\u202B\u0644\u0628\u0646\u0627\u0646\u202C\u200E)', 'lb', '961'],\n    ['Lesotho', 'ls', '266'],\n    ['Liberia', 'lr', '231'],\n    ['Libya (\u202B\u0644\u064A\u0628\u064A\u0627\u202C\u200E)', 'ly', '218'],\n    ['Liechtenstein', 'li', '423'],\n    ['Lithuania (Lietuva)', 'lt', '370'],\n    ['Luxembourg', 'lu', '352'],\n    ['Macau (\u6FB3\u9580)', 'mo', '853'],\n    ['Macedonia (FYROM) (\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0438\u0458\u0430)', 'mk', '389'],\n    ['Madagascar (Madagasikara)', 'mg', '261'],\n    ['Malawi', 'mw', '265'],\n    ['Malaysia', 'my', '60'],\n    ['Maldives', 'mv', '960'],\n    ['Mali', 'ml', '223'],\n    ['Malta', 'mt', '356'],\n    ['Marshall Islands', 'mh', '692'],\n    ['Martinique', 'mq', '596'],\n    ['Mauritania (\u202B\u0645\u0648\u0631\u064A\u062A\u0627\u0646\u064A\u0627\u202C\u200E)', 'mr', '222'],\n    ['Mauritius (Moris)', 'mu', '230'],\n    ['Mayotte', 'yt', '262'],\n    ['Mexico (M\u00E9xico)', 'mx', '52'],\n    ['Micronesia', 'fm', '691'],\n    ['Moldova (Republica Moldova)', 'md', '373'],\n    ['Monaco', 'mc', '377'],\n    ['Mongolia (\u041C\u043E\u043D\u0433\u043E\u043B)', 'mn', '976'],\n    ['Montenegro (Crna Gora)', 'me', '382'],\n    ['Montserrat', 'ms', '1664'],\n    ['Morocco (\u202B\u0627\u0644\u0645\u063A\u0631\u0628\u202C\u200E)', 'ma', '212'],\n    ['Mozambique (Mo\u00E7ambique)', 'mz', '258'],\n    ['Myanmar (Burma) (\u1019\u103C\u1014\u103A\u1019\u102C)', 'mm', '95'],\n    ['Namibia (Namibi\u00EB)', 'na', '264'],\n    ['Nauru', 'nr', '674'],\n    ['Nepal (\u0928\u0947\u092A\u093E\u0932)', 'np', '977'],\n    ['Netherlands (Nederland)', 'nl', '31'],\n    ['New Caledonia (Nouvelle-Cal\u00E9donie)', 'nc', '687'],\n    ['New Zealand', 'nz', '64'],\n    ['Nicaragua', 'ni', '505'],\n    ['Niger (Nijar)', 'ne', '227'],\n    ['Nigeria', 'ng', '234'],\n    ['Niue', 'nu', '683'],\n    ['Norfolk Island', 'nf', '672'],\n    ['North Korea (\uC870\uC120 \uBBFC\uC8FC\uC8FC\uC758 \uC778\uBBFC \uACF5\uD654\uAD6D)', 'kp', '850'],\n    ['Northern Mariana Islands', 'mp', '1670'],\n    ['Norway (Norge)', 'no', '47'],\n    ['Oman (\u202B\u0639\u064F\u0645\u0627\u0646\u202C\u200E)', 'om', '968'],\n    ['Pakistan (\u202B\u067E\u0627\u06A9\u0633\u062A\u0627\u0646\u202C\u200E)', 'pk', '92'],\n    ['Palau', 'pw', '680'],\n    ['Palestine (\u202B\u0641\u0644\u0633\u0637\u064A\u0646\u202C\u200E)', 'ps', '970'],\n    ['Panama (Panam\u00E1)', 'pa', '507'],\n    ['Papua New Guinea', 'pg', '675'],\n    ['Paraguay', 'py', '595'],\n    ['Peru (Per\u00FA)', 'pe', '51'],\n    ['Philippines', 'ph', '63'],\n    ['Poland (Polska)', 'pl', '48'],\n    ['Portugal', 'pt', '351'],\n    ['Puerto Rico', 'pr', '1'],\n    ['Qatar (\u202B\u0642\u0637\u0631\u202C\u200E)', 'qa', '974'],\n    ['R\u00E9union (La R\u00E9union)', 're', '262'],\n    ['Romania (Rom\u00E2nia)', 'ro', '40'],\n    ['Russia (\u0420\u043E\u0441\u0441\u0438\u044F)', 'ru', '7'],\n    ['Rwanda', 'rw', '250'],\n    ['Saint Barth\u00E9lemy (Saint-Barth\u00E9lemy)', 'bl', '590'],\n    ['Saint Helena', 'sh', '290'],\n    ['Saint Kitts and Nevis', 'kn', '1869'],\n    ['Saint Lucia', 'lc', '1758'],\n    ['Saint Martin', 'mf', '590'],\n    ['Saint Pierre and Miquelon', 'pm', '508'],\n    ['Saint Vincent and the Grenadines', 'vc', '1784'],\n    ['Samoa', 'ws', '685'],\n    ['San Marino', 'sm', '378'],\n    ['S\u00E3o Tom\u00E9 and Pr\u00EDncipe', 'st', '239'],\n    ['Saudi Arabia (\u202B\u0627\u0644\u0645\u0645\u0644\u0643\u0629 \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0629\u202C\u200E)', 'sa', '966'],\n    ['Senegal (S\u00E9n\u00E9gal)', 'sn', '221'],\n    ['Serbia (\u0421\u0440\u0431\u0438\u0458\u0430)', 'rs', '381'],\n    ['Seychelles', 'sc', '248'],\n    ['Sierra Leone', 'sl', '232'],\n    ['Singapore', 'sg', '65'],\n    ['Sint Maarten', 'sx', '1721'],\n    ['Slovakia (Slovensko)', 'sk', '421'],\n    ['Slovenia (Slovenija)', 'si', '386'],\n    ['Solomon Islands', 'sb', '677'],\n    ['Somalia (Soomaaliya)', 'so', '252'],\n    ['South Africa', 'za', '27'],\n    ['South Korea (\uB300\uD55C\uBBFC\uAD6D)', 'kr', '82'],\n    ['South Sudan (\u202B\u062C\u0646\u0648\u0628 \u0627\u0644\u0633\u0648\u062F\u0627\u0646\u202C\u200E)', 'ss', '211'],\n    ['Spain (Espa\u00F1a)', 'es', '34'],\n    ['Sri Lanka (\u0DC1\u0DCA\u200D\u0DBB\u0DD3 \u0DBD\u0D82\u0D9A\u0DCF\u0DC0)', 'lk', '94'],\n    ['Sudan (\u202B\u0627\u0644\u0633\u0648\u062F\u0627\u0646\u202C\u200E)', 'sd', '249'],\n    ['Suriname', 'sr', '597'],\n    ['Svalbard and Jan Mayen', 'sj', '47'],\n    ['Swaziland', 'sz', '268'],\n    ['Sweden (Sverige)', 'se', '46'],\n    ['Switzerland (Schweiz)', 'ch', '41'],\n    ['Syria (\u202B\u0633\u0648\u0631\u064A\u0627\u202C\u200E)', 'sy', '963'],\n    ['Taiwan (\u53F0\u7063)', 'tw', '886'],\n    ['Tajikistan', 'tj', '992'],\n    ['Tanzania', 'tz', '255'],\n    ['Thailand (\u0E44\u0E17\u0E22)', 'th', '66'],\n    ['Timor-Leste', 'tl', '670'],\n    ['Togo', 'tg', '228'],\n    ['Tokelau', 'tk', '690'],\n    ['Tonga', 'to', '676'],\n    ['Trinidad and Tobago', 'tt', '1868'],\n    ['Tunisia (\u202B\u062A\u0648\u0646\u0633\u202C\u200E)', 'tn', '216'],\n    ['Turkey (T\u00FCrkiye)', 'tr', '90'],\n    ['Turkmenistan', 'tm', '993'],\n    ['Turks and Caicos Islands', 'tc', '1649'],\n    ['Tuvalu', 'tv', '688'],\n    ['U.S. Virgin Islands', 'vi', '1340'],\n    ['Uganda', 'ug', '256'],\n    ['Ukraine (\u0423\u043A\u0440\u0430\u0457\u043D\u0430)', 'ua', '380'],\n    ['United Arab Emirates', 'ae', '971'],\n    ['United Kingdom', 'gb', '44'],\n    ['United States', 'us', '1'],\n    ['Uruguay', 'uy', '598'],\n    ['Uzbekistan (O\u02BBzbekiston)', 'uz', '998'],\n    ['Vanuatu', 'vu', '678'],\n    ['Vatican City (Citt\u00E0 del Vaticano)', 'va', '39'],\n    ['Venezuela', 've', '58'],\n    ['Vietnam (Vi\u1EC7t Nam)', 'vn', '84'],\n    ['Wallis and Futuna', 'wf', '681'],\n    ['Western Sahara (\u202B\u0627\u0644\u0635\u062D\u0631\u0627\u0621 \u0627\u0644\u063A\u0631\u0628\u064A\u0629\u202C\u200E)', 'eh', '212'],\n    ['Yemen (\u202B\u0627\u0644\u064A\u0645\u0646\u202C\u200E)', 'ye', '967'],\n    ['Zambia', 'zm', '260'],\n    ['Zimbabwe', 'zw', '263'],\n    ['\u00C5land Islands', 'ax', '358'],\n];\n\nexport function getCurrentCountry() {\n    const language = navigator.languages && navigator.languages.length ? navigator.languages[0] : navigator.language;\n    const locales = language.split('-');\n    const region = locales.length > 1 ? locales[1] : locales[0];\n    let currentCountry;\n    if (region && region.length > 0) {\n        currentCountry = defaultCountriesData.find((item) => item[1].toUpperCase() === region);\n    }\n    return currentCountry;\n}\n", "import { DownOutlined } from '@ant-design/icons';\nimport { getCloudflareTurnstileResponse } from '@particle-network/auth-core';\nimport { Button, Form, Input } from 'antd';\nimport getUnicodeFlagIcon from 'country-flag-icons/unicode';\nimport type { CountryCode } from 'libphonenumber-js/max';\nimport { isValidPhoneNumber, parsePhoneNumber, parsePhoneNumberWithError } from 'libphonenumber-js/max';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { defaultCountriesData } from '../../../api/model/all-countries';\nimport { useAuthCoreModal } from '../../../context';\nimport { useCustomize } from '../../../context/hooks/useCustomize';\nimport useMessage from '../../../context/hooks/useMessage';\nimport { isPhoneValid } from '../../../utils';\nimport styles from './login.less';\n\nfunction PhoneLogin(props: any) {\n    const { t } = useTranslation();\n\n    const { sendCaptcha, setShowInputCaptcha, account, supportAuthTypes, loginWithAccount } = props;\n\n    const [selectVisible, setSelectVisible] = useState(false);\n\n    const { themeType, language } = useCustomize();\n\n    const [countryData, setCountryData] = useState(['United States', 'us', '1']);\n\n    const [form] = Form.useForm();\n\n    const clickRef = useRef<any>();\n    const { authCoreModal } = useAuthCoreModal();\n    const [errorTip, setErrorTip] = useState(false);\n    const [noInputTip, setNoInputTip] = useState(false);\n\n    const [loading, setLoading] = useState(false);\n    const message = useMessage();\n    const phoneInput = useRef<any>(null);\n\n    const [phoneValue, setPhoneValue] = useState<string>();\n\n    useEffect(() => {\n        if (selectVisible) {\n            document.addEventListener('click', clickCallback, true);\n            return () => {\n                document.removeEventListener('click', clickCallback, true);\n            };\n        }\n    }, [selectVisible]);\n\n    useEffect(() => {\n        let currentCountry;\n        if (account && !account.includes('@')) {\n            if (isValidPhoneNumber(account)) {\n                const phoneNumber = parsePhoneNumber(account);\n                const countryCode = phoneNumber.countryCallingCode.toString();\n                const regionCode = phoneNumber.country;\n                form.setFieldsValue({\n                    phone: phoneNumber.nationalNumber,\n                });\n                if (countryCode && regionCode) {\n                    const items = defaultCountriesData.filter(\n                        (item) =>\n                            item[2].toString() === countryCode && item[1].toLowerCase() === regionCode.toLowerCase()\n                    );\n                    if (items && items.length > 0) {\n                        currentCountry = items[items.length - 1];\n                    }\n                }\n            }\n        }\n        if (!currentCountry) {\n            const language =\n                navigator.languages && navigator.languages.length ? navigator.languages[0] : navigator.language;\n            const locales = language.split('-');\n            const region = locales.length > 1 ? locales[1] : locales[0];\n            if (region && region.length > 0) {\n                currentCountry = defaultCountriesData.find((item) => item[1].toUpperCase() === region);\n            }\n        }\n        if (currentCountry) {\n            setCountryData(currentCountry);\n        }\n\n        if (loginWithAccount && account && sendCaptcha && isValidPhoneNumber(account)) {\n            getCaptcha(account, currentCountry ? currentCountry[1].toUpperCase() : undefined);\n        }\n    }, []);\n\n    const clickCallback = (event: any) => {\n        setTimeout(() => {\n            if (clickRef.current?.contains(event.target)) {\n                return;\n            }\n            setSelectVisible(false);\n        });\n    };\n\n    // \u9A8C\u8BC1 form\n    const validateForm = (phoneValue: string, regionCode: string, isValidateEmpty = true) => {\n        if (!phoneValue && isValidateEmpty) {\n            setNoInputTip(true);\n            return;\n        }\n\n        if (phoneValue?.length === 1) {\n            setErrorTip(true);\n            return;\n        }\n\n        if (!isPhoneValid(phoneValue, regionCode)) {\n            setErrorTip(true);\n            return false;\n        } else {\n            setErrorTip(false);\n            return true;\n        }\n    };\n\n    const getCaptcha = (phone: string, regionCode?: string) => {\n        phoneInput.current.focus();\n        if (!phone) {\n            setNoInputTip(true);\n            return;\n        }\n        if (phone.length === 1) {\n            setErrorTip(true);\n            return;\n        }\n\n        if (!regionCode) {\n            regionCode = countryData[1].toUpperCase();\n        }\n        if (isPhoneValid(phone, regionCode)) {\n            const countryCode = regionCode.toUpperCase() as CountryCode;\n            const phoneE164 = parsePhoneNumber(phone, countryCode).format('E.164');\n            console.log('login phone: ' + phoneE164);\n            setPhoneValue(phoneE164);\n            setLoading(true);\n            getCloudflareTurnstileResponse({\n                theme: themeType,\n                language,\n                getContainer: () => {\n                    return authCoreModal.rootBody as HTMLElement;\n                },\n            })\n                .then((token) => {\n                    sendCaptchaImpl(token, phoneE164);\n                })\n                .catch(() => {\n                    setLoading(false);\n                    message.error(t('error.server_20112'));\n                });\n        } else {\n            setErrorTip(true);\n        }\n    };\n\n    const sendCaptchaImpl = (token: string, phoneValue: string) => {\n        setLoading(true);\n        sendCaptcha({\n            phone: phoneValue,\n            // eslint-disable-next-line camelcase\n            cf_turnstile_response: token,\n        })\n            .then((result: boolean) => {\n                setShowInputCaptcha(result);\n            })\n            .catch(() => {\n                setLoading(false);\n            });\n    };\n\n    const initialAccountValue = () => {\n        try {\n            if (account?.includes('@')) {\n                return '';\n            } else if (account?.length > 0) {\n                const phoneNumber = parsePhoneNumberWithError(account);\n                return phoneNumber.nationalNumber;\n            }\n        } catch (error) {\n            console.log('initialAccountValue', error);\n        }\n        return '';\n    };\n\n    return (\n        <>\n            <style>{styles as unknown as string}</style>\n            <div className=\"login-style\">\n                {selectVisible && (\n                    <div className=\"select-country\" ref={clickRef}>\n                        {defaultCountriesData.map((item, index) => {\n                            return (\n                                <div\n                                    key={index}\n                                    className=\"country-item\"\n                                    onClick={() => {\n                                        setCountryData(item);\n                                        setSelectVisible(false);\n\n                                        setTimeout(() => {\n                                            const phoneValue = form.getFieldsValue().phone;\n                                            if (phoneValue) {\n                                                validateForm(phoneValue, item[1].toUpperCase(), false);\n                                            }\n                                        });\n                                    }}\n                                >\n                                    <div className=\"country-box\">\n                                        <div className=\"country-flag\">{getUnicodeFlagIcon(`${item[1]}`)}</div>\n                                        <span className=\"country-name\">{item[0]}</span>\n                                    </div>\n                                    <div className=\"country-code\">{'+' + item[2]}</div>\n                                </div>\n                            );\n                        })}\n                    </div>\n                )}\n                <Form\n                    name=\"login-form\"\n                    onFinish={(values) => getCaptcha(values.phone, undefined)}\n                    className=\"form-box\"\n                    requiredMark={false}\n                    form={form}\n                    labelCol={{\n                        style: { textAlign: 'left' },\n                    }}\n                >\n                    <div className=\"phone-box\">\n                        <div\n                            className=\"phone-select\"\n                            defaultValue={`+${countryData[2]}`}\n                            onClick={() => {\n                                if (!loading) {\n                                    setSelectVisible(true);\n                                }\n                            }}\n                        >\n                            {getUnicodeFlagIcon(`${countryData[1]}`)}\n                            <DownOutlined className=\"down-more\" />\n                        </div>\n                        <div className=\"country-code\">+{countryData[2]}</div>\n                        <Form.Item\n                            name=\"phone\"\n                            // label={t(\"login.enter_phone\")}\n                            label=\"\"\n                            className=\"form-item\"\n                            getValueFromEvent={(event) => {\n                                return event.target.value.replace(/\\D+/g, '');\n                            }}\n                            initialValue={initialAccountValue()}\n                        >\n                            <Input\n                                type=\"text\"\n                                className=\"phone-input\"\n                                placeholder={t('login.mobile_number') || undefined}\n                                ref={phoneInput}\n                                onChange={() => {\n                                    setErrorTip(false);\n                                    setNoInputTip(false);\n                                }}\n                                readOnly={loginWithAccount}\n                                onFocus={() => {\n                                    document.querySelector('.phone-box')?.setAttribute('data-focus', 'true');\n                                }}\n                                onBlur={() => {\n                                    document.querySelector('.phone-box')?.removeAttribute('data-focus');\n                                }}\n                            />\n                        </Form.Item>\n                    </div>\n\n                    <div className=\"error-tip\">{errorTip && t('login.phone_format_error')}</div>\n                    <div className=\"error-tip\">{noInputTip && t('login.input_phone_holder')}</div>\n\n                    <Form.Item className=\"form-item\">\n                        <Button\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            className=\"primary-antd-btn submit-btn\"\n                            loading={loading}\n                        >\n                            {t('login.get_captcha')}\n                        </Button>\n                    </Form.Item>\n                </Form>\n                {!loginWithAccount && supportAuthTypes.length > 0 && (\n                    <div className=\"login-or\">\n                        <div className=\"or-line\"></div>\n                        {t('login.or')}\n                        <div className=\"or-line\"></div>\n                    </div>\n                )}\n            </div>\n        </>\n    );\n}\n\nexport default PhoneLogin;\n", "import { AuthType } from '@particle-network/auth-core';\nimport React, { useMemo, useState } from 'react';\nimport apple from '../../../common/images/apple_icon.png';\nimport discord from '../../../common/images/discord_icon.png';\nimport email from '../../../common/images/email_icon.png';\nimport facebook from '../../../common/images/facebook_icon.png';\nimport github from '../../../common/images/github_icon.png';\nimport google from '../../../common/images/google_icon.png';\nimport jwt from '../../../common/images/jwt_icon.png';\nimport linkedin from '../../../common/images/linkedin_icon.png';\nimport microsoft from '../../../common/images/microsoft_icon.png';\nimport passkeys from '../../../common/images/passkeys_icon.png';\nimport phone from '../../../common/images/phone_icon.png';\nimport twitch from '../../../common/images/twitch_icon.png';\nimport twitter from '../../../common/images/twitter_icon.png';\nimport SVGIcon from '../../../components/icon/svg-icon';\n\ninterface Props {\n    supportAuthTypes: AuthType[];\n    preferredAuthType?: AuthType;\n    onPreferredAuthTypeChange?: (authType: AuthType) => void;\n    thirdpartyAuthLogin: (authType: AuthType) => void;\n}\nconst SocialLogin = (props: Props) => {\n    const { supportAuthTypes, preferredAuthType, onPreferredAuthTypeChange, thirdpartyAuthLogin } = props;\n\n    const [collapse, setCollapse] = useState(true);\n\n    const authLogin = (authType: AuthType) => {\n        thirdpartyAuthLogin(authType);\n    };\n\n    const toggleEmailOrPhone = (authType: AuthType) => {\n        onPreferredAuthTypeChange?.(authType);\n    };\n\n    const imgs = {\n        email,\n        phone,\n        facebook,\n        google,\n        apple,\n        twitter,\n        discord,\n        github,\n        twitch,\n        microsoft,\n        linkedin,\n        jwt,\n        passkeys,\n    };\n\n    const items = useMemo(() => {\n        const authTypes = supportAuthTypes as AuthType[];\n        const hasEmailAndPhone = authTypes.includes(AuthType.email) && authTypes.includes(AuthType.phone);\n        const items: React.ReactNode[] = [];\n        if (hasEmailAndPhone) {\n            if (preferredAuthType === AuthType.phone) {\n                items.push(\n                    <img key=\"email-login\" src={email} alt=\"\" onClick={() => toggleEmailOrPhone(AuthType.email)} />\n                );\n            } else {\n                items.push(\n                    <img key=\"phone-login\" src={phone} alt=\"\" onClick={() => toggleEmailOrPhone(AuthType.phone)} />\n                );\n            }\n        }\n        const displayAuthTypes = authTypes.filter(\n            (authType) => authType !== AuthType.email && authType !== AuthType.phone\n        );\n\n        items.push(\n            ...displayAuthTypes.map((authType) => (\n                <img\n                    key={`${authType}-login`}\n                    src={imgs[authType]}\n                    alt=\"\"\n                    onClick={() => authLogin(authType as AuthType)}\n                />\n            ))\n        );\n\n        const collapseIcon = (\n            <div\n                key=\"collapse-login\"\n                className=\"collapse-login-icon\"\n                onClick={() => setCollapse(!collapse)}\n                data-is-collapse={collapse}\n            >\n                <SVGIcon className=\"collapse-icon\" name=\"collapse_icon\" />\n            </div>\n        );\n\n        if (items.length > 5) {\n            items.splice(4, 0, collapseIcon);\n        }\n\n        if (collapse) {\n            items.splice(5, items.length - 5);\n        }\n\n        return items;\n    }, [collapse, preferredAuthType, supportAuthTypes]);\n\n    return (\n        <div className=\"change-login-mode\" data-collapse={!!collapse}>\n            <div className=\"change-social\">{items}</div>\n        </div>\n    );\n};\n\nexport default SocialLogin;\n", "import { LoadingOutlined } from '@ant-design/icons';\nimport {\n    AuthType,\n    getConnectCaptcha,\n    isNullish,\n    requireNotNullish,\n    type CaptchaRequest,\n    type ConnectParam,\n    type PhoneCaptchaRequest,\n    type SocialAuthType,\n} from '@particle-network/auth-core';\nimport { Image } from 'antd';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport logoImg from '../../common/images/logo.png';\nimport PowerFooter from '../../components/power-footer';\nimport { useParticleAuth } from '../../context';\nimport useLogin from '../../context/hooks/useLogin';\nimport { type ConnectOptions } from '../../types/connectOptions';\nimport { EmailRegExp, isValidE164PhoneNumber } from '../../utils';\nimport CaptchaInput from './components/captcha-input';\nimport EmailLogin from './components/email-login';\nimport loginStyles from './components/login.less';\nimport PhoneLogin from './components/phone-login';\nimport SocialLogin from './components/social-login';\nimport styles from './index.less';\n\nfunction Login(props?: ConnectOptions) {\n    // @ts-ignore\n    const { email, phone, code, jwt, socialType, nonce, prompt, authorization, chain } = props || {};\n\n    const { modalOptions, setLoginAuthorization } = useParticleAuth();\n    const { loginHandler, socialAuthLogin } = useLogin();\n\n    const getDefaultLoginType = () => {\n        const indexPhone = modalOptions.authTypes?.indexOf(AuthType.phone) ?? -1;\n        const indexEmail = modalOptions.authTypes?.indexOf(AuthType.email) ?? -1;\n        if (socialType) {\n            return socialType;\n        } else if (\n            (!isNullish(phone) && (indexPhone >= 0 || !modalOptions.authTypes?.length)) ||\n            (!email &&\n                ((indexPhone >= 0 && indexEmail < 0) ||\n                    (indexPhone >= 0 && indexEmail >= 0 && indexPhone < indexEmail)))\n        ) {\n            return AuthType.phone;\n        } else {\n            return AuthType.email;\n        }\n    };\n\n    const [loginType, setLoginType] = useState<AuthType>(getDefaultLoginType()); // email or phone\n\n    const { t } = useTranslation();\n\n    const [account, setAccount] = useState<string | undefined>('');\n\n    const [showInputCaptcha, setShowInputCaptcha] = useState(false);\n\n    const [loginWithAccount, setLoginWithAccount] = useState(false);\n\n    const [supportAuthTypes, setSupportAuthTypes] = useState<AuthType[]>(modalOptions.authTypes || []);\n\n    const displayInputCaptcha = (visible: boolean) => {\n        setShowInputCaptcha(visible);\n    };\n\n    useEffect(() => {\n        document.documentElement.setAttribute('data-login-type', loginType || '');\n    }, [loginType]);\n\n    useEffect(() => {\n        if (!loginWithAccount) {\n            const allTypes = Object.values(AuthType).filter((authType) => authType !== AuthType.jwt);\n            if (!modalOptions.authTypes) {\n                setSupportAuthTypes(allTypes);\n            } else {\n                const types = modalOptions.authTypes.filter(\n                    (authType) => authType !== AuthType.jwt && allTypes.includes(authType)\n                );\n                if (socialType && !types.includes(socialType)) {\n                    types.push(socialType);\n                }\n                if (!types.includes(AuthType.email) && !types.includes(AuthType.phone) && types.length > 0) {\n                    types.unshift(AuthType.email);\n                }\n                if (types.length === 1 && (types[0] === AuthType.email || types[0] === AuthType.phone)) {\n                    //clear all\n                    types.length = 0;\n                }\n                setSupportAuthTypes(types);\n            }\n        } else {\n            setSupportAuthTypes([]);\n        }\n    }, [loginWithAccount, modalOptions.authTypes]);\n\n    useEffect(() => {\n        if (authorization) {\n            setLoginAuthorization({ authorization, chain: requireNotNullish(chain) });\n        } else {\n            setLoginAuthorization(undefined);\n        }\n\n        loginDirectly();\n    }, []);\n\n    //\u53D1\u9001\u9A8C\u8BC1\u7801\n    const sendCaptcha = async (data: CaptchaRequest): Promise<boolean> => {\n        setAccount('email' in data && data.email ? data.email : (data as PhoneCaptchaRequest).phone);\n        const result = await getConnectCaptcha(data).then((result) => {\n            console.log(`request captcha success: ${result}`);\n            return result;\n        });\n        return result;\n    };\n\n    const isValidCode = () => {\n        return code && code.match(/^\\d{6}$/);\n    };\n\n    // login directly\n    const loginDirectly = () => {\n        if (email && loginType === AuthType.email) {\n            if (EmailRegExp.test(email)) {\n                if (isValidCode()) {\n                    loginImpl({ email, code, chain });\n                } else {\n                    setLoginWithAccount(true);\n                    setAccount(email);\n                }\n            }\n        } else if (phone && loginType === AuthType.phone) {\n            const e164Phone = isValidE164PhoneNumber(phone);\n            if (e164Phone) {\n                if (isValidCode()) {\n                    loginImpl({ phone: e164Phone, code, chain });\n                } else {\n                    setLoginWithAccount(true);\n                    setAccount(e164Phone);\n                }\n            }\n        } else if (jwt) {\n            setLoginType(AuthType.jwt);\n            setLoginWithAccount(true);\n            loginImpl({ jwt, chain });\n        } else if (socialType) {\n            // social login\n            if (code && nonce) {\n                loginImpl({ socialType, code, nonce, chain });\n            } else {\n                // redirect to get code.\n                thirdpartyAuthLogin(socialType);\n            }\n        }\n    };\n\n    const loginImpl = useCallback(\n        (data: ConnectParam) => {\n            loginHandler(data);\n        },\n        [loginHandler]\n    );\n\n    const thirdpartyAuthLogin = (authType: AuthType) => {\n        setLoginType(authType);\n        socialAuthLogin({\n            socialType: authType as SocialAuthType,\n            prompt,\n            authorization,\n            chain,\n        });\n    };\n\n    const loginContent = () => {\n        if (showInputCaptcha) {\n            return (\n                <CaptchaInput\n                    sendCaptcha={sendCaptcha}\n                    setShowInputCaptcha={displayInputCaptcha}\n                    account={account}\n                    loginWithAccount={loginWithAccount}\n                    chain={chain}\n                />\n            );\n        } else if (loginType === AuthType.email && !isValidCode()) {\n            return (\n                <EmailLogin\n                    sendCaptcha={sendCaptcha}\n                    setShowInputCaptcha={displayInputCaptcha}\n                    setLoginType={changeLoginType}\n                    account={email || account}\n                    supportAuthTypes={supportAuthTypes}\n                    loginWithAccount={!!email || loginWithAccount}\n                />\n            );\n        } else if (loginType === AuthType.phone && !isValidCode()) {\n            return (\n                <PhoneLogin\n                    sendCaptcha={sendCaptcha}\n                    setShowInputCaptcha={displayInputCaptcha}\n                    setLoginType={changeLoginType}\n                    account={phone || account}\n                    supportAuthTypes={supportAuthTypes}\n                    loginWithAccount={!!phone || loginWithAccount}\n                />\n            );\n        }\n    };\n\n    const changeLoginType = (type: AuthType) => {\n        setLoginType(type);\n    };\n\n    const authTypeDisplayed = (type: AuthType): string => {\n        if (type === AuthType.jwt) {\n            return 'JWT';\n        } else {\n            return type.titleCase();\n        }\n    };\n\n    const loggingHint = (loginType: AuthType): string => {\n        if (loginType === AuthType.jwt) {\n            return t('login.create_wallet');\n        } else {\n            return t('login.social_login').format(authTypeDisplayed(loginType));\n        }\n    };\n\n    const projectLogo: string = useMemo(() => {\n        let img = modalOptions.customStyle?.logo;\n        if (!img) {\n            img = logoImg;\n        }\n        return (img || '') as string;\n    }, [modalOptions.customStyle?.logo]);\n\n    return (\n        <div className=\"login-container-box\">\n            <style>{loginStyles as unknown as string}</style>\n            <style>{styles as unknown as string}</style>\n            <div className=\"wrap\">\n                <div className=\"login-logo\">\n                    <Image\n                        className=\"product-logo\"\n                        preview={false}\n                        height={64}\n                        src={projectLogo}\n                        key={projectLogo}\n                        placeholder={\n                            <div className=\"placeholder-wrap\">\n                                <LoadingOutlined style={{ fontSize: 24 }} spin />\n                            </div>\n                        }\n                        fallback={logoImg}\n                        onError={(e) => {\n                            e.currentTarget.src = logoImg;\n                        }}\n                    />\n                </div>\n                <div className=\"login-header0\">\n                    {modalOptions.customStyle?.projectName ?? t('common.particle_auth')}\n                </div>\n\n                {showInputCaptcha ? (\n                    <div className=\"login-des\">{account}</div>\n                ) : (\n                    <div className=\"login-des\">\n                        {(loginType === AuthType.email || loginType === AuthType.phone) && !isValidCode() ? (\n                            modalOptions.customStyle?.subtitle ?? t('login.to_continue').format('App')\n                        ) : (\n                            <div className=\"third-party-des\">{loggingHint(loginType)}</div>\n                        )}\n                    </div>\n                )}\n\n                {loginContent()}\n\n                {!showInputCaptcha &&\n                    !loginWithAccount &&\n                    (loginType === AuthType.email || loginType === AuthType.phone) &&\n                    !isValidCode() && (\n                        <SocialLogin\n                            supportAuthTypes={supportAuthTypes}\n                            preferredAuthType={loginType}\n                            onPreferredAuthTypeChange={setLoginType}\n                            thirdpartyAuthLogin={thirdpartyAuthLogin}\n                        />\n                    )}\n            </div>\n            <PowerFooter className=\"footer-box-v2\" />\n        </div>\n    );\n}\n\nexport default Login;\n", "import type { ReactNode } from 'react';\nimport React from 'react';\nimport { useCustomNavigate, useCustomRouter } from '../../context';\nimport SVGIcon from '../icon/svg-icon';\nimport styles from './index.less';\ninterface IProps {\n    children?: ReactNode;\n    leftContent?: ReactNode | string;\n    rightContent?: ReactNode | string;\n    displayBackBtn?: boolean;\n    onBack?: any;\n}\n\nconst Header = (props: IProps) => {\n    const { children, leftContent, rightContent, onBack } = props;\n    let { displayBackBtn = false } = props;\n\n    const navigate = useCustomNavigate();\n    const { customRouter } = useCustomRouter();\n    if (onBack) {\n        displayBackBtn = true;\n    }\n\n    if (leftContent || (customRouter?.history?.length ?? 0) <= 1) {\n        displayBackBtn = false;\n    }\n\n    return (\n        <div className=\"width-100\">\n            <style>{styles as unknown as string}</style>\n            <div className=\"p-auth-header\">\n                <div className=\"left\">\n                    <>\n                        {displayBackBtn && (\n                            <SVGIcon\n                                className=\"header-back-btn\"\n                                name=\"circle_back\"\n                                onClick={() => {\n                                    if (onBack) {\n                                        onBack();\n                                    } else {\n                                        navigate(-1);\n                                    }\n                                }}\n                            />\n                        )}\n                        {leftContent}\n                    </>\n                </div>\n                <div className=\"middle\">{children}</div>\n                <div className=\"right\">{rightContent}</div>\n            </div>\n        </div>\n    );\n};\n\nexport default Header;\n", "import Icon from '@ant-design/icons';\nimport React from 'react';\nimport styles from './index.less';\n\nconst CircleClose = ({ className = '', ...others }) => {\n    const svg = require('../../common/icon/circle_close.svg').default;\n    return (\n        <>\n            <style>{styles as unknown as string}</style>\n            <Icon\n                className={className ? `circle-close-icon ${className}` : 'circle-close-icon'}\n                //@ts-ignore\n                component={svg}\n                {...others}\n            />\n        </>\n    );\n};\n\nexport default CircleClose;\n", "import { Button, Modal } from 'antd';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport CircleClose from '../../../components/icon/circle-close';\nimport { useAuthCoreModal } from '../../../context';\nimport styles from './index.less';\n\ninterface Prop {\n    visible: boolean;\n    setVisible: (visible: boolean) => void;\n    onBind: () => void;\n}\n\nconst BindSecurityAccountPrompt = (prop: Prop) => {\n    const { visible, setVisible, onBind } = prop;\n    const { t } = useTranslation();\n    const { authCoreModal } = useAuthCoreModal();\n    const onClose = () => {\n        setVisible(false);\n    };\n\n    return (\n        <>\n            <style>{styles as unknown as string}</style>\n            <Modal\n                className=\"bind-security-account-prompt\"\n                open={visible}\n                maskClosable={false}\n                onCancel={onClose}\n                closeIcon={<CircleClose />}\n                centered\n                getContainer={() => {\n                    return authCoreModal.rootBody as HTMLElement;\n                }}\n            >\n                <div className=\"bind-hint-content\">{t('account.security_account_bind_hint')}</div>\n                <div className=\"prompt-bottom-btn-box\">\n                    <Button className=\"primary-antd-btn secondary particle-cancel-button\" onClick={onClose}>\n                        {t('common.cancel')}\n                    </Button>\n                    <Button\n                        className=\"primary-antd-btn\"\n                        onClick={() => {\n                            setVisible(false);\n                            onBind();\n                        }}\n                    >\n                        {t('common.bind')}\n                    </Button>\n                </div>\n            </Modal>\n        </>\n    );\n};\n\nexport default BindSecurityAccountPrompt;\n", "import {\n    AuthType,\n    hasMasterPassword as checkHasMasterPassword,\n    deletePaymentPassword,\n    getLatestAuthType,\n    syncUserInfo,\n} from '@particle-network/auth-core';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport apple from '../../../common/images/apple_icon.png';\nimport discord from '../../../common/images/discord_icon.png';\nimport email from '../../../common/images/email_icon.png';\nimport facebook from '../../../common/images/facebook_icon.png';\nimport github from '../../../common/images/github_icon.png';\nimport google from '../../../common/images/google_icon.png';\nimport jwt from '../../../common/images/jwt_icon.png';\nimport linkedin from '../../../common/images/linkedin_icon.png';\nimport microsoft from '../../../common/images/microsoft_icon.png';\nimport phone from '../../../common/images/phone_icon.png';\nimport twitch from '../../../common/images/twitch_icon.png';\nimport twitter from '../../../common/images/twitter_icon.png';\nimport Header from '../../../components/header';\nimport SVGIcon from '../../../components/icon/svg-icon';\nimport PowerFooter from '../../../components/power-footer';\nimport { useCustomNavigate, useModalOptions, useParticleAuth } from '../../../context';\nimport { useUserInfo } from '../../../context/hooks';\nimport useMessage from '../../../context/hooks/useMessage';\nimport { displayEmail, displayPhone, shortString } from '../../../utils/common-utils';\nimport { PageType } from '../accountVerify/config';\nimport BindSecurityAccountPrompt from '../bindSecurityAccountPrompt';\nimport styles from './index.less';\n\nconst AccountAndSecurity = () => {\n    const { t } = useTranslation();\n    const navigate = useCustomNavigate();\n    const [promptSecurityAccount, setPromptSecurityAccount] = useState(false);\n    const { setPaymentVerify, showSelectSecurityAccount, setPaymentPassword } = useParticleAuth();\n    const { userInfo } = useUserInfo();\n    const { modalOptions } = useModalOptions();\n    const message = useMessage();\n\n    const hasMasterPassword = useMemo(() => {\n        return checkHasMasterPassword();\n    }, [userInfo]);\n\n    const formatId = (id?: string) => {\n        const provider = userInfo?.thirdparty_user_info?.provider;\n        if (provider === AuthType.jwt) {\n            return id?.replace(`${modalOptions.projectId}:`, '');\n        }\n        return id;\n    };\n\n    const icons = {\n        email,\n        phone,\n        facebook,\n        google,\n        apple,\n        twitter,\n        twitterv1: twitter,\n        discord,\n        github,\n        twitch,\n        microsoft,\n        linkedin,\n        jwt,\n    };\n\n    // \u5F53\u524D\u767B\u5F55\u8D26\u53F7\u7C7B\u578B\n    const currentAuthType = useMemo(() => {\n        let authType = getLatestAuthType();\n        if (!authType) {\n            authType = (userInfo?.thirdparty_user_info?.provider as AuthType) || 'email';\n        }\n        if ((authType as string) === 'twitterv1') {\n            authType = AuthType.twitter;\n        }\n        return authType as AuthType;\n    }, [userInfo]);\n\n    // \u5F53\u524D\u767B\u5F55\u8D26\u53F7\n    const currentAccount = useMemo(() => {\n        let result = '';\n        if (currentAuthType && userInfo) {\n            result =\n                // @ts-ignore\n                userInfo[`${currentAuthType}`] ||\n                // @ts-ignore\n                userInfo[`${currentAuthType}_email`] ||\n                // @ts-ignore\n                shortString(formatId(userInfo[`${currentAuthType}_id`]));\n        }\n        return (\n            result ||\n            userInfo?.email ||\n            userInfo?.phone ||\n            userInfo?.thirdparty_user_info?.user_info?.email ||\n            shortString(formatId(userInfo?.thirdparty_user_info?.user_info?.id || ''))\n        );\n    }, [currentAuthType, userInfo]);\n\n    const setSecurityAccount = (type: 'phone' | 'email') => {\n        if (\n            (userInfo?.security_account?.email && !userInfo?.security_account?.phone) ||\n            (!userInfo?.security_account?.email && userInfo?.security_account?.phone)\n        ) {\n            // \u8BBE\u7F6E\u5B89\u5168\u8D26\u53F7,\u9700\u5148\u9A8C\u8BC1\u53E6\u4E00\u4E2A\u5B89\u5168\u8D26\u53F7\n            navigate('/account/verify', {\n                state: {\n                    account: userInfo?.security_account?.email || userInfo.security_account?.phone,\n                    authType: type,\n                    redirectUrl: '/account/security',\n                    pageType: PageType.VerifySecurityAccount_SetSecurityAccount,\n                },\n            });\n        } else {\n            navigate('/account/bind', {\n                state: {\n                    accountType: type,\n                    redirectUrl: '/account/security',\n                },\n            });\n        }\n    };\n\n    const chooseVerifyType = () => {\n        if (userInfo?.security_account?.email && userInfo?.security_account?.phone) {\n            showSelectSecurityAccount(true);\n        } else {\n            navigate('/account/set-password', {\n                state: {\n                    account: userInfo?.security_account?.email || userInfo?.security_account?.phone,\n                },\n            });\n        }\n    };\n\n    /**\n     * \u5173\u95ED\u652F\u4ED8\u5BC6\u7801\n     */\n    const closePaymentPassword = () => {\n        setPaymentVerify({\n            visible: true,\n            type: 'close',\n            onVerifyCompleted: (password) => {\n                deletePaymentPassword(password)\n                    .then((result) => {\n                        message.success(t('account.close_success'));\n                        syncUserInfo();\n                    })\n                    .catch((error) => {\n                        error.message && message.error(error.message);\n                        console.log('closePaymentPassword Error', error);\n                    });\n            },\n        });\n    };\n\n    const isCanBack = useMemo(() => {\n        return true;\n    }, []);\n\n    const goBack = () => {\n        navigate(-1);\n    };\n\n    const changeMasterPassword = () => {\n        navigate('/account/master-password/change');\n    };\n\n    const setMasterPassword = () => {\n        navigate('/account/master-password');\n    };\n\n    const aboutMasterPassword = () => {\n        navigate('/account/master-password/description');\n    };\n\n    const hasSecurityAccount = useMemo(\n        () => userInfo?.security_account?.email || userInfo?.security_account?.phone,\n        [userInfo?.security_account?.email, userInfo?.security_account?.phone]\n    );\n\n    useEffect(() => {\n        syncUserInfo().catch((e) => console.log('syncUserInfo', e));\n    }, []);\n\n    return (\n        <div className=\"account-and-security\">\n            <style>{styles as unknown as string}</style>\n            {isCanBack && <Header onBack={goBack}>{t('account.account_and_security')}</Header>}\n            {!isCanBack && <Header>{t('account.account_and_security')}</Header>}\n            <div className=\"scroll-content\">\n                <div className=\"category-title\">{t('account.account')}</div>\n                <div className=\"account-box\">\n                    <img className=\"account-avatar\" src={icons[currentAuthType]} />\n                    <div className=\"account\">{currentAccount}</div>\n                    <div\n                        className=\"more-account\"\n                        onClick={() => {\n                            if (hasSecurityAccount) {\n                                navigate('/login-account');\n                            } else {\n                                setPromptSecurityAccount(true);\n                            }\n                        }}\n                    >\n                        {t('account.more_login_account')}\n                    </div>\n                </div>\n\n                <div className=\"payment-security authorization-item\">\n                    <div\n                        className=\"label-item hover\"\n                        onClick={() => {\n                            navigate('/manageDevices/deviceList');\n                        }}\n                    >\n                        <div className=\"label-item-name\">{t('new.authorization')}</div>\n                        <SVGIcon className=\"arrow-right-icon\" name=\"arrow_right_icon\" />\n                    </div>\n                </div>\n\n                <div className=\"category-title\">{t('account.security')}</div>\n\n                {/* master password */}\n                <div className=\"master-password-item\">\n                    <div className=\"mp-header\">\n                        <div className=\"mp-title\">{t('account.master_password')}</div>\n                        <div className=\"mp-learn-more\" onClick={aboutMasterPassword}>\n                            {t('account.learn_more')}\n                        </div>\n                    </div>\n                    <div className=\"mp-content\">\n                        <div className=\"mp-desc\">{t('account.master_password_tip')}</div>\n                        {!hasMasterPassword && (\n                            <div className=\"mp-set\" onClick={setMasterPassword}>\n                                {t('account.set')}\n                            </div>\n                        )}\n                    </div>\n                    {hasMasterPassword && (\n                        <div className=\"label-item hover\" onClick={changeMasterPassword}>\n                            <div className=\"label-item-name\">{t('account.change_master_password')}</div>\n                            <SVGIcon className=\"arrow-right-icon\" name=\"arrow_right_icon\" />\n                        </div>\n                    )}\n                </div>\n\n                <div className=\"verification-security\">\n                    <h3>{t('account.verification_security')}</h3>\n                    <p>{t('account.verification_security_tip')}</p>\n\n                    <div className=\"label-item\">\n                        <div className=\"label-item-name\">{t('account.email')}</div>\n\n                        {displayEmail(userInfo?.security_account?.email || '') || (\n                            <div className=\"label-item-btn\" onClick={() => setSecurityAccount('email')}>\n                                {t('account.set')}\n                            </div>\n                        )}\n                    </div>\n                    <div className=\"label-item\">\n                        <div className=\"label-item-name\">{t('account.mobile')}</div>\n                        {displayPhone(userInfo?.security_account?.phone || '') || (\n                            <div className=\"label-item-btn\" onClick={() => setSecurityAccount('phone')}>\n                                {t('account.set')}\n                            </div>\n                        )}\n                    </div>\n                </div>\n\n                <div className=\"payment-security\">\n                    <h3>{t('account.payment_security')}</h3>\n                    <p>{t('account.payment_password_hint')}</p>\n\n                    {userInfo?.security_account?.has_set_payment_password ? (\n                        <>\n                            <div className=\"label-item hover\" onClick={() => navigate('/account/change-password')}>\n                                <div className=\"label-item-name\">{t('account.change_payment_password')}</div>\n                                <SVGIcon className=\"arrow-right-icon\" name=\"arrow_right_icon\" />\n                            </div>\n                            <div className=\"label-item hover\" onClick={chooseVerifyType}>\n                                <div className=\"label-item-name\">{t('account.forgot_payment_password')}</div>\n                                <SVGIcon className=\"arrow-right-icon\" name=\"arrow_right_icon\" />\n                            </div>\n                            <div className=\"label-item hover\" onClick={closePaymentPassword}>\n                                <div className=\"label-item-name\">{t('account.close_payment_password')}</div>\n                                <SVGIcon className=\"arrow-right-icon\" name=\"arrow_right_icon\" />\n                            </div>\n                        </>\n                    ) : (\n                        <div className=\"label-item\">\n                            <div className=\"label-item-name\">{t('account.payment_password')}</div>\n                            <div\n                                className=\"label-item-btn\"\n                                onClick={() => {\n                                    if (hasSecurityAccount) {\n                                        setPaymentPassword();\n                                    } else {\n                                        setPromptSecurityAccount(true);\n                                    }\n                                }}\n                            >\n                                {t('account.set')}\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n            <PowerFooter className=\"footer-box-v2\" />\n            <BindSecurityAccountPrompt\n                visible={promptSecurityAccount}\n                setVisible={setPromptSecurityAccount}\n                onBind={() => {\n                    navigate('/account/bind', {\n                        state: {\n                            accountType: userInfo?.email ? 'phone' : 'email',\n                            showSwitch: true,\n                            redirectUrl: '/account/security',\n                        },\n                    });\n                }}\n            />\n        </div>\n    );\n};\n\nexport default AccountAndSecurity;\n", "import { AuthType } from '@particle-network/auth-core';\nimport { useThrottleFn } from 'ahooks';\nimport { parsePhoneNumber } from 'libphonenumber-js/max';\nimport React, { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport useMessage from '../..//context/hooks/useMessage';\nimport Header from '../../components/header';\nimport SVGIcon from '../../components/icon/svg-icon';\nimport PowerFooter from '../../components/power-footer';\nimport { useCustomNavigate, useParticleAuth } from '../../context';\nimport { PageType } from '../account/accountVerify/config';\n\nimport email from '../../common/images/email_icon.png';\nimport facebook from '../../common/images/facebook_icon.png';\nimport google from '../../common/images/google_icon.png';\nimport phone from '../../common/images/phone_icon.png';\nimport twitter from '../../common/images/twitter_icon.png';\n\nimport styles from './index.less';\n\nexport const getAccountList = (params: any) => {\n    const { userInfo, t } = params;\n    const list = [\n        {\n            type: AuthType.phone,\n            icon: phone,\n            name: t('account.mobile'),\n            value: userInfo.phone,\n            id: undefined,\n            isOriginal: false,\n        },\n        {\n            type: AuthType.email,\n            icon: email,\n            name: t('account.email'),\n            value: userInfo.email,\n            id: undefined,\n            isOriginal: false,\n        },\n        {\n            type: AuthType.google,\n            icon: google,\n            name: t('login.google'),\n            value: userInfo.google_email,\n            id: userInfo.google_id,\n            isOriginal: false,\n        },\n        {\n            type: AuthType.facebook,\n            icon: facebook,\n            name: t('login.facebook'),\n            value: userInfo.facebook_email,\n            id: userInfo.facebook_id,\n            isOriginal: false,\n        },\n        {\n            type: AuthType.twitter,\n            icon: twitter,\n            name: t('login.twitter'),\n            value: userInfo.twitter_email,\n            id: userInfo.twitter_id,\n            isOriginal: false,\n        },\n    ];\n    // if (userInfo.email && isSDKSupportPassKeys()) {\n    //     list.push({\n    //         type: AuthType.passkeys,\n    //         icon: passkeys,\n    //         name: t('login.passkeys'),\n    //         value: undefined,\n    //         id: userInfo.passkeys_id ? userInfo.email : undefined,\n    //         isOriginal: false,\n    //     });\n    // }\n    return list;\n};\n\nexport const encryptValue = (value: string) => {\n    let result = value?.replace(' ', '');\n    if (!result) {\n        return result;\n    } else if (result?.includes?.('@')) {\n        // email\n        result = `${result.split('@')[0].substr(0, 3)}****@${result.split('@')[1]}`;\n    } else if (result?.includes?.('+')) {\n        // phone\n        const phoneNumber = parsePhoneNumber(result);\n        const nationalNumber = phoneNumber.nationalNumber.toString();\n        const countryCode = phoneNumber.countryCallingCode;\n        result = `+${countryCode} ${nationalNumber?.substr?.(0, 3)}****${nationalNumber?.substr?.(-4)}`;\n    } else if (result) {\n        result = `${result.substr(0, 3)}****${result.substr(-4)}`;\n    }\n    return result;\n};\n\nlet selectedAuthType: AuthType;\n\nconst LoginAccount = () => {\n    const { t } = useTranslation();\n    const navigate = useCustomNavigate();\n    const { userInfo, showSelectSecurityAccount } = useParticleAuth();\n    const message = useMessage();\n    const { run: toAccountVerify } = useThrottleFn(\n        (params) => {\n            navigate('/account/verify', {\n                state: {\n                    account: params.account, // \u9A8C\u8BC1\u5B89\u5168\u8D26\u53F7\n                    authType: selectedAuthType, // \u5217\u8868\u9009\u62E9\u7684 authType\n                    pageType: PageType.VerifySecurityAccount_BindLoginAccount,\n                },\n            });\n        },\n        { wait: 3000 }\n    );\n\n    const accountList = useMemo(() => {\n        return getAccountList({ userInfo, t });\n    }, [userInfo]);\n\n    const toLoginAccountBind = (item: any) => {\n        if (item.value || item.id) {\n            // \u76F4\u63A5\u8DF3\u8F6C\u5230LoginAccount\u9875\u9762\n            // if (item.type === AuthType.passkeys) {\n            //     navigate('/login-account/details', {\n            //         state: {\n            //             accountInfo: item,\n            //         },\n            //     });\n            // } else {\n            navigate('/login-account/bind', {\n                state: {\n                    authType: item.type,\n                },\n            });\n            // }\n        } else if (!userInfo?.security_account?.email && !userInfo?.security_account?.phone) {\n            // \u7ED1\u5B9A\u5B89\u5168\u8D26\u53F7\n            message.error('Please bind security account first.');\n        } else if (userInfo?.security_account?.email && userInfo?.security_account?.phone) {\n            // \u9009\u62E9\u5B89\u5168\u8D26\u53F7\n            showSelectSecurityAccount(true, {\n                authType: selectedAuthType, // \u5217\u8868\u9009\u62E9\u7684 authType\n                pageType: PageType.VerifySecurityAccount_BindLoginAccount,\n            });\n        } else {\n            // \u9A8C\u8BC1\u5B89\u5168\u8D26\u53F7\n            toAccountVerify({\n                account: userInfo?.security_account?.email || userInfo?.security_account?.phone,\n            });\n        }\n    };\n\n    return (\n        <div className=\"login-account-box\">\n            <style>{styles as unknown as string}</style>\n            <Header displayBackBtn={true}>{t('account.login_account')}</Header>\n            <div className=\"scroll-content\">\n                <div className=\"login-account-description\">{t('account.login_account_hint')}</div>\n                <div className=\"account-list\">\n                    {accountList?.map((item, index) => {\n                        return (\n                            <div\n                                className=\"login-account-item\"\n                                onClick={() => {\n                                    selectedAuthType = item.type;\n                                    toLoginAccountBind(item);\n                                }}\n                                key={index}\n                            >\n                                <img src={item.icon} />\n                                <div className=\"login-account-name\">{item.name}</div>\n                                <div\n                                    className=\"login-account-value\"\n                                    data-no-linked={item.value || item.id ? false : true}\n                                >\n                                    {encryptValue(item.value || item.id) || t('account.not_linked')}\n                                </div>\n                                <SVGIcon className=\"arrow-right-icon\" name=\"arrow_right_icon\" />\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n\n            <PowerFooter className=\"footer-box-v2\" />\n        </div>\n    );\n};\n\nexport default LoginAccount;\n", "import { getAuthorizationDApps } from '@particle-network/auth-core';\nimport { useRequest } from 'ahooks';\nimport { Skeleton } from 'antd';\nimport dayjs from 'dayjs';\nimport React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Header from '../../../components/header';\nimport SVGIcon from '../../../components/icon/svg-icon';\nimport PowerFooter from '../../../components/power-footer';\nimport { useCustomNavigate, useModalOptions } from '../../../context';\nimport { useCustomize } from '../../../context/hooks';\nimport styles from './index.less';\n\nconst DeviceList = () => {\n    const { t } = useTranslation();\n    const navigate = useCustomNavigate();\n    const { modalOptions } = useModalOptions();\n    const { language } = useCustomize();\n    const {\n        loading,\n        data: deviceList = [],\n        run: getAuthorizationsRequest,\n    } = useRequest(\n        () => {\n            return getAuthorizationDApps().then((list) => {\n                return list.map((item) => {\n                    if (item.updated_at) {\n                        // eslint-disable-next-line camelcase\n                        item.updated_at = dayjs(new Date(item.updated_at)).format('YYYY/MM/DD HH:mm');\n                    }\n                    if (modalOptions.projectId === item.project_app_uuid) {\n                        item.isCurrent = true;\n                    }\n                    if (item.login_channel) {\n                        // eslint-disable-next-line camelcase\n                        item.login_channel = item.login_channel.replace(/( |^)[a-z]/g, (L) => L.toUpperCase());\n                    }\n                    if (item?.location?.country_code) {\n                        try {\n                            // eslint-disable-next-line camelcase\n                            item.location.country_name = new Intl.DisplayNames([language || 'en'], {\n                                type: 'region',\n                            }).of(item?.location?.country_code);\n                        } catch (error) {\n                            console.log('Intl.DisplayNames', error);\n                        }\n                    }\n                    return item;\n                });\n            });\n        },\n        {\n            cacheKey: 'getAuthorizations',\n            manual: true,\n        }\n    );\n\n    useEffect(() => {\n        getAuthorizationsRequest();\n    }, []);\n\n    return (\n        <div className=\"device-list-container\">\n            <style>{styles as unknown as string}</style>\n            <Header displayBackBtn={true}>{t('new.authorization')}</Header>\n            <div className=\"scroll-wrapper\">\n                <div className=\"devices-description\">{t('new.authorization_tips')}</div>\n                {loading ? (\n                    <div className=\"device-list\">\n                        <Skeleton />\n                    </div>\n                ) : (\n                    <div className=\"device-list\">\n                        {deviceList?.map((item, index) => {\n                            return (\n                                <div\n                                    className=\"item\"\n                                    key={index}\n                                    onClick={() => {\n                                        navigate('/manageDevices/deviceDetails', {\n                                            state: {\n                                                loginDeviceInfo: item,\n                                            },\n                                        });\n                                    }}\n                                >\n                                    <div className=\"left\">\n                                        <div className=\"wrap\">\n                                            <div className=\"s-row device\">{item.project_app_name}</div>\n                                            <div className=\"s-row created_at\">{item.updated_at}</div>\n                                        </div>\n                                    </div>\n                                    <div className=\"right\">\n                                        {item.isCurrent && <div className=\"current-icon\">{t('new.current')}</div>}\n                                        <SVGIcon className=\"arrow-right-icon\" name=\"arrow_right_icon\" />\n                                    </div>\n                                </div>\n                            );\n                        })}\n                    </div>\n                )}\n            </div>\n            <PowerFooter className=\"footer-box-v2\" />\n        </div>\n    );\n};\n\nexport default DeviceList;\n", "import type { DeviceInfo } from '@particle-network/auth-core';\nimport { deleteAuthorizationDApp } from '@particle-network/auth-core';\nimport { Button, Modal } from 'antd';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Header from '../../../components/header';\nimport SVGIcon from '../../../components/icon/svg-icon';\nimport PowerFooter from '../../../components/power-footer';\nimport { useAuthCoreModal, useCustomNavigate } from '../../../context';\nimport useMessage from '../../../context/hooks/useMessage';\nimport styles from './index.less';\n\ninterface IProps {\n    loginDeviceInfo: DeviceInfo;\n}\n\nconst DeviceList = (props: IProps) => {\n    const { loginDeviceInfo } = props;\n    const { t } = useTranslation();\n    const navigate = useCustomNavigate();\n    const { authCoreModal } = useAuthCoreModal();\n    const [visibleModal, setVisibleModal] = useState(false);\n    const [deleteLoading, setDeleteLoading] = useState(false);\n    const openDeleteModal = () => {\n        setVisibleModal(true);\n    };\n    const message = useMessage();\n    const closeDeleteModal = () => {\n        setVisibleModal(false);\n    };\n\n    return (\n        <div className=\"device-details-wrapper\">\n            <style>{styles as unknown as string}</style>\n            <div className=\"device-details-container\">\n                <Header displayBackBtn={true}>{t('new.details')}</Header>\n                <div className=\"scroll-wrapper\">\n                    <div className=\"details-list\">\n                        <div className=\"item\">\n                            <div className=\"left\">{t('new.app')}</div>\n                            <div className=\"right\">{loginDeviceInfo.project_app_name || '-'}</div>\n                        </div>\n                        <div className=\"item\">\n                            <div className=\"left\">{t('new.device')}</div>\n                            <div className=\"right\">{loginDeviceInfo.device || '-'}</div>\n                        </div>\n                        <div className=\"item\">\n                            <div className=\"left\">{t('new.authorized_time')}</div>\n                            <div className=\"right\">{loginDeviceInfo.updated_at || '-'}</div>\n                        </div>\n                        <div className=\"item\">\n                            <div className=\"left\">{t('new.login_method')}</div>\n                            <div className=\"right\">\n                                {(loginDeviceInfo.login_channel || '-').replace('Twitterv1', 'Twitter')}\n                            </div>\n                        </div>\n                        <div className=\"item\">\n                            <div className=\"left\">{t('new.ip')}</div>\n                            <div className=\"right\">{loginDeviceInfo?.location?.ip || '-'}</div>\n                        </div>\n                        <div className=\"item\">\n                            <div className=\"left\">{t('new.country')}</div>\n                            <div className=\"right\">\n                                {loginDeviceInfo?.location?.country_name ||\n                                    loginDeviceInfo?.location?.country_code ||\n                                    '-'}\n                            </div>\n                        </div>\n                        <div className=\"item\">\n                            <div className=\"left\">{t('new.city')}</div>\n                            <div className=\"right\">{loginDeviceInfo?.location?.city || '-'}</div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"btns\">\n                    <Button\n                        className=\"still-confirm confirm-delete-btn\"\n                        disabled={loginDeviceInfo.isCurrent}\n                        onClick={() => {\n                            openDeleteModal();\n                        }}\n                    >\n                        {t('new.delete_access')}\n                    </Button>\n                </div>\n                <Modal\n                    className=\"delete-confirm-modal\"\n                    open={visibleModal}\n                    closable={false}\n                    footer={null}\n                    centered={true}\n                    getContainer={() => {\n                        return authCoreModal.rootBody as HTMLDivElement;\n                    }}\n                >\n                    <div className=\"content-wrap\">\n                        <div\n                            className=\"close-btn\"\n                            onClick={() => {\n                                closeDeleteModal();\n                            }}\n                        >\n                            <SVGIcon className=\"circle_close\" name=\"circle_close\" />\n                        </div>\n                        <div className=\"content-text\">\n                            {t('new.delete_access_to_n').format(\n                                loginDeviceInfo?.project_app_name,\n                                loginDeviceInfo?.device\n                            )}\n                        </div>\n                        <div className=\"btns\">\n                            <Button\n                                className=\"cancel-btn\"\n                                onClick={() => {\n                                    closeDeleteModal();\n                                }}\n                            >\n                                {t('common.cancel')}\n                            </Button>\n                            <Button\n                                className=\"still-confirm delete-btn\"\n                                loading={deleteLoading}\n                                onClick={() => {\n                                    setDeleteLoading(true);\n                                    setTimeout(() => {\n                                        deleteAuthorizationDApp(loginDeviceInfo?.project_app_uuid)\n                                            .finally(() => {\n                                                setDeleteLoading(false);\n                                            })\n                                            .then((res: boolean) => {\n                                                if (res) {\n                                                    closeDeleteModal();\n                                                    setTimeout(() => {\n                                                        navigate(-1);\n                                                    }, 500);\n                                                }\n                                            })\n                                            .catch((error: any) => {\n                                                message.error(error.message);\n                                                console.log('deleteAuthorization Error', error);\n                                            });\n                                    }, 500);\n                                }}\n                            >\n                                {t('new.delete')}\n                            </Button>\n                        </div>\n                    </div>\n                </Modal>\n\n                <PowerFooter className=\"footer-box-v2\" />\n            </div>\n        </div>\n    );\n};\n\nexport default DeviceList;\n", "import { getSmartAccountAddress, tronAddressFromHex, type ERC4337Options } from '@particle-network/auth-core';\nimport { chains } from '@particle-network/chains';\nimport { isTron } from '../utils/chain-utils';\n\ntype Options = {\n    chainId?: number;\n    erc4337?: ERC4337Options;\n};\n\nexport const getEVMPublicAddress = async ({ chainId, erc4337 }: Options): Promise<string> => {\n    const id = chainId || Number(window.particleAuth?.ethereum.chainId);\n    let address;\n    if (erc4337) {\n        address = await getSmartAccountAddress(erc4337);\n    } else {\n        if (typeof window !== 'undefined') {\n            address = window.particleAuth?.ethereum.selectedAddress;\n        }\n    }\n\n    if (isTron(chains.getEVMChainInfoById(id))) {\n        address = tronAddressFromHex(address);\n    }\n    return address || '';\n};\n", "import Icon from '@ant-design/icons';\nimport React from 'react';\nimport svg from '../../common/icon/copy.svg';\n\nconst IconCopy = ({ className = '', ...others }) => {\n    return (\n        <Icon\n            className={className}\n            //@ts-ignore\n            component={svg}\n            {...others}\n        />\n    );\n};\n\nexport default IconCopy;\n", "import { ApiError } from '@particle-network/auth-core';\nimport { Modal } from 'antd';\nimport { useAuthCoreModal } from '../../context';\nimport useMessage from './useMessage';\n\nexport function formatServerError(error: any): string | undefined {\n    if (error && error.error_code) {\n        let message = window?.particleI18n?.t?.(`error.server_${error.error_code}`);\n        if (message && message.startsWith('error.server_')) {\n            if (error?.extra && Array.isArray(error?.extra) && error?.extra.length) {\n                message = error?.extra[0];\n            } else {\n                message = error?.extra ?? error.message;\n            }\n            message = message.charAt(0).toUpperCase() + message.slice(1);\n            return message;\n        }\n        return message;\n    } else {\n        return error?.message;\n    }\n}\n\nexport const useError = () => {\n    const { authCoreModal } = useAuthCoreModal();\n\n    const message = useMessage();\n\n    /**\n     * error handler\n     * @param err\n     */\n    function errorHandle(err: any) {\n        console.log('errorHandle: ' + JSON.stringify(err));\n        const errorCode = err.error_code ?? err.code;\n        // \u5224\u65AD\u670D\u52A1\u5668\u54CD\u5E94\n        if (errorCode && typeof errorCode === 'number') {\n            if (\n                errorCode === ApiError.InvalidCode ||\n                errorCode === ApiError.ResendCode ||\n                errorCode === ApiError.SecurityAccountFrozen ||\n                errorCode === ApiError.WrongPaymentPassword\n            ) {\n                // Ignore error\n            } else {\n                const message = formatServerError(err);\n                if (message) {\n                    Modal.error({\n                        title: message,\n                        wrapClassName: 'auth-core-modal-error',\n                        getContainer: () => {\n                            return authCoreModal.rootBody as HTMLElement;\n                        },\n                    });\n                }\n            }\n        } else if (err.code === 'ECONNABORTED') {\n            if (err.message) {\n                message.error(err.message);\n            } else {\n                message.error('Network Error');\n            }\n        } else {\n            switch (err.status) {\n                case 401:\n                case 403:\n                case 404:\n                case 500:\n                    message.error('Http Error: ' + err.status);\n                    break;\n                default:\n                    if (err.message && typeof err.message === 'string') {\n                        message.error(err.message);\n                    } else {\n                        console.error('http error', err);\n                    }\n                    break;\n            }\n        }\n    }\n\n    return { errorHandle };\n};\n", "import { hasPaymentPassword, isNullish } from '@particle-network/auth-core';\nimport { useEffect, useState } from 'react';\nimport { useParticleAuth } from '..';\nimport { PromptSettingType } from '../../api/model/bundle';\nimport { PreferenceKey, load, save } from '../../repository';\n\nexport const usePaymentPassword = () => {\n    const [hasSetPaymentPassword, setHasSetPaymentPassword] = useState(hasPaymentPassword());\n\n    const { setPaymentPassword, userInfo, modalOptions, showAccountTipModal } = useParticleAuth();\n\n    useEffect(() => {\n        setHasSetPaymentPassword(Boolean(userInfo?.security_account?.has_set_payment_password));\n    }, [userInfo]);\n\n    const showSetPaymentPasswordOrConfirm = (confirm: () => void) => {\n        if (hasSetPaymentPassword) {\n            confirm();\n        } else {\n            if (\n                modalOptions.promptSettingConfig?.promptPaymentPasswordSettingWhenSign === PromptSettingType.every ||\n                modalOptions.promptSettingConfig?.promptPaymentPasswordSettingWhenSign ===\n                    PromptSettingType.everyAndNotSkip\n            ) {\n                showAccountTipModal({\n                    visible: true,\n                    confirm,\n                });\n            } else if (\n                (modalOptions.promptSettingConfig?.promptPaymentPasswordSettingWhenSign ||\n                    isNullish(modalOptions.promptSettingConfig?.promptPaymentPasswordSettingWhenSign)) &&\n                !load(PreferenceKey.PN_OPEN_SET_PAYMENT_PASSWORD)\n            ) {\n                save(PreferenceKey.PN_OPEN_SET_PAYMENT_PASSWORD, '1');\n                showAccountTipModal({\n                    visible: true,\n                    confirm,\n                });\n            } else {\n                confirm();\n            }\n        }\n    };\n\n    return {\n        hasSetPaymentPassword,\n        setPaymentPassword,\n        showSetPaymentPasswordOrConfirm,\n    };\n};\n", "import {\n    EvmRpcMethod,\n    SignTypedDataVersion,\n    type GasFee,\n    type PrefixedHexString,\n    type TotalAmount,\n} from '@particle-network/auth-core';\nimport { BigNumber } from 'bignumber.js';\nimport { fromWeiFormat } from './number-utils';\n\nexport const ethereumUtils = {\n    gasFee({\n        gasLimit,\n        baseFee,\n        maxFeePerGas,\n        maxPriorityFeePerGas,\n        gasPrice,\n    }: {\n        gasLimit: PrefixedHexString | number;\n        baseFee: PrefixedHexString | number;\n        maxFeePerGas?: PrefixedHexString | number;\n        maxPriorityFeePerGas?: PrefixedHexString | number;\n        gasPrice?: PrefixedHexString | number;\n    }): GasFee {\n        if (maxFeePerGas && maxPriorityFeePerGas && baseFee && gasLimit) {\n            //eip 1559\n            const fee = new BigNumber(maxPriorityFeePerGas)\n                .plus(new BigNumber(baseFee))\n                .multipliedBy(new BigNumber(gasLimit));\n\n            const maxFee = new BigNumber(maxFeePerGas)\n                .plus(new BigNumber(baseFee))\n                .multipliedBy(new BigNumber(gasLimit));\n            return {\n                fee: fromWeiFormat(fee.toFixed()),\n                maxFee: fromWeiFormat(maxFee.toFixed()),\n            };\n        } else if (gasPrice) {\n            const fee = new BigNumber(gasPrice).multipliedBy(new BigNumber(gasLimit));\n            return {\n                maxFee: fromWeiFormat(fee.toFixed()),\n            };\n        }\n        return {\n            maxFee: '',\n        };\n    },\n\n    totalAmount({\n        value,\n        gasLimit,\n        baseFee,\n        maxFeePerGas,\n        maxPriorityFeePerGas,\n        gasPrice,\n    }: {\n        value?: PrefixedHexString | number;\n        gasLimit: PrefixedHexString | number;\n        baseFee: PrefixedHexString | number;\n        maxFeePerGas?: PrefixedHexString | number;\n        maxPriorityFeePerGas?: PrefixedHexString | number;\n        gasPrice?: PrefixedHexString | number;\n    }): TotalAmount {\n        if (!value) {\n            value = '0x0';\n        }\n        if (maxFeePerGas && maxPriorityFeePerGas) {\n            //eip 1559\n            const fee = new BigNumber(maxPriorityFeePerGas)\n                .plus(new BigNumber(baseFee))\n                .multipliedBy(new BigNumber(gasLimit));\n\n            const maxFee = new BigNumber(maxFeePerGas)\n                .plus(new BigNumber(baseFee))\n                .multipliedBy(new BigNumber(gasLimit));\n            return {\n                amount: fromWeiFormat(new BigNumber(value).plus(fee).toString()),\n                maxAmount: fromWeiFormat(new BigNumber(value).plus(maxFee).toString()),\n            };\n        } else if (gasPrice) {\n            const fee = new BigNumber(gasPrice).multipliedBy(new BigNumber(gasLimit));\n            return {\n                maxAmount: fromWeiFormat(new BigNumber(value).plus(fee).toString()),\n            };\n        }\n        return {\n            maxAmount: '',\n        };\n    },\n\n    getSignTypedVersion(method: string): SignTypedDataVersion {\n        if (method === EvmRpcMethod.ethSignTypedData || method === EvmRpcMethod.ethSignTypedDataV1) {\n            return SignTypedDataVersion.V1;\n        } else if (method === EvmRpcMethod.ethSignTypedDataV3) {\n            return SignTypedDataVersion.V3;\n        } else {\n            return SignTypedDataVersion.V4;\n        }\n    },\n\n    isSignTypedDataUniq(method: string): boolean {\n        return method.includes('uniq');\n    },\n};\n", "import { intToHex } from '@ethereumjs/util';\nimport {\n    EvmEnhancedMethod,\n    EvmRpcMethod,\n    GasFeeMode,\n    type EVMTransaction,\n    type GasFee,\n    type GasFeeResult,\n    type TokenPrice,\n    type TotalAmount,\n    type TransactionData,\n    type TxData,\n} from '@particle-network/auth-core';\nimport { Ethereum, chains, type ChainInfo } from '@particle-network/chains';\nimport { useSetState } from 'ahooks';\nimport React, { createContext, useCallback, useContext, useEffect, useState } from 'react';\nimport { useModalOptions } from '../../context';\nimport { useEthereum } from '../../context/hooks';\nimport useMessage from '../../context/hooks/useMessage';\nimport { bnToHex } from '../../utils/common-utils';\nimport { ethereumUtils } from '../../utils/ethereumUtils';\nimport { toWei } from '../../utils/number-utils';\nimport { isEIP1559Type } from '../../utils/transaction-utils';\n\ninterface EVMState {\n    setTransaction: (tx: EVMTransaction) => void;\n    transactionData?: EVMTransaction;\n    updateTransaction: (tx: Partial<TransactionData>) => void;\n    gasFeeMode?: GasFeeMode;\n    setGasFeeMode: (mode: GasFeeMode) => void;\n    fetchGasAsync: (params: { addresses: string[]; from: string; to?: string; value?: string; data?: string }) => void;\n    gasFeeDisplay?: GasFee;\n    totalAmountDisplay?: TotalAmount;\n    tokenPrice?: TokenPrice[];\n    gasError?: { code: number; message: string };\n    gasFeeResult?: GasFeeResult;\n    latestGasLimit?: string;\n    currentChain: ChainInfo;\n    fetchPendingTransactions: (account: string) => Promise<any[]>;\n}\n\nconst defaultData: EVMState = {\n    setTransaction: () => {},\n    updateTransaction: () => {},\n    setGasFeeMode: () => {},\n    fetchGasAsync: () => {},\n    currentChain: Ethereum,\n    fetchPendingTransactions: () => Promise.resolve([]),\n};\n\nexport const EVMContext = createContext<EVMState>(defaultData);\n\nexport const EVMContextProvider = (props: { method: string; param: unknown; children: React.ReactNode }) => {\n    const { modalOptions } = useModalOptions();\n    const [evmTransaction, setEVMTransaction] = useSetState<EVMTransaction>({ from: '' });\n    const [latestGasLimit, setLatestGasLimit] = useState<string>();\n    const [tokenPrice, setTokenProce] = useState<TokenPrice[]>();\n    const [feeMode, setFeeMode] = useState<GasFeeMode>(GasFeeMode.custom);\n    const [gasError, setGasError] = useState<{ code: number; message: string }>();\n    const [gasFeeResult, setGasFeeResult] = useState<GasFeeResult>();\n    const [gasFeeDisplay, setGasFeeDisplay] = useState<GasFee>();\n    const [totalAmountDisplay, setTotalAmountDisplay] = useState<TotalAmount>();\n    const message = useMessage();\n    const { chainInfo } = useEthereum();\n\n    const getTxChain = () => {\n        if (props.method === EvmRpcMethod.ethSendTransaction && (props.param as TxData).chainId) {\n            const chainId = (props.param as TxData).chainId;\n            const chain = chains.getEVMChainInfoById(Number(chainId));\n            return chain ?? chainInfo;\n        } else {\n            return chainInfo;\n        }\n    };\n    //\u4EA4\u6613\u8FC7\u7A0B\u4E2D\u5982\u679C\u5207\u6362\u4E86\u7F51\u7EDC\uFF0C\u4E0D\u5F71\u54CD\u5F53\u524D\u4EA4\u6613\n    const [currentChain, setCurrentChain] = useState<ChainInfo>(getTxChain());\n\n    const updateTransaction = (data: Partial<TransactionData>) => {\n        if (evmTransaction) {\n            if (data.maxFeePerGas) {\n                setEVMTransaction({ maxFeePerGas: data.maxFeePerGas });\n            }\n\n            if (data.maxPriorityFeePerGas) {\n                setEVMTransaction({ maxPriorityFeePerGas: data.maxPriorityFeePerGas });\n            }\n\n            if (data.gasLimit) {\n                setEVMTransaction({ gasLimit: data.gasLimit });\n            }\n\n            if (data.gasPrice) {\n                setEVMTransaction({ gasPrice: data.gasPrice });\n            }\n\n            if (data.data) {\n                setEVMTransaction({ data: data.data });\n            }\n        }\n    };\n\n    useEffect(() => {\n        if (evmTransaction && gasFeeResult) {\n            const params = {\n                gasLimit: evmTransaction.gasLimit || '0x0',\n                baseFee: bnToHex(toWei(gasFeeResult.baseFee, 'gwei')),\n                maxFeePerGas: evmTransaction.maxFeePerGas,\n                maxPriorityFeePerGas: evmTransaction.maxPriorityFeePerGas,\n                gasPrice: evmTransaction.gasPrice,\n            };\n            const gasFeeDisplay = ethereumUtils.gasFee(params);\n            setGasFeeDisplay(gasFeeDisplay);\n\n            const totalAmountDisplay = ethereumUtils.totalAmount({\n                value: evmTransaction.value,\n                gasLimit: evmTransaction.gasLimit || '0x0',\n                baseFee: bnToHex(toWei(gasFeeResult.baseFee, 'gwei')),\n                maxFeePerGas: evmTransaction.maxFeePerGas,\n                maxPriorityFeePerGas: evmTransaction.maxPriorityFeePerGas,\n                gasPrice: evmTransaction.gasPrice,\n            });\n            setTotalAmountDisplay(totalAmountDisplay);\n        }\n    }, [evmTransaction, gasFeeResult]);\n\n    const setTransaction = (transaction: EVMTransaction) => {\n        setEVMTransaction(transaction);\n        if (transaction.gasLevel) {\n            setFeeMode(transaction.gasLevel as GasFeeMode);\n            console.log('update gas fee mode', transaction.gasLevel);\n        } else {\n            setFeeMode(GasFeeMode.custom);\n            console.log('update gas fee mode (default)', GasFeeMode.custom);\n        }\n    };\n\n    const setGasFeeMode = (gasFeeMode: GasFeeMode) => {\n        setFeeMode(gasFeeMode);\n        console.log('update gas fee mode (setGasFeeMode)', gasFeeMode);\n        if (evmTransaction && gasFeeResult && gasFeeMode !== GasFeeMode.custom) {\n            if (isEIP1559Type(evmTransaction.type)) {\n                setEVMTransaction({\n                    maxFeePerGas: bnToHex(toWei(gasFeeResult[gasFeeMode].maxFeePerGas, 'gwei')),\n                    maxPriorityFeePerGas: bnToHex(toWei(gasFeeResult[gasFeeMode].maxPriorityFeePerGas, 'gwei')),\n                });\n            } else {\n                setEVMTransaction({\n                    gasPrice: bnToHex(toWei(gasFeeResult[gasFeeMode].maxFeePerGas, 'gwei')),\n                });\n            }\n        }\n    };\n\n    const fetchGasAsync = (params: {\n        addresses: string[];\n        from: string;\n        to?: string;\n        value?: string;\n        data?: string;\n    }) => {\n        fetchGas(params)\n            .then(({ gasFee, prices, gasLimit }) => {\n                setGasFeeResult(gasFee);\n                setTokenProce(prices);\n                let gasLimitValue: string;\n                if (typeof gasLimit === 'string') {\n                    gasLimitValue = gasLimit;\n                    setLatestGasLimit(gasLimit);\n                    setGasError(undefined);\n                } else {\n                    if (!latestGasLimit) {\n                        gasLimitValue = intToHex(50000);\n                        setLatestGasLimit(gasLimitValue);\n                        setGasError({\n                            message: gasLimit.message,\n                            code: -32000,\n                        });\n                    } else {\n                        gasLimitValue = latestGasLimit;\n                    }\n                }\n\n                if (evmTransaction) {\n                    if (isEIP1559Type(evmTransaction.type)) {\n                        //eip 1559\n                        if (feeMode && feeMode !== GasFeeMode.custom) {\n                            evmTransaction.maxFeePerGas = bnToHex(toWei(gasFee[feeMode].maxFeePerGas, 'gwei'));\n                            evmTransaction.maxPriorityFeePerGas = bnToHex(\n                                toWei(gasFee[feeMode].maxPriorityFeePerGas, 'gwei')\n                            );\n                        } else if (!evmTransaction.maxFeePerGas || !evmTransaction.maxPriorityFeePerGas) {\n                            evmTransaction.maxFeePerGas = bnToHex(toWei(gasFee.medium.maxFeePerGas, 'gwei'));\n                            evmTransaction.maxPriorityFeePerGas = bnToHex(\n                                toWei(gasFee.medium.maxPriorityFeePerGas, 'gwei')\n                            );\n                            if (!evmTransaction.gasLimit) {\n                                setFeeMode(GasFeeMode.medium);\n                                console.log('update gas fee mode (fulfilled)', GasFeeMode.medium);\n                            }\n                        }\n                    } else {\n                        if (feeMode && feeMode !== GasFeeMode.custom) {\n                            evmTransaction.gasPrice = bnToHex(toWei(gasFee[feeMode].maxFeePerGas, 'gwei'));\n                        } else if (!evmTransaction.gasPrice) {\n                            evmTransaction.gasPrice = bnToHex(toWei(gasFee.medium.maxFeePerGas, 'gwei'));\n                            if (!evmTransaction.gasLimit) {\n                                setFeeMode(GasFeeMode.medium);\n                                console.log('update gas fee mode (fulfilled)', GasFeeMode.medium);\n                            }\n                        }\n                    }\n\n                    if (\n                        !evmTransaction.gasLimit ||\n                        feeMode !== GasFeeMode.custom ||\n                        Number(evmTransaction.gasLimit) < Number(gasLimitValue)\n                    ) {\n                        evmTransaction.gasLimit = gasLimitValue;\n                        console.log('update gasLimit(state.value):', gasLimitValue);\n                    }\n                    setEVMTransaction(evmTransaction);\n                }\n            })\n            .catch((error) => {\n                if (error?.message) {\n                    message.error(error?.message.replace('code:-32000,', ''));\n                }\n            });\n    };\n\n    const fetchSuggestedGasFee = useCallback(async (): Promise<GasFeeResult> => {\n        const result = await window.particleAuth?.ethereum.request({\n            chainId: currentChain.id,\n            method: EvmEnhancedMethod.suggestedGasFees,\n        });\n        return result;\n    }, [currentChain]);\n\n    const fetchPendingTransactions = useCallback(\n        async (account: string): Promise<any[]> => {\n            const result = await window.particleAuth?.ethereum.request({\n                chainId: currentChain.id,\n                method: EvmEnhancedMethod.getPendingTransactionsByAddress,\n                params: [account],\n            });\n            return result;\n        },\n        [currentChain]\n    );\n\n    const fetchPrice = useCallback(\n        async (addresses: string[]): Promise<TokenPrice[]> => {\n            const result = await window.particleAuth?.ethereum.request({\n                chainId: currentChain.id,\n                method: EvmEnhancedMethod.getPrice,\n                params: [addresses, [modalOptions.fiatCoin?.toLowerCase() || 'usd']],\n            });\n            return result;\n        },\n        [modalOptions.fiatCoin, currentChain]\n    );\n\n    const fetchEstimateGas = useCallback(\n        async (param: { from: string; to?: string; value?: string; data?: string }): Promise<string | Error> => {\n            if (!param.to || param.to.length === 0) {\n                delete param.to;\n            }\n            try {\n                const result = await window.particleAuth?.ethereum.request({\n                    chainId: currentChain.id,\n                    method: 'eth_estimateGas',\n                    params: [param],\n                });\n                return result;\n            } catch (error: unknown) {\n                return error as Error;\n            }\n        },\n        [currentChain]\n    );\n\n    const fetchGas = useCallback(\n        async ({\n            addresses,\n            from,\n            to,\n            value,\n            data,\n        }: {\n            addresses: string[];\n            from: string;\n            to?: string;\n            value?: string;\n            data?: string;\n        }) => {\n            try {\n                const result = await Promise.all([\n                    fetchSuggestedGasFee(),\n                    fetchPrice(addresses),\n                    fetchEstimateGas({\n                        from,\n                        to,\n                        value,\n                        data,\n                    }),\n                ]);\n                // The value we return becomes the `fulfilled` action payload\n                return {\n                    gasFee: result[0],\n                    prices: result[1],\n                    gasLimit: result[2],\n                };\n            } catch (error: any) {\n                if (error.code && error.message) {\n                    return Promise.reject({\n                        message: 'code:' + error.code + ', ' + error.message.toString(),\n                    });\n                } else {\n                    return Promise.reject(error);\n                }\n            }\n        },\n        [fetchSuggestedGasFee, fetchPrice, fetchEstimateGas]\n    );\n\n    return (\n        <EVMContext.Provider\n            value={{\n                setTransaction,\n                updateTransaction,\n                setGasFeeMode,\n                fetchGasAsync,\n                fetchPendingTransactions,\n                transactionData: evmTransaction,\n                gasFeeDisplay,\n                totalAmountDisplay,\n                tokenPrice,\n                gasError,\n                gasFeeMode: feeMode,\n                gasFeeResult,\n                latestGasLimit,\n                currentChain,\n            }}\n        >\n            {props.children}\n        </EVMContext.Provider>\n    );\n};\n\nexport const useEVMTransaction = () => useContext(EVMContext);\n", "import { Button, Modal } from 'antd';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useAuthCoreModal } from '..';\nimport { useEVMTransaction } from '../../pages/sign/evmContextProvider';\nimport { useAuthCore } from './useAuthCore';\nimport { useEthereum } from './useEthereum';\n\nconst usePending = () => {\n    const { t } = useTranslation();\n    const { transactionData, fetchPendingTransactions } = useEVMTransaction();\n\n    const { address } = useEthereum();\n    const { openWallet } = useAuthCore();\n    const { authCoreModal } = useAuthCoreModal();\n\n    const pendingModalRef = React.useRef<any>();\n\n    const { authCoreModalClose } = useAuthCoreModal();\n\n    const checkPending = async (approveSign: any, pendingConfirm: boolean) => {\n        let pendingTransactions = [];\n\n        if (\n            transactionData &&\n            transactionData.action !== 'cancel' &&\n            transactionData.action !== 'speedup' &&\n            !pendingConfirm\n        ) {\n            pendingTransactions = await fetchPendingTransactions(address as string);\n        }\n\n        if (\n            transactionData &&\n            transactionData.action !== 'cancel' &&\n            transactionData.action !== 'speedup' &&\n            !pendingConfirm &&\n            (pendingTransactions?.length >= 3 ||\n                !!pendingTransactions.find((item: any) => {\n                    const now = new Date().getTime();\n                    const timestamp = new Date(item.timestamp * 1000).getTime();\n                    return now - timestamp > 30 * 60 * 1000;\n                }))\n        ) {\n            // \u5F53\u8BE5\u5730\u5740\u6709\u8D85\u8FC73\u7B14\u4EA4\u6613\u6B63\u5728Pending\u6216\u4E00\u7B14\u4EA4\u6613timestamp\u8D85\u8FC730\u5206\u949F\u672A\u5B8C\u6210\u65F6\uFF0C\u7528\u6237\u518D\u6B21\u786E\u8BA4\u4EA4\u6613\u65F6\u5C06\u5F39\u51FA\u6B64\u5F39\u7A97\n            console.log('pendingTransactions', pendingTransactions);\n\n            pendingModalRef.current = Modal.warning({\n                className: 'pending-warning-modal  auth-core-modal-warning',\n                content: (\n                    <div className=\"content-wrap\">\n                        <div className=\"content\">{t('new.transaction_pending_v2')}</div>\n                        <div className=\"footer-btns\">\n                            <Button\n                                className=\"cancel-btn continue-btn\"\n                                disabled={pendingTransactions?.length >= 10}\n                                type=\"default\"\n                                onClick={() => {\n                                    approveSign(true);\n                                    pendingModalRef.current.destroy();\n                                }}\n                            >\n                                {t('new.continue')}\n                            </Button>\n                            <Button\n                                className=\"process-now-btn\"\n                                type=\"primary\"\n                                onClick={() => {\n                                    // \u53D6\u6D88\u7B7E\u540D\uFF0C\u8DF3\u8F6C\u5230wallet\n                                    console.log('>>>', '\u53D6\u6D88\u7B7E\u540D\uFF0C\u8DF3\u8F6C\u5230wallet');\n\n                                    pendingModalRef.current.destroy();\n                                    authCoreModalClose();\n\n                                    setTimeout(() => {\n                                        openWallet({\n                                            pathName: '/tokenDetail.html',\n                                            query: {\n                                                tokenAddress: 'native',\n                                                pageMode: 'Simple',\n                                            },\n                                            topMenuType: 'close',\n                                        });\n                                    }, 30);\n                                }}\n                            >\n                                {t('new.process_now')}\n                            </Button>\n                        </div>\n                    </div>\n                ),\n                closable: true,\n                maskClosable: false,\n                getContainer: () => {\n                    return (authCoreModal.rootBody as HTMLElement).querySelector('.info-sign') as HTMLElement;\n                },\n            });\n            return true;\n        }\n\n        return false;\n    };\n\n    return {\n        checkPending,\n    };\n};\n\nexport default usePending;\n", "import { type SecurityDetection } from '@particle-network/auth-core';\nimport { Tree } from 'antd';\nimport type { DataNode } from 'antd/es/tree';\nimport React, { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport styles from './index.less';\n\ninterface Prop {\n    securityDetection: SecurityDetection[];\n    className?: string;\n    title?: string;\n}\n\nconst RiskTypography = (prop: Prop) => {\n    const { securityDetection, title } = prop;\n    const { t } = useTranslation();\n\n    const treeData = useMemo<DataNode[]>(() => {\n        const warningsTypes = securityDetection.filter((item) => item.warnings && item.warnings.length > 0);\n        const risksTypes = securityDetection.filter((item) => item.risks && item.risks.length > 0);\n\n        const data: DataNode[] = [];\n        if (risksTypes.length > 0) {\n            data.push({\n                title: t('sign.security_risk'),\n                key: '0-1',\n                icon: <div className=\"risk-icon danger\"></div>,\n                children: risksTypes.map((item) => {\n                    return {\n                        title: t(`risk.${item.type}`),\n                        key: item.type,\n                        icon: <div className=\"risk-dot danger\"></div>,\n                        children: item.risks?.map((risk) => {\n                            return {\n                                title: t(`risk.${risk}`),\n                                key: risk,\n                                icon: <div className=\"risk-dot danger\"></div>,\n                            };\n                        }),\n                    };\n                }),\n            });\n        }\n\n        if (warningsTypes.length > 0) {\n            data.push({\n                title: t('sign.transaction_may_fail'),\n                key: '0-0',\n                icon: <div className=\"risk-icon warning\"></div>,\n                children: warningsTypes.map((item) => {\n                    return {\n                        title: t(`risk.${item.type}`),\n                        key: item.type,\n                        icon: <div className=\"risk-dot warning\"></div>,\n                        children: item.warnings?.map((warning) => {\n                            return {\n                                title: t(`risk.${warning}`),\n                                key: warning,\n                                icon: <div className=\"risk-dot warning\"></div>,\n                            };\n                        }),\n                    };\n                }),\n            });\n        }\n\n        return data;\n    }, [securityDetection]);\n\n    return (\n        <>\n            <style>{styles as unknown as string}</style>\n            <div className={`risk-typography ${prop?.className}`}>\n                {title && <div className=\"risk-typography-title\">{title}</div>}\n                <Tree rootClassName=\"risk-tree\" showIcon defaultExpandAll treeData={treeData} selectable={false} />\n            </div>\n        </>\n    );\n};\n\nexport default RiskTypography;\n", "import { DownOutlined, UpOutlined } from '@ant-design/icons';\nimport { type SecurityDetection } from '@particle-network/auth-core';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport RiskTypography from '../riskTypography';\nimport styles from './index.less';\n\ninterface Prop {\n    securityDetection: SecurityDetection[];\n}\n\nconst RiskReminder = (prop: Prop) => {\n    const { securityDetection } = prop;\n\n    const { t } = useTranslation();\n\n    const [fold, setFold] = useState(false);\n\n    const toggleFold = () => {\n        setFold(!fold);\n    };\n\n    useEffect(() => {\n        const doc = document.documentElement;\n        doc.style.setProperty('--risk-bar-height', '36px');\n        return () => {\n            doc.style.setProperty('--risk-bar-height', '0px');\n        };\n    }, []);\n\n    return (\n        <div className=\"risk-reminder\">\n            <style>{styles as unknown as string}</style>\n            <div className=\"risk-header\" onClick={toggleFold}>\n                <div className=\"risk-red-dot\"></div>\n                <div className=\"risk-found\">{t('sign.risk_found')}</div>\n                {fold ? <UpOutlined className=\"btn-risk-fold\" /> : <DownOutlined className=\"btn-risk-fold\" />}\n            </div>\n            <RiskTypography\n                className={fold ? 'hide' : ''}\n                securityDetection={securityDetection}\n                title={t('sign.risk_hint_title') as string}\n            />\n        </div>\n    );\n};\n\nexport default RiskReminder;\n", "import React from 'react';\n\nconst IconEditPen = () => {\n    return (\n        <svg width={10.577} height={10.492} viewBox=\"0 0 10.577 10.492\">\n            <defs>\n                <style>\n                    {\n                        '.cls-1{fill:currentColor;stroke-width:0.2px}.cls-1,.cls-2{stroke:currentColor}.cls-2{fill:none;stroke-width:0.8px}'\n                    }\n                </style>\n            </defs>\n            <g id=\"\u7EC4_120\" transform=\"translate(-869.458 -38.834)\">\n                <path\n                    id=\"Fill_583\"\n                    className=\"cls-1\"\n                    d=\"M2.337 10.292H.356A.356.356 0 0 1 0 9.936V7.955a1.29 1.29 0 0 1 .385-.924L7.033.382a1.3 1.3 0 0 1 1.843 0l1.035 1.031a1.311 1.311 0 0 1 0 1.847L3.262 9.909a1.306 1.306 0 0 1-.925.383Zm3.718-7.926L.888 7.534a.583.583 0 0 0-.176.421V9.58h1.625a.612.612 0 0 0 .423-.174l5.166-5.169-1.871-1.871Zm1.9-1.654a.583.583 0 0 0-.418.173l-.978.976 1.87 1.872.978-.976a.6.6 0 0 0 0-.84L8.373.886a.582.582 0 0 0-.418-.174Z\"\n                    transform=\"translate(869.558 38.934)\"\n                />\n\n                <path id=\"\u8DEF\u5F84_2122\" className=\"cls-2\" d=\"m0 0 2.389 2.389\" transform=\"translate(870.102 46.23)\" />\n            </g>\n        </svg>\n    );\n};\nexport default React.memo(IconEditPen);\n", "import React from 'react';\n\nconst IconTo = ({ width = '34.2', height = '12.632', ...other }) => {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            version=\"1.1\"\n            width=\"36\"\n            height=\"36\"\n            viewBox=\"0 0 36 36\"\n            {...other}\n        >\n            <g>\n                <g transform=\"matrix(0,-1,1,0,-36,36)\">\n                    <ellipse cx=\"18\" cy=\"54\" rx=\"18\" ry=\"18\" fill=\"currentColor\" fillOpacity=\"0.08\" />\n                </g>\n                <g>\n                    <g transform=\"matrix(0,1,-1,0,39.271209716796875,-15.271026611328125)\">\n                        <path\n                            d=\"M34.0711181640625,13.066761552734375L38.0711181640625,18.400091552734374C38.565518164062496,19.059331552734374,38.0951181640625,20.000091552734375,37.2711181640625,20.000091552734375L29.2711181640625,20.000091552734375C28.4470681640625,20.000091552734375,27.9766911640625,19.059331552734374,28.4711181640625,18.400091552734374L32.4711181640625,13.066761552734375C32.8711181640625,12.533424552734376,33.6711181640625,12.533424552734376,34.0711181640625,13.066761552734375\"\n                            fill=\"currentColor\"\n                            fillOpacity=\"1\"\n                        />\n                    </g>\n                    <g transform=\"matrix(0,1,-1,0,37.415496826171875,-1.415802001953125)\">\n                        <path d=\"\" fill=\"#181B1E\" fillOpacity=\"1\" />\n                        <path\n                            d=\"M18.5656494140625,28.686447412109374L18.5656494140625,24.011087412109376L18.5656494140625,22.638147412109376L18.5656494140625,17.999847412109375Q18.5656494140625,17.916129712109374,18.5819824140625,17.834020412109375Q18.5983144140625,17.751911412109376,18.6303514140625,17.674566412109375Q18.6623894140625,17.597221412109374,18.7089004140625,17.527612412109374Q18.7554114140625,17.458004412109375,18.8146084140625,17.398806412109376Q18.8738064140625,17.339609412109375,18.9434144140625,17.293098412109376Q19.0130234140625,17.246587412109374,19.0903684140625,17.214549412109374Q19.1677134140625,17.182512412109375,19.2498224140625,17.166180412109377Q19.3319317140625,17.149847412109374,19.4156494140625,17.149847412109374Q19.4993671140625,17.149847412109374,19.5814764140625,17.166180412109377Q19.6635854140625,17.182512412109375,19.7409304140625,17.214549412109374Q19.8182754140625,17.246587412109374,19.8878844140625,17.293098412109376Q19.9574924140625,17.339609412109375,20.0166904140625,17.398806412109376Q20.0758874140625,17.458004412109375,20.1223984140625,17.527612412109374Q20.1689094140625,17.597221412109374,20.2009474140625,17.674566412109375Q20.2329844140625,17.751911412109376,20.2493164140625,17.834020412109375Q20.2656494140625,17.916129712109374,20.2656494140625,17.999847412109375L20.2656494140625,22.638147412109376L20.2656494140625,24.011087412109376L20.2656494140625,28.686447412109374Q20.2656494140625,28.770247412109377,20.2493164140625,28.852347412109374Q20.2329844140625,28.934447412109375,20.2009474140625,29.011747412109376Q20.1689094140625,29.089147412109376,20.1223984140625,29.158747412109374Q20.0758874140625,29.228347412109375,20.0166904140625,29.287547412109376Q19.9574924140625,29.346747412109373,19.8878844140625,29.393247412109375Q19.8182754140625,29.439747412109377,19.7409304140625,29.471747412109373Q19.6635854140625,29.503847412109373,19.5814764140625,29.520147412109374Q19.4993671140625,29.536447412109375,19.4156494140625,29.536447412109375Q19.3319317140625,29.536447412109375,19.2498224140625,29.520147412109374Q19.1677134140625,29.503847412109373,19.0903684140625,29.471747412109373Q19.0130234140625,29.439747412109377,18.9434144140625,29.393247412109375Q18.8738064140625,29.346747412109373,18.8146084140625,29.287547412109376Q18.7554114140625,29.228347412109375,18.7089004140625,29.158747412109374Q18.6623894140625,29.089147412109376,18.6303514140625,29.011747412109376Q18.5983144140625,28.934447412109375,18.5819824140625,28.852347412109374Q18.5656494140625,28.770247412109377,18.5656494140625,28.686447412109374Z\"\n                            fillRule=\"evenodd\"\n                            fill=\"currentColor\"\n                            fillOpacity=\"1\"\n                        />\n                    </g>\n                </g>\n            </g>\n        </svg>\n    );\n};\nexport default React.memo(IconTo);\n", "import { EvmRpcMethod, GasFeeMode, type EVMTransaction, type TokenPrice } from '@particle-network/auth-core';\nimport type { ChainInfo } from '@particle-network/chains';\nimport { useInterval } from 'ahooks';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport SVGIcon from '../../../components/icon/svg-icon';\nimport { useParticleAuth } from '../../../context';\nimport { getNativeSymbol } from '../../../utils/chain-utils';\nimport { formatPrice } from '../../../utils/number-utils';\nimport { useEVMTransaction } from '../evmContextProvider';\nimport styles from './info-sign.less';\n\ntype IProps = {\n    openGasDrawer: () => void;\n    signLoading: boolean;\n    chainInfo: ChainInfo;\n    signMethod: string;\n};\n\nfunction GasDisplay(props: IProps) {\n    const { openGasDrawer, signLoading, chainInfo, signMethod } = props;\n\n    const { t } = useTranslation();\n\n    const { gasFeeResult, gasFeeMode, fetchGasAsync, gasFeeDisplay, tokenPrice, totalAmountDisplay, transactionData } =\n        useEVMTransaction();\n\n    const [interval, setInterval] = useState<number | undefined>(undefined);\n\n    const [countdown, setCountdown] = useState(10);\n\n    const { modalOptions } = useParticleAuth();\n\n    useInterval(() => {\n        const result = countdown - 1;\n        if (result <= 0) {\n            setCountdown(10);\n            loadGasConfig();\n        } else {\n            setCountdown(result);\n        }\n    }, interval);\n\n    useEffect(() => {\n        if (signLoading) {\n            setInterval(undefined);\n            setCountdown(10);\n        } else {\n            setInterval(1000);\n            loadGasConfig();\n        }\n        return () => {\n            setInterval(undefined);\n            setCountdown(10);\n        };\n    }, [signLoading]);\n\n    const loadGasConfig = () => {\n        if (transactionData) {\n            fetchGasAsync({\n                addresses: ['native'],\n                from: transactionData.from,\n                to: transactionData.to,\n                value: transactionData.value,\n                data: transactionData.data,\n            });\n        }\n    };\n\n    const editGas = () => {\n        if (!gasFeeResult) {\n            return;\n        }\n        openGasDrawer();\n    };\n\n    const estimatedTime = (data?: EVMTransaction): string => {\n        if (!data || !gasFeeResult || !gasFeeMode) {\n            return '';\n        }\n        let time: number;\n        if (gasFeeMode == GasFeeMode.low) {\n            time = gasFeeResult.low.maxWaitTime;\n        } else if (gasFeeMode == GasFeeMode.medium) {\n            time = gasFeeResult.medium.maxWaitTime;\n        } else if (gasFeeMode == GasFeeMode.high) {\n            time = gasFeeResult.high.maxWaitTime;\n        } else {\n            time = gasFeeResult.low.maxWaitTime;\n        }\n        let displayTime: string;\n        if (time / 1000 >= 60) {\n            displayTime = `>${time / 1000 / 60}min`;\n        } else {\n            displayTime = `<${time / 1000}s`;\n        }\n\n        return displayTime;\n    };\n\n    const formatDisplayPrice = (fee: string, prices: TokenPrice[]): string => {\n        return prices.length > 0 && prices[0].currencies && prices[0].currencies.length > 0\n            ? formatPrice({\n                  amount: fee,\n                  price: prices[0].currencies[0].price,\n                  fiatCoin: modalOptions.fiatCoin || 'USD',\n              })\n            : '';\n    };\n\n    return (\n        <div>\n            <style>{styles as unknown as string}</style>\n            <div className=\"net-fee\" onClick={editGas}>\n                <div className=\"evm-fee\">\n                    <div className=\"fee-title\">\n                        {t('sign.evm_fee')}\n                        {gasFeeDisplay && interval && (\n                            <span>\n                                {' '}\n                                {t('sign.refresh_in')} {countdown}s\n                            </span>\n                        )}\n                    </div>\n\n                    {gasFeeDisplay && tokenPrice && (\n                        <div className=\"fee-row\">\n                            <div>\n                                {gasFeeDisplay.fee && (\n                                    <div>\n                                        {gasFeeDisplay.fee} {getNativeSymbol(chainInfo)}\n                                        <span className=\"approximately\">\n                                            {' '}\n                                            {formatDisplayPrice(gasFeeDisplay.fee, tokenPrice)}\n                                        </span>\n                                    </div>\n                                )}\n                                {t('sign.max_fee')}\n                                {gasFeeDisplay.maxFee} {getNativeSymbol(chainInfo)}\n                                <span className=\"approximately\">\n                                    {' '}\n                                    {formatDisplayPrice(gasFeeDisplay.maxFee, tokenPrice)}\n                                </span>\n                            </div>\n                            <div className=\"fee-right\">\n                                <div>\n                                    {gasFeeDisplay && <div className=\"fee-standard\">{t(`sign.gas_${gasFeeMode}`)}</div>}\n                                    <div\n                                        className=\"fee-time\"\n                                        style={\n                                            estimatedTime(transactionData).search('min') !== -1\n                                                ? { color: '#F55F0D' }\n                                                : {}\n                                        }\n                                    >\n                                        {estimatedTime(transactionData)}\n                                    </div>\n                                </div>\n                                <div>\n                                    <SVGIcon className=\"arrow-right-icon\" name=\"arrow_right_icon\" />\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n\n            {signMethod !== EvmRpcMethod.ethSendTransaction && (\n                <div className=\"total\">\n                    <div className=\"total-title\">{t('sign.total')}</div>\n                    {totalAmountDisplay && tokenPrice && (\n                        <div className=\"total-content mt8\">\n                            {totalAmountDisplay.amount && (\n                                <div>\n                                    {totalAmountDisplay.amount} {getNativeSymbol(chainInfo)}\n                                    <span> {formatDisplayPrice(totalAmountDisplay.amount, tokenPrice)}</span>\n                                </div>\n                            )}\n                            <div>\n                                {t('sign.max_amount')}: {totalAmountDisplay.maxAmount} {getNativeSymbol(chainInfo)}\n                                <span> {formatDisplayPrice(totalAmountDisplay.maxAmount, tokenPrice)}</span>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default GasDisplay;\n", "import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { getNativeSymbol } from '../../../utils/chain-utils';\nimport { useEVMTransaction } from '../evmContextProvider';\nimport styles from './info-sign.less';\n\nfunction NoGas() {\n    const { t } = useTranslation();\n\n    const { totalAmountDisplay, currentChain: chainInfo } = useEVMTransaction();\n\n    return (\n        <>\n            <style>{styles as unknown as string}</style>\n            <div className=\"no-gas-fee\">\n                <div className=\"no-title\">{t('sign.network_fee')}</div>\n                <div className=\"no-warning\">\n                    <img alt=\"\" src={require('../../../common/images/no_warning.png').default} />\n                    <span>{t('sign.gas_fee_cannot')}</span>\n                </div>\n                {totalAmountDisplay && (\n                    <>\n                        <div className=\"data-title\">{t('sign.total')}</div>\n                        {totalAmountDisplay.amount && (\n                            <div className=\"data-item\">\n                                {totalAmountDisplay.amount} {getNativeSymbol(chainInfo)}\n                            </div>\n                        )}\n                        <div className=\"data-item\">\n                            {t('sign.max_amount')}:{' '}\n                            <span>\n                                {totalAmountDisplay.maxAmount} {getNativeSymbol(chainInfo)}\n                            </span>\n                        </div>\n                    </>\n                )}\n            </div>\n        </>\n    );\n}\n\nexport default NoGas;\n", "import {\n    EvmEnhancedMethod,\n    TransactionSmartType,\n    type EVMDeserializeTransactionResult,\n    type EVMFunction,\n    type EVMNFTChange,\n    type TokenPrice,\n} from '@particle-network/auth-core';\nimport type { ChainInfo } from '@particle-network/chains';\nimport { Form, Image, Input, Modal } from 'antd';\nimport { BigNumber } from 'bignumber.js';\nimport dayjs from 'dayjs';\nimport numbro from 'numbro';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport type { AuthError } from '../../../api/model/authError';\nimport IconEditPen from '../../../components/icon-edit-pen';\nimport IconTo from '../../../components/icon-to';\nimport CircleClose from '../../../components/icon/circle-close';\nimport SVGIcon from '../../../components/icon/svg-icon';\nimport { useAuthCoreModal, useParticleAuth } from '../../../context';\nimport {\n    defaultTokenIcon,\n    formatAddress,\n    formatPng,\n    getNativeSymbol,\n    getNativeTokenIcon,\n} from '../../../utils/chain-utils';\nimport { isNullish, shortString } from '../../../utils/common-utils';\nimport { ipfsToSrc } from '../../../utils/index';\nimport { formatPrice } from '../../../utils/number-utils';\nimport { isTron } from '../../../utils/transaction-utils';\nimport { useEVMTransaction } from '../evmContextProvider';\nimport GasDisplay from './gas-display';\nimport NoGas from './no-gas';\n\nconst trimDecimals = (value: string, decimals = 10) => {\n    let [integerPart, decimalPart] = value.split('.');\n    if (decimalPart && decimalPart.length > decimals) {\n        decimalPart = decimalPart.slice(0, decimals + 1).slice(0, -1);\n    }\n    return `${integerPart}.${decimalPart ?? ''}`.replace(/0+$/, '').replace(/\\.$/, '');\n};\n\ninterface Props {\n    displayDetail: boolean;\n    gasError: AuthError | undefined;\n    setGasVis: React.Dispatch<React.SetStateAction<boolean>>;\n    formatFunction: (evmFunction: EVMFunction) => string;\n    setDisplayDetail: React.Dispatch<React.SetStateAction<boolean>>;\n    transactionInfo: EVMDeserializeTransactionResult | undefined;\n    changeApproveAmount: string;\n    setChangeApproveAmount: (amount: string) => Promise<void>;\n    signLoading: boolean;\n    signMessage: () => JSX.Element;\n    chainInfo: ChainInfo;\n    signMethod: string;\n}\n\nconst NewErcTransfers = (props: Props) => {\n    const { t } = useTranslation();\n    const {\n        transactionInfo,\n        setDisplayDetail,\n        displayDetail,\n        gasError,\n        setGasVis,\n        formatFunction,\n        changeApproveAmount,\n        setChangeApproveAmount,\n        signLoading,\n        chainInfo,\n        signMethod,\n    } = props;\n\n    // const transaction = useAppSelector(selectTransaction);\n    const { transactionData, gasFeeDisplay, tokenPrice: nativeTokenPrice } = useEVMTransaction();\n    const [visibleModal, setVisibleModal] = useState<boolean>(false);\n    const [tokenPrice, setTokenPrice] = useState<number | undefined>(undefined);\n    const [editApproveAmountForm] = Form.useForm();\n\n    const { authCoreModal } = useAuthCoreModal();\n    const [changeApproveAmountLoading, setChangeApproveAmountLoading] = useState(false);\n    const { modalOptions } = useParticleAuth();\n\n    // to address\n    const to = useMemo(() => {\n        const params = transactionInfo?.data?.function?.params;\n        if (transactionInfo?.type == TransactionSmartType.ERC20_TRANSFER) {\n            return params ? (params[params.length === 3 ? 1 : 0].value as string) : '';\n        } else if (transactionInfo?.type == TransactionSmartType.ERC20_APPROVE) {\n            return params ? (params[0].value as string) : '';\n        } else if (transactionInfo?.type == TransactionSmartType.NativeTransfer) {\n            return transactionInfo.data.to;\n        } else if (\n            transactionInfo?.type == TransactionSmartType.ERC721_TRANFER ||\n            transactionInfo?.type == TransactionSmartType.ERC1155_TRANFER\n        ) {\n            return params ? (params[1].value as string) : '';\n        } else if (\n            transactionInfo?.type === TransactionSmartType.SEAPORT_CANCEL_ORDER ||\n            transactionInfo?.type === TransactionSmartType.SEAPORT_FULFILL_ORDER\n        ) {\n            return transactionInfo.data.to;\n        } else {\n            return '';\n        }\n    }, [transactionInfo?.data?.function?.params, transactionInfo?.data?.to]);\n\n    const contractAddress = useMemo(() => {\n        if (transactionInfo?.estimatedChanges?.tokens?.[0]?.address) {\n            return transactionInfo.estimatedChanges.tokens[0].address;\n        } else {\n            return '';\n        }\n    }, [transactionInfo?.estimatedChanges]);\n\n    const {\n        tokenIcon = '',\n        tokenSymbol = '',\n        tokenDecimals = 18,\n    } = useMemo(() => {\n        let tokenIcon = '';\n        let tokenSymbol = '';\n        let tokenDecimals = 18;\n        if (\n            transactionInfo?.type == TransactionSmartType.ERC20_TRANSFER ||\n            transactionInfo?.type == TransactionSmartType.ERC20_APPROVE\n        ) {\n            tokenIcon = transactionInfo?.estimatedChanges?.tokens[0].image;\n            tokenSymbol = transactionInfo?.estimatedChanges?.tokens[0].symbol;\n            tokenDecimals = transactionInfo?.estimatedChanges?.tokens[0].decimals;\n            if (!tokenIcon) {\n                tokenIcon = defaultTokenIcon;\n            }\n        } else if (transactionInfo?.type == TransactionSmartType.NativeTransfer) {\n            tokenIcon = getNativeTokenIcon(chainInfo);\n            tokenSymbol = chainInfo?.nativeCurrency?.symbol || '';\n        }\n\n        return {\n            tokenIcon: formatPng(tokenIcon),\n            tokenSymbol,\n            tokenDecimals,\n        };\n    }, [transactionInfo?.estimatedChanges?.tokens, chainInfo]);\n\n    // \u6839\u636E\u5408\u7EA6\u5730\u5740 \u83B7\u53D6\u5408\u7EA6token\u7684price  setTokenPrice(tokenPrice);\n    useEffect(() => {\n        let addresses: string[] | undefined = undefined;\n        if (\n            contractAddress &&\n            (transactionInfo?.type == TransactionSmartType.ERC20_APPROVE ||\n                transactionInfo?.type == TransactionSmartType.ERC20_TRANSFER)\n        ) {\n            addresses = [contractAddress];\n        } else if (transactionInfo?.type == TransactionSmartType.NativeTransfer) {\n            addresses = ['native'];\n        }\n\n        if (addresses) {\n            window.particleAuth?.ethereum\n                .request({\n                    chainId: chainInfo.id,\n                    method: EvmEnhancedMethod.getPrice,\n                    params: [addresses, [modalOptions.fiatCoin?.toLowerCase() || 'usd']],\n                })\n                .then((res: TokenPrice[]) => {\n                    const tokenPrice =\n                        res.find((item) => item.address.toLowerCase() === addresses?.[0].toLowerCase())?.currencies?.[0]\n                            ?.price || 0;\n                    setTokenPrice(tokenPrice);\n                })\n                .catch((err) => {\n                    console.log('window.particleAuth?.ethereum', err);\n                });\n        }\n    }, [contractAddress]);\n\n    const amountChange = useMemo(() => {\n        let value = '';\n        const { decimals = 18, amountChange = 0 } = transactionInfo?.estimatedChanges?.tokens?.[0] || {};\n        if (transactionInfo?.type == TransactionSmartType.ERC20_APPROVE) {\n            const amount = transactionInfo.data?.function?.params?.[1]?.value as string;\n            value = new BigNumber(amount).dividedBy(new BigNumber(10).pow(decimals)).toString();\n        } else if (transactionInfo?.type == TransactionSmartType.ERC20_TRANSFER) {\n            value = new BigNumber(amountChange).dividedBy(new BigNumber(10).pow(decimals)).toString();\n        } else if (transactionInfo?.type == TransactionSmartType.NativeTransfer) {\n            const { nativeChange } = transactionInfo.estimatedChanges.natives[0];\n            value = new BigNumber(nativeChange)\n                .dividedBy(new BigNumber(10).pow(chainInfo.nativeCurrency.decimals))\n                .toString();\n        } else if (\n            transactionInfo?.type == TransactionSmartType.ERC721_TRANFER ||\n            transactionInfo?.type === TransactionSmartType.SEAPORT_FULFILL_ORDER ||\n            transactionInfo?.type === TransactionSmartType.SEAPORT_CANCEL_ORDER ||\n            transactionInfo?.type == TransactionSmartType.ERC1155_TRANFER\n        ) {\n            value = transactionInfo.estimatedChanges?.nfts?.[0]?.amountChange?.toString();\n        }\n        return value || '';\n    }, [transactionInfo?.estimatedChanges?.tokens]);\n\n    const amountChangeUSD = useMemo(() => {\n        if (amountChange && tokenPrice) {\n            return formatPrice({\n                amount: amountChange,\n                price: tokenPrice,\n                fiatCoin: modalOptions.fiatCoin ?? 'USD',\n            });\n        } else {\n            return '';\n        }\n    }, [amountChange, tokenPrice]);\n\n    const formartApproveAmount = (value: BigNumber): string => {\n        const amount = value.toString();\n        if (amount.length < 10) {\n            return amount;\n        } else {\n            return value.toPrecision(10);\n        }\n    };\n\n    const formatAmountChange = useMemo(() => {\n        let value = changeApproveAmount || amountChange || '0';\n        if (transactionInfo?.type === TransactionSmartType.ERC20_APPROVE) {\n            value = formartApproveAmount(new BigNumber(value));\n        } else {\n            value = numbro(value).format({\n                thousandSeparated: true,\n                trimMantissa: true,\n                mantissa: 9,\n            });\n        }\n        return value || '0';\n    }, [transactionInfo?.type, amountChange, changeApproveAmount]);\n\n    const amountFontSize = useMemo(() => {\n        let fontSize = 22;\n        const len = (formatAmountChange?.length || 0) + (tokenSymbol?.length || 0);\n        if (len > 26) {\n            fontSize = 14;\n        } else if (len > 22) {\n            fontSize = 16;\n        } else if (len > 18) {\n            fontSize = 18;\n        }\n        return `${fontSize}px`;\n    }, [formatAmountChange, tokenSymbol]);\n\n    const nftData: EVMNFTChange | undefined = useMemo(() => {\n        return transactionInfo?.estimatedChanges?.nfts?.[0] || transactionInfo?.data?.offer?.[0];\n    }, [transactionInfo?.estimatedChanges?.nfts, transactionInfo?.data?.offer]);\n\n    const contentTitle: string = useMemo(() => {\n        if (transactionInfo?.type === TransactionSmartType.ERC20_APPROVE) {\n            return t('new.token_per');\n        } else if (transactionInfo?.type === TransactionSmartType.SEAPORT_FULFILL_ORDER) {\n            return t('new.buy_nft');\n        } else if (transactionInfo?.type === TransactionSmartType.SEAPORT_CANCEL_ORDER) {\n            return t('new.cancel_nft_listing');\n        } else if (transactionInfo?.type === TransactionSmartType.SEAPORT_NFT_LISTING) {\n            return t('new.nft_listing');\n        } else {\n            return t('new.confirmation');\n        }\n    }, [transactionInfo?.type]);\n\n    const hexData = useMemo(() => {\n        return transactionInfo?.data?.data || '';\n    }, [transactionInfo?.data?.data]);\n\n    /**\n     * toTag\n     */\n    const contractTag = useMemo(() => {\n        if (\n            (transactionInfo?.type === TransactionSmartType.SEAPORT_FULFILL_ORDER ||\n                transactionInfo?.type === TransactionSmartType.SEAPORT_CANCEL_ORDER) &&\n            transactionInfo?.toTag\n        ) {\n            return ` (${transactionInfo?.toTag})`;\n        } else {\n            return '';\n        }\n    }, [transactionInfo?.type]);\n\n    const nftName = useMemo(() => {\n        if (nftData) {\n            if (nftData.name && nftData.name.length > 0) {\n                return nftData.name;\n            } else {\n                return `NFT#${nftData.tokenId}`;\n            }\n        }\n        return 'NFT';\n    }, [nftData]);\n\n    /**\n     * \u4EA4\u6613nonce\n     */\n    const nonce = useMemo(() => {\n        if (transactionInfo?.data?.nonce && !isTron(chainInfo)) {\n            return `#${parseInt(transactionInfo?.data?.nonce as string)}`;\n        } else {\n            return '';\n        }\n    }, [chainInfo, transactionInfo?.data?.nonce]);\n\n    /**\n     * NFT \u7C7B\u578B\n     */\n    const nftType = useMemo((): 'ERC1155' | 'ERC721' | '' => {\n        return transactionInfo?.estimatedChanges?.nfts?.[0]?.isSemiFungible === true\n            ? 'ERC1155'\n            : transactionInfo?.estimatedChanges?.nfts?.[0]?.isSemiFungible === false\n            ? 'ERC721'\n            : '';\n    }, [transactionInfo?.type, nftData?.isSemiFungible]);\n\n    /**\n     * nft \u4E0A\u67B6 \u6570\u91CF\n     */\n    const NFTListingQuantity = useMemo(() => {\n        return nftData?.amount || '';\n    }, [nftData]);\n\n    /**\n     * nft \u4EF7\u683C\n     */\n    const nftPrice = useMemo(() => {\n        const { symbol, decimals, amount } = transactionInfo?.price || {};\n        if (transactionInfo?.type === TransactionSmartType.SEAPORT_FULFILL_ORDER && symbol && decimals && amount) {\n            const price = new BigNumber(amount).dividedBy(new BigNumber(10).pow(decimals));\n            return `${trimDecimals(price.toString(10))} ${symbol}`;\n        } else {\n            return '';\n        }\n    }, [transactionInfo?.type, transactionInfo?.price]);\n\n    const NFTListingData = useMemo(() => {\n        if (transactionInfo?.type === TransactionSmartType.SEAPORT_NFT_LISTING) {\n            const seller = `${shortString(formatAddress(transactionInfo?.data?.offerer || '', chainInfo))}(${t(\n                'new.you'\n            )})`;\n            const symbol = transactionInfo?.data?.consideration?.[0]?.symbol || '';\n            let price = '';\n            let sellerEarnings = '';\n            let others = '';\n            const selfAddress = transactionInfo?.data?.offerer || '';\n            const startMS = Number(transactionInfo?.data?.startTime || 0) * 1000;\n            const startTime = dayjs(new Date(startMS)).format('MM/DD/YYYY hh:mm A');\n            let endTime = '';\n            if (transactionInfo?.data?.endTime && transactionInfo?.data?.endTime?.length > 10) {\n                // \u65E0\u9650\n                endTime = t('new.infinite');\n            } else {\n                const endMS = Number(transactionInfo?.data?.endTime || 0) * 1000;\n                endTime = dayjs(new Date(endMS)).format('MM/DD/YYYY hh:mm A');\n            }\n            if (transactionInfo?.data?.consideration) {\n                const list = transactionInfo?.data?.consideration;\n                let result = new BigNumber(0);\n                for (let i = 0; i < list.length; i++) {\n                    const item = list[i];\n                    result = result.plus(new BigNumber(item.amount));\n                    const amount = `${trimDecimals(\n                        new BigNumber(item.amount)\n                            .dividedBy(new BigNumber(10).pow(list?.[0]?.decimals ?? 18))\n                            .toString(10)\n                    )} ${symbol}`;\n                    if (item.recipient.toLowerCase() === selfAddress.toLowerCase()) {\n                        sellerEarnings = amount;\n                    } else {\n                        others = amount;\n                    }\n                }\n                result = result.dividedBy(new BigNumber(10).pow(list?.[0]?.decimals ?? 18));\n                price = `${trimDecimals(result.toString(10))} ${symbol}`;\n            }\n            return {\n                seller,\n                price,\n                sellerEarnings,\n                others,\n                startTime,\n                endTime,\n            };\n        } else {\n            return {};\n        }\n    }, [transactionInfo]);\n\n    return (\n        <div className=\"transfer-content\">\n            {transactionInfo && (\n                <div className=\"less-box\">\n                    <div className=\"groups\">\n                        <div className=\"item item1\">\n                            <div className=\"flex-sp-row row1\">\n                                <div className=\"left\">{contentTitle}</div>\n                                {nonce && <div className=\"right\">{nonce}</div>}\n                            </div>\n                            {/* ERC20_TRANSFER or NativeTransfer*/}\n                            {(transactionInfo?.type === TransactionSmartType.ERC20_TRANSFER ||\n                                transactionInfo?.type === TransactionSmartType.NativeTransfer) && (\n                                <div\n                                    className=\"flex-sp-row row2\"\n                                    data-feed-line={`${formatAmountChange}`.length > 13 ? true : false}\n                                >\n                                    <div className=\"left\">\n                                        <div className=\"icon\">\n                                            {!!tokenIcon && (\n                                                <Image\n                                                    className=\"icon\"\n                                                    src={tokenIcon}\n                                                    fallback={defaultTokenIcon}\n                                                    preview={false}\n                                                />\n                                            )}\n                                        </div>\n                                    </div>\n                                    <div className=\"right\">\n                                        <div className=\"amount\">\n                                            <div\n                                                className=\"change-val\"\n                                                style={{\n                                                    color: formatAmountChange?.includes?.('-')\n                                                        ? '#ea4335'\n                                                        : 'var(--text-color)',\n                                                    fontSize: amountFontSize,\n                                                }}\n                                            >\n                                                {formatAmountChange}\n                                            </div>\n                                            <div\n                                                className=\"symbol\"\n                                                style={{\n                                                    fontSize: amountFontSize,\n                                                }}\n                                            >\n                                                {tokenSymbol}\n                                            </div>\n                                        </div>\n                                        <div className=\"amount-usd\">{amountChangeUSD}</div>\n                                    </div>\n                                </div>\n                            )}\n                            {/* ERC20_APPROVE */}\n                            {transactionInfo?.type === TransactionSmartType.ERC20_APPROVE && (\n                                <div className=\"row-erc20-approve-content\">\n                                    <div className=\"flex-sp-row row-ac1\">\n                                        <img className=\"token-icon\" src={tokenIcon} alt=\"\" />\n                                        <div className=\"amount\">\n                                            {formatAmountChange}&nbsp;{tokenSymbol}\n                                        </div>\n                                    </div>\n                                    <div\n                                        className=\"flex-sp-row row-ac2\"\n                                        onClick={() => {\n                                            const amount = new BigNumber(changeApproveAmount || amountChange);\n                                            editApproveAmountForm.setFieldsValue({\n                                                amount: formartApproveAmount(amount),\n                                            });\n                                            setVisibleModal(true);\n                                        }}\n                                    >\n                                        <div>{t('new.edit_approve')}</div>\n                                        <div className=\"icon\">\n                                            <IconEditPen />\n                                        </div>\n                                    </div>\n                                    <div className=\"flex-sp-row row-ac3\">{t('new.by_granting')}</div>\n                                </div>\n                            )}\n                            {/* ERC1155_TRANFER || ERC721_TRANFER || SEAPORT_FULFILL_ORDER || SEAPORT_CANCEL_ORDER*/}\n                            {(transactionInfo?.type === TransactionSmartType.ERC1155_TRANFER ||\n                                transactionInfo?.type === TransactionSmartType.SEAPORT_FULFILL_ORDER ||\n                                transactionInfo?.type === TransactionSmartType.SEAPORT_CANCEL_ORDER ||\n                                transactionInfo?.type === TransactionSmartType.SEAPORT_NFT_LISTING ||\n                                transactionInfo?.type === TransactionSmartType.ERC721_TRANFER) && (\n                                <>\n                                    <div className=\"flex-sp-row row3\">\n                                        <div className=\"left\">\n                                            <Image\n                                                width={32}\n                                                height={32}\n                                                src={ipfsToSrc(nftData?.image || '')}\n                                                fallback={require('../../../common/images/default_nft.png').default}\n                                                preview={false}\n                                                // preview={{\n                                                //     getContainer: () => {\n                                                //         return authCoreModal.rootBody as HTMLElement;\n                                                //     },\n                                                // }}\n                                            />\n                                        </div>\n                                        <div className=\"right\">\n                                            <div className=\"name\">{nftName}</div>\n                                        </div>\n                                    </div>\n                                    <div className=\"flex-sp-row row4\">{nftType}</div>\n                                    {transactionInfo?.type === TransactionSmartType.SEAPORT_NFT_LISTING &&\n                                        NFTListingQuantity && (\n                                            <div className=\"flex-sp-row row5\">\n                                                <div className=\"left\">{t('new.amount')}</div>\n                                                <div className=\"right\">{NFTListingQuantity}</div>\n                                            </div>\n                                        )}\n                                    {nftPrice && (\n                                        <div className=\"flex-sp-row row6\">\n                                            <div className=\"left\">{t('new.nft_price')}</div>\n                                            <div className=\"right\">{nftPrice}</div>\n                                        </div>\n                                    )}\n                                </>\n                            )}\n                        </div>\n\n                        {/* ERC1155_TRANFER */}\n                        {transactionInfo?.type === TransactionSmartType.ERC1155_TRANFER && (\n                            <div className=\"item item2-0\">\n                                <div className=\"flex-sp-row\">\n                                    <div className=\"left\">{t('new.amount')}</div>\n                                    <div className=\"right\">\n                                        {isNullish(nftData?.amountChange)\n                                            ? t('program.unknown')\n                                            : Math.abs(nftData?.amountChange || 1)}\n                                    </div>\n                                </div>\n                            </div>\n                        )}\n\n                        {transactionInfo?.type !== TransactionSmartType.SEAPORT_NFT_LISTING && (\n                            <div className=\"item item2\">\n                                <div className=\"flex-sp-row\">\n                                    <div className=\"left\">\n                                        <div className=\"pn-row pn-row1\">\n                                            {t('new.from')} ({t('new.you')})\n                                        </div>\n                                        <div className=\"pn-row pn-row2\">\n                                            {shortString(formatAddress(transactionInfo.data.from, chainInfo))}\n                                        </div>\n                                    </div>\n                                    <div className=\"middle\">\n                                        <div className=\"icon\">\n                                            <IconTo />\n                                        </div>\n                                    </div>\n                                    <div className=\"right\">\n                                        <div className=\"pn-row pn-row1\">\n                                            {t('new.to')}\n                                            {contractTag}\n                                        </div>\n                                        {/* <div className=\"pn-row pn-row2\">{shortString(transactionInfo.data.to)}</div> */}\n                                        <div className=\"pn-row pn-row2\">\n                                            {shortString(formatAddress(to, chainInfo))}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        )}\n\n                        {!isTron(chainInfo) && transactionInfo?.type !== TransactionSmartType.SEAPORT_NFT_LISTING && (\n                            <div className=\"item item4\">\n                                <div className=\"flex-sp-row\">\n                                    <div className=\"left\">{t('new.network_fee')}</div>\n                                    {gasError ? (\n                                        <div className=\"gas-warning\">\n                                            <img\n                                                alt=\"\"\n                                                src={require('../../../common/images/no_warning.png').default}\n                                            />\n                                            <span>{t('sign.gas_fee_cannot')}</span>\n                                        </div>\n                                    ) : (\n                                        <div className=\"right\">\n                                            <div className=\"pn-row pn-row1\">\n                                                {gasFeeDisplay?.maxFee} {getNativeSymbol(chainInfo)}\n                                            </div>\n                                            <div className=\"pn-row pn-row2\">\n                                                {formatPrice({\n                                                    amount: gasFeeDisplay?.maxFee || '',\n                                                    price: nativeTokenPrice?.[0]?.currencies?.[0]?.price || 0,\n                                                    mantissa: 4,\n                                                    fiatCoin: modalOptions.fiatCoin ?? 'USD',\n                                                })}\n                                            </div>\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                        )}\n                        {transactionInfo?.type === TransactionSmartType.SEAPORT_NFT_LISTING && (\n                            <div className=\"item item5\">\n                                <div className=\"flex-sp-row\">\n                                    <div className=\"left\">{t('new.seller')}</div>\n                                    <div className=\"right\">{NFTListingData.seller}</div>\n                                </div>\n                                <div className=\"flex-sp-row\">\n                                    <div className=\"left\">{t('new.price')}</div>\n                                    <div className=\"right\">{NFTListingData.price}</div>\n                                </div>\n                                <div className=\"flex-sp-row price-sub\">\n                                    <div className=\"left\">{t('new.seller_earnings')}</div>\n                                    <div className=\"right\">{NFTListingData.sellerEarnings}</div>\n                                </div>\n                                <div className=\"flex-sp-row price-sub\">\n                                    <div className=\"left\">{t('new.others')}</div>\n                                    <div className=\"right\">{NFTListingData.others}</div>\n                                </div>\n                                <div className=\"flex-sp-row\">\n                                    <div className=\"left\">{t('new.start_time')}</div>\n                                    <div className=\"right\">{NFTListingData.startTime}</div>\n                                </div>\n                                <div className=\"flex-sp-row\">\n                                    <div className=\"left\">{t('new.end_time')}</div>\n                                    <div className=\"right\">{NFTListingData.endTime}</div>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            )}\n            <div className=\"fold-content\">\n                <div\n                    className=\"wrap\"\n                    onClick={() => {\n                        setDisplayDetail(!displayDetail);\n                    }}\n                >\n                    {displayDetail ? (\n                        <div className=\"fold\" key=\"less\">\n                            <span>{t('new.less')}</span>\n                            <SVGIcon className=\"arrow-icon\" name=\"arrow_icon\" />\n                        </div>\n                    ) : (\n                        <div className=\"unfold\" key=\"more\">\n                            <span>{t('new.details')}</span>\n                            <SVGIcon className=\"arrow-icon\" name=\"arrow_icon\" />\n                        </div>\n                    )}\n                </div>\n            </div>\n            <div\n                className=\"details-box\"\n                style={{\n                    display: displayDetail ? '' : 'none',\n                }}\n            >\n                {!gasError && !isTron(chainInfo) && transactionData && (\n                    <GasDisplay\n                        openGasDrawer={() => setGasVis(true)}\n                        signLoading={signLoading}\n                        chainInfo={chainInfo}\n                        signMethod={signMethod}\n                    />\n                )}\n                {gasError && !isTron(chainInfo) && <NoGas />}\n                <div className=\"mg-bottom-15\"></div>\n                <div>\n                    {/* function */}\n                    {transactionInfo && transactionInfo.data.function && (\n                        <div className=\"inner-instruction\" key={'instruction-function'}>\n                            <div className=\"inner-content\">\n                                <div className=\"content-item\">\n                                    <div className=\"item\">\n                                        <div className=\"item-0\">\n                                            {t('sign.function_type')} {formatFunction(transactionInfo.data.function)}\n                                        </div>\n\n                                        {transactionInfo.data.function.params.map((item) => (\n                                            <div className=\"item-1 mt10\" key={`instruction-function${item.name}`}>\n                                                {shortString(item.name)}\n                                                <span>{shortString(item.value)}</span>\n                                            </div>\n                                        ))}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                    {/* hex data */}\n                    {hexData && (\n                        <div className=\"inner-instruction\" key={'instruction-hex-data'}>\n                            <div className=\"inner-content\">\n                                <div className=\"content-item\">\n                                    <div className=\"item\">\n                                        <div className=\"item-0\">{t('sign.hex_data')}</div>\n                                        <div className=\"item-1 mt10\">\n                                            <div className=\"data\">{hexData}</div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                    {/* signMessage */}\n                    {transactionInfo?.type === TransactionSmartType.SEAPORT_NFT_LISTING &&\n                        !!props.signMessage &&\n                        props.signMessage()}\n                </div>\n            </div>\n            <Modal\n                title={t('new.edit_approve')}\n                open={visibleModal}\n                centered={true}\n                wrapClassName=\"edit-approve-amount-modal\"\n                okText={t('common.confirm')}\n                confirmLoading={changeApproveAmountLoading}\n                closeIcon={<CircleClose />}\n                onOk={() => {\n                    setChangeApproveAmountLoading(true);\n                    editApproveAmountForm\n                        .validateFields()\n                        .then((values) => {\n                            const amount = values?.amount?.replace?.(/\\.+$/g, '') || '';\n                            if (amount) {\n                                return setChangeApproveAmount(amount);\n                            }\n                        })\n                        .then(() => {\n                            setChangeApproveAmountLoading(false);\n                            setVisibleModal(false);\n                        })\n                        .catch((error) => {\n                            setChangeApproveAmountLoading(false);\n                            console.log('editApproveAmountForm', error);\n                        });\n                }}\n                onCancel={() => {\n                    setChangeApproveAmountLoading(false);\n                    setVisibleModal(false);\n                }}\n                getContainer={() => {\n                    return authCoreModal.rootBody as HTMLDivElement;\n                }}\n            >\n                <Form form={editApproveAmountForm} autoComplete=\"off\">\n                    <Form.Item\n                        label=\"\"\n                        name=\"amount\"\n                        rules={[\n                            {\n                                validator: (_, value) => {\n                                    if (\n                                        isNaN((value || '').replace(/\\.$/, '')) ||\n                                        !isFinite((value || '').replace(/\\.$/, ''))\n                                    ) {\n                                        return Promise.reject(t('new.please_enter'));\n                                    }\n                                    if (!value || (value && new BigNumber(value).lte(new BigNumber(0)))) {\n                                        return Promise.reject(t('new.the_amount'));\n                                    }\n                                    const amount = value?.replace?.(/\\.+$/g, '') || '';\n                                    const bn = new BigNumber(amount);\n                                    if ((bn.decimalPlaces() ?? 0) > tokenDecimals) {\n                                        return Promise.reject(t('new.please_enter'));\n                                    }\n                                    return Promise.resolve();\n                                },\n                            },\n                        ]}\n                    >\n                        <Input placeholder={t('new.please_enter') as string} />\n                    </Form.Item>\n                    <div className=\"icon\">\n                        <img src={tokenIcon} alt=\"\" />\n                    </div>\n                    <div className=\"symbol\">{tokenSymbol}</div>\n                </Form>\n            </Modal>\n        </div>\n    );\n};\n\nexport default NewErcTransfers;\n", "import { Drawer } from 'antd';\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { useAuthCoreModal } from '../../context';\nimport { isMobile } from '../../utils';\nimport CircleClose from '../icon/circle-close';\nimport styles from './index.less';\n\ninterface IProps {\n    children?: React.ReactNode;\n    onClose: () => void;\n    visible: boolean;\n    title?: string;\n    [key: string]: any;\n}\nconst ParticleDrawer = (props: IProps) => {\n    const { title, children, onClose, visible, ...rest } = props;\n    const [mobile, setMobile] = useState<boolean>(isMobile());\n    const { authCoreModal } = useAuthCoreModal();\n    const dropDownRef = useRef({\n        isDown: false,\n        moveY: 0,\n    });\n    const drawerContentRef = useRef<HTMLDivElement>(null);\n\n    const className = useMemo(() => {\n        const classNames = [\n            props.className,\n            `particle-${mobile ? 'mobile' : 'pc'}-drawer`,\n            'particle-drawer-container',\n        ];\n        return classNames.join(' ');\n    }, [props.className, mobile]);\n\n    const isScroll = (target: HTMLElement) => {\n        let parentElement: HTMLElement | null = target;\n        let flag = false;\n        while (parentElement) {\n            parentElement = parentElement.parentElement;\n            if (parentElement?.classList.contains('ant-drawer-body')) {\n                break;\n            }\n            if (parentElement?.scrollTop) {\n                flag = true;\n                break;\n            }\n        }\n        return flag;\n    };\n\n    const drawerContainer = useMemo(() => {\n        return props.containerSelector\n            ? document.querySelector(props.containerSelector)\n            : authCoreModal.rootModalContainer || document.querySelector('body');\n    }, [props.containerSelector, authCoreModal.rootModalContainer]);\n\n    useEffect(() => {\n        if (!mobile || !drawerContentRef?.current) {\n            return;\n        }\n        const touchstartHandler = (e: TouchEvent) => {\n            if (e.type === 'touchstart' && isScroll(e.target as HTMLElement)) {\n                return;\n            }\n            const clientY = e.touches[0].clientY;\n            e.stopPropagation();\n            dropDownRef.current.isDown = true;\n            dropDownRef.current.moveY = clientY;\n        };\n\n        if (visible) {\n            drawerContentRef?.current?.addEventListener('touchstart', touchstartHandler);\n        }\n\n        if (!visible) {\n            drawerContentRef?.current?.removeEventListener('touchstart', touchstartHandler);\n            dropDownRef.current.isDown = false;\n            dropDownRef.current.moveY = 0;\n        }\n\n        return () => {\n            drawerContentRef?.current?.removeEventListener('touchstart', touchstartHandler);\n            dropDownRef.current.isDown = false;\n            dropDownRef.current.moveY = 0;\n        };\n    }, [visible, mobile, drawerContentRef?.current]);\n\n    useEffect(() => {\n        if (!mobile || !drawerContentRef?.current) {\n            return;\n        }\n        const touchendHandler = (e: TouchEvent) => {\n            if (dropDownRef.current.isDown) {\n                e.stopPropagation();\n                dropDownRef.current.isDown = false;\n            }\n        };\n\n        const touchmoveHandler = (e: TouchEvent) => {\n            e.preventDefault();\n            const clientY = e.touches[0].clientY;\n            if (dropDownRef.current.isDown && clientY - dropDownRef.current.moveY > 60) {\n                onClose();\n            }\n        };\n\n        drawerContentRef?.current?.addEventListener('touchend', touchendHandler);\n\n        drawerContentRef?.current?.addEventListener('touchmove', touchmoveHandler, { passive: true });\n\n        return () => {\n            drawerContentRef?.current?.removeEventListener('touchend', touchendHandler);\n            drawerContentRef?.current?.removeEventListener('touchmove', touchmoveHandler);\n        };\n    }, [mobile, drawerContentRef?.current]);\n\n    useEffect(() => {\n        const resizeHandler = () => {\n            setMobile(isMobile());\n        };\n        window.addEventListener('resize', resizeHandler);\n        return () => {\n            window.removeEventListener('resize', resizeHandler);\n        };\n    }, []);\n\n    return (\n        <Drawer\n            onClose={onClose}\n            open={visible}\n            {...rest}\n            className={className}\n            destroyOnClose={false}\n            getContainer={() => {\n                return rest?.getContainer?.() || drawerContainer;\n            }}\n        >\n            <div className=\"particle-drawer-content\" ref={drawerContentRef}>\n                <style>{styles as unknown as string}</style>\n                <CircleClose\n                    data-mobile={mobile}\n                    className=\"close-icon\"\n                    onClick={() => {\n                        onClose();\n                    }}\n                />\n                <div className=\"particle-close-btn\" data-mobile={mobile}></div>\n                {title && <div className=\"particle-title\">{title}</div>}\n                {children}\n            </div>\n        </Drawer>\n    );\n};\n\nexport default ParticleDrawer;\n", "import { MinusCircleFilled, PlusCircleFilled } from '@ant-design/icons';\nimport type { PrefixedHexString } from '@ethereumjs/util';\nimport { addHexPrefix } from '@ethereumjs/util';\nimport { GasFeeMode, type GasFee, type TokenPrice } from '@particle-network/auth-core';\nimport { Button, Form, Input, Radio } from 'antd';\nimport { BigNumber } from 'bignumber.js';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport ParticleDrawer from '../../..//components/particle-drawer';\nimport SVGIcon from '../../../components/icon/svg-icon';\nimport PowerFooter from '../../../components/power-footer';\nimport { useAuthCoreModal, useParticleAuth } from '../../../context';\nimport { getNativeSymbol } from '../../../utils/chain-utils';\nimport { bnToHex, toHexPrefixString } from '../../../utils/common-utils';\nimport { ethereumUtils } from '../../../utils/ethereumUtils';\nimport {\n    formatPrice,\n    fromWei,\n    fromWeiFormat,\n    toBigNumber,\n    toWei,\n    toWeiBigNumber,\n    trimDecimals,\n} from '../../../utils/number-utils';\nimport { isEIP1559Type } from '../../../utils/transaction-utils';\nimport { useEVMTransaction } from '../evmContextProvider';\nimport styles from './evm-gas.scss';\n\nfunction EvmGas(props: any) {\n    const { openGasDrawer, visible } = props;\n    const [moreDetails, setMoreDetails] = useState(false);\n    const [errorTip, setErrorTip] = useState(false);\n    const [errorTip1, setErrorTip1] = useState<string>();\n    const [errorTip2, setErrorTip2] = useState<string>();\n    const optionsForm = useRef<any>(null);\n    const { authCoreModal } = useAuthCoreModal();\n    const { t } = useTranslation();\n\n    const {\n        transactionData,\n        updateTransaction,\n        gasFeeMode,\n        setGasFeeMode,\n        gasFeeDisplay: gasFeeDisplayContext,\n        gasFeeResult,\n        tokenPrice,\n        latestGasLimit,\n        currentChain: chainInfo,\n    } = useEVMTransaction();\n\n    const [gasMode, setGasMode] = useState(gasFeeMode);\n    const [gasFeeDisplay, setGasFeeDisplay] = useState(gasFeeDisplayContext);\n    const [gasLimit, setGasLimit] = useState<string>(latestGasLimit || '');\n    const [maxPriorityFeePerGas, setMaxPriorityFeePerGas] = useState(transactionData?.maxPriorityFeePerGas);\n\n    const [maxFee, setMaxFee] = useState<string>('');\n\n    const [gasForm] = Form.useForm();\n\n    const { modalOptions } = useParticleAuth();\n\n    useEffect(() => {\n        if (gasFeeMode || visible) {\n            setGasMode(gasFeeMode);\n        }\n    }, [gasFeeMode, visible]);\n\n    useEffect(() => {\n        if (gasFeeDisplayContext || visible) {\n            setGasFeeDisplay(gasFeeDisplayContext);\n        }\n    }, [gasFeeDisplayContext, visible]);\n\n    useEffect(() => {\n        if (visible) {\n            setMaxPriorityFeePerGas(transactionData?.maxPriorityFeePerGas);\n        }\n    }, [transactionData?.maxPriorityFeePerGas, visible]);\n\n    useEffect(() => {\n        if (visible) {\n            setMaxFee(\n                (isEIP1559Type(transactionData?.type as string)\n                    ? transactionData?.maxFeePerGas\n                    : transactionData?.gasPrice) as string\n            );\n        }\n    }, [transactionData?.type, transactionData?.maxFeePerGas, transactionData?.gasPrice, visible]);\n\n    useEffect(() => {\n        if (transactionData?.gasLimit || visible) {\n            setGasLimit(transactionData?.gasLimit as any);\n        }\n    }, [transactionData?.gasLimit, visible]);\n\n    useEffect(() => {\n        if (transactionData && gasLimit) {\n            if (isEIP1559Type(transactionData.type)) {\n                setGasFeeDisplay(\n                    ethereumUtils.gasFee({\n                        gasLimit: gasLimit,\n                        baseFee: bnToHex(toWei(gasFeeResult?.baseFee, 'gwei')),\n                        maxFeePerGas: maxFee,\n                        maxPriorityFeePerGas,\n                    })\n                );\n            } else {\n                setGasFeeDisplay(\n                    ethereumUtils.gasFee({\n                        gasLimit: gasLimit,\n                        baseFee: bnToHex(toWei(gasFeeResult?.baseFee, 'gwei')),\n                        gasPrice: maxFee,\n                    })\n                );\n            }\n        } else if (gasFeeDisplayContext) {\n            setGasFeeDisplay(gasFeeDisplayContext);\n        }\n    }, [gasMode, transactionData, gasFeeDisplayContext, maxFee, visible, gasLimit, gasFeeResult, maxPriorityFeePerGas]);\n\n    const estimatedTime = (mode?: GasFeeMode): string => {\n        if (!tokenPrice || !gasFeeResult) {\n            return '';\n        }\n        let time: number;\n        if (mode == GasFeeMode.low) {\n            time = gasFeeResult.low.maxWaitTime;\n        } else if (mode == GasFeeMode.medium) {\n            time = gasFeeResult.medium.maxWaitTime;\n        } else if (mode == GasFeeMode.high) {\n            time = gasFeeResult.high.maxWaitTime;\n        } else {\n            time = gasFeeResult.low.maxWaitTime;\n        }\n        let displayTime: string;\n        if (time / 1000 >= 60) {\n            displayTime = `>${time / 1000 / 60}min`;\n        } else {\n            displayTime = `<${time / 1000}s`;\n        }\n\n        return displayTime;\n    };\n\n    const usdDisplay = (gasFee?: GasFee): string => {\n        if (!transactionData || !tokenPrice || !gasFee) {\n            return '';\n        }\n        if (isEIP1559Type(transactionData.type)) {\n            //Max Fee: 0.00032 ETH(\u22480.01 $)\n\n            const maxFeeFormat = `${t('sign.max_fee')} ${gasFee.maxFee} ${getNativeSymbol(chainInfo)}`;\n            const price = formatDisplayPrice(gasFee.maxFee, tokenPrice);\n            if (price === '') {\n                return maxFeeFormat;\n            }\n            return maxFeeFormat + `(${price})`;\n        } else {\n            return formatDisplayPrice(gasFee.maxFee, tokenPrice);\n        }\n    };\n\n    const formatDisplayPrice = (fee: string, prices: TokenPrice[]): string => {\n        return prices.length > 0 && prices[0].currencies && prices[0].currencies.length > 0\n            ? formatPrice({\n                  amount: fee,\n                  price: prices[0].currencies[0].price,\n                  fiatCoin: modalOptions.fiatCoin || 'USD',\n              })\n            : '';\n    };\n\n    const selectGasMode = (mode: GasFeeMode) => {\n        setErrorTip(false);\n        setErrorTip1(undefined);\n        setErrorTip2(undefined);\n        if (mode !== gasMode) {\n            setGasMode(mode);\n            applyGasMode(mode);\n        }\n    };\n\n    const applyGasMode = (mode: GasFeeMode) => {\n        if (gasFeeResult && mode != GasFeeMode.custom) {\n            const maxFeeValue = bnToHex(toWei(gasFeeResult[mode].maxFeePerGas, 'gwei'));\n            setMaxFee(maxFeeValue);\n            gasForm.setFieldsValue({ 'max-fee': feeDisplay(maxFeeValue) });\n            const maxPriorityFeePerGasValue = bnToHex(toWei(gasFeeResult[mode].maxPriorityFeePerGas, 'gwei'));\n            setMaxPriorityFeePerGas(maxPriorityFeePerGasValue);\n            gasForm.setFieldsValue({ 'max-priority-fee': feeDisplay(maxPriorityFeePerGasValue) });\n            if (latestGasLimit) {\n                setGasLimit(latestGasLimit);\n            }\n        }\n    };\n\n    const setCustomGasLimit = (value: string) => {\n        setErrorTip(false);\n        if (gasMode !== GasFeeMode.custom) {\n            setGasMode(GasFeeMode.custom);\n        }\n        const bn = Number(value);\n        value = isNaN(bn) ? '0x0' : toHexPrefixString(bn);\n        setGasLimit(value);\n        if (Number(value) < Number(latestGasLimit)) {\n            setErrorTip(true);\n        } else {\n            setErrorTip(false);\n        }\n    };\n\n    const setCustomMaxPriorityFee = (value: string) => {\n        setErrorTip1(undefined);\n        const bn = toBigNumber(value);\n        value = bn.isNaN() || value === '' ? '0' : bn.toString();\n        value = bnToHex(toWei(value, 'gwei'));\n        if (gasMode !== GasFeeMode.custom) {\n            setGasMode(GasFeeMode.custom);\n        }\n        setMaxPriorityFeePerGas(value);\n        maxPriorityFeeErrorTip(value);\n    };\n\n    const setCustomMaxFee = (value: string) => {\n        console.log('setCustomMaxFee', value);\n        setErrorTip2(undefined);\n        const bn = toBigNumber(value);\n        value = bn.isNaN() || value === '' ? '0' : bn.toString();\n        value = bnToHex(toWei(value, 'gwei'));\n        if (gasMode !== GasFeeMode.custom) {\n            setGasMode(GasFeeMode.custom);\n        }\n        setMaxFee(value);\n        maxFeeErrorTip(value);\n    };\n\n    const addGasLimit = () => {\n        if (latestGasLimit && Number(gasLimit) < Number(latestGasLimit)) {\n            setCustomGasLimit(Number(latestGasLimit).toString());\n        } else {\n            setCustomGasLimit((Number(gasLimit) + 1).toString());\n        }\n    };\n\n    const minusGasLimit = () => {\n        if (Number(gasLimit) >= Number(latestGasLimit) + 1) {\n            setCustomGasLimit((Number(gasLimit) - 1).toString());\n        }\n    };\n\n    const addMaxPriorityFee = () => {\n        const value = new BigNumber(maxPriorityFeePerGas ?? '0x0').plus(1000000000);\n        const hex = addHexPrefix(value.toString(16));\n        setCustomMaxPriorityFee(fromWei(hex, 'gwei'));\n        gasForm.setFieldsValue({ 'max-priority-fee': feeDisplay(hex) });\n    };\n\n    const minusMaxPriorityFee = () => {\n        let value = new BigNumber(maxPriorityFeePerGas ?? '0x0').minus(1000000000);\n        if (value.isNegative()) {\n            value = new BigNumber(0);\n        }\n        const hex = addHexPrefix(value.toString(16));\n        setCustomMaxPriorityFee(fromWei(hex, 'gwei'));\n        gasForm.setFieldsValue({ 'max-priority-fee': feeDisplay(hex) });\n    };\n\n    const addMaxFee = () => {\n        const value = new BigNumber(maxFee).plus(1000000000);\n        const hex = addHexPrefix(value.toString(16));\n        setCustomMaxFee(fromWei(hex, 'gwei'));\n        gasForm.setFieldsValue({ 'max-fee': feeDisplay(hex) });\n    };\n\n    const minusMaxFee = () => {\n        let value = new BigNumber(maxFee).minus(1000000000);\n        if (value.isNegative()) {\n            value = new BigNumber(0);\n        }\n        const hex = addHexPrefix(value.toString(16));\n        setCustomMaxFee(fromWei(hex, 'gwei'));\n        gasForm.setFieldsValue({ 'max-fee': feeDisplay(hex) });\n    };\n\n    useEffect(() => {\n        if (isEIP1559Type(transactionData?.type) && maxPriorityFeePerGas) {\n            maxPriorityFeeErrorTip(maxPriorityFeePerGas);\n        }\n\n        maxFeeErrorTip(maxFee);\n    }, []);\n\n    const maxPriorityFeeErrorTip = (value: PrefixedHexString) => {\n        if (!gasFeeResult) return;\n\n        if (\n            new BigNumber(value).isGreaterThan(\n                toWeiBigNumber(gasFeeResult.medium.maxPriorityFeePerGas, 'gwei').multipliedBy(2)\n            )\n        ) {\n            setErrorTip1(t('sign.pr_fee_is_high') as string);\n        } else if (new BigNumber(value).isLessThan(toWeiBigNumber(gasFeeResult.low.maxPriorityFeePerGas, 'gwei'))) {\n            setErrorTip1(t('sign.pr_fee_is_low') as string);\n        } else {\n            setErrorTip1(undefined);\n        }\n\n        if (toBigNumber(value).gte(toBigNumber(maxFee))) {\n            setErrorTip2(t('sign.fee_low_priority') as string);\n        } else {\n            if (toBigNumber(maxFee).gt(toWeiBigNumber(gasFeeResult.medium.maxFeePerGas, 'gwei').multipliedBy(2))) {\n                setErrorTip2(t('sign.fee_is_high') as string);\n            } else if (toBigNumber(maxFee).lt(toWeiBigNumber(gasFeeResult.low.maxFeePerGas, 'gwei'))) {\n                setErrorTip2(t('sign.fee_is_low') as string);\n            } else {\n                setErrorTip2(undefined);\n            }\n        }\n    };\n\n    const maxFeeErrorTip = (value: PrefixedHexString) => {\n        if (!gasFeeResult) return;\n\n        if (\n            isEIP1559Type(transactionData?.type) &&\n            maxPriorityFeePerGas &&\n            toBigNumber(value).lte(maxPriorityFeePerGas)\n        ) {\n            setErrorTip2(t('sign.fee_low_priority') as string);\n        } else if (toBigNumber(value).gt(toWeiBigNumber(gasFeeResult.medium.maxFeePerGas, 'gwei').multipliedBy(2))) {\n            setErrorTip2(t('sign.fee_is_high') as string);\n        } else if (toBigNumber(value).lt(toWeiBigNumber(gasFeeResult.low.maxFeePerGas, 'gwei'))) {\n            setErrorTip2(t('sign.fee_is_low') as string);\n        } else {\n            setErrorTip2(undefined);\n        }\n    };\n\n    const checkSaveBtEnable = (\n        minPriorityFee: BigNumber,\n        minFee: BigNumber,\n        maxPriorityFee: BigNumber,\n        maxFee: BigNumber\n    ): boolean => {\n        if ((errorTip && latestGasLimit) || errorTip1 || errorTip2) {\n            return false;\n        } else if (isEIP1559Type(transactionData?.type)) {\n            return maxFee.gte(minFee) && maxPriorityFee.gte(minPriorityFee) && maxFee.gt(maxPriorityFee);\n        } else {\n            return maxFee.gte(minFee);\n        }\n    };\n\n    const saveGas = (values: unknown) => {\n        console.log('saveGas', gasMode, gasLimit, maxPriorityFeePerGas, maxFee);\n        if (gasMode && gasMode !== gasFeeMode) {\n            setGasFeeMode(gasMode);\n        }\n        if (gasMode === GasFeeMode.custom && transactionData) {\n            if (isEIP1559Type(transactionData.type)) {\n                updateTransaction({\n                    maxPriorityFeePerGas,\n                    maxFeePerGas: maxFee,\n                    gasLimit: gasLimit,\n                });\n            } else {\n                updateTransaction({\n                    gasPrice: maxFee,\n                    gasLimit: gasLimit,\n                });\n            }\n        }\n\n        openGasDrawer();\n    };\n\n    const estimateFee = (limit: PrefixedHexString, fee: PrefixedHexString): string => {\n        return fromWeiFormat(addHexPrefix(toBigNumber(limit).multipliedBy(fee).toString(16)), 'ether', 6);\n    };\n\n    const feeDisplay = (weiFee: PrefixedHexString): string => {\n        return fromWeiFormat(weiFee, 'gwei', 9);\n    };\n\n    useEffect(() => {\n        if (gasMode && gasMode !== GasFeeMode.custom) {\n            applyGasMode(gasMode);\n        }\n    }, [gasFeeResult, latestGasLimit]);\n\n    useEffect(() => {\n        if (maxFee && visible) {\n            gasForm.setFieldsValue({ 'max-fee': feeDisplay(maxFee) });\n        }\n    }, [visible, maxFee]);\n\n    return (\n        <>\n            <style>{styles as unknown as string}</style>\n            <ParticleDrawer\n                title={t('sign.edit_priority') as string}\n                visible={visible && !!gasFeeResult && !!transactionData && !!gasFeeMode && !!gasFeeDisplay}\n                push={false}\n                forceRender={true}\n                placement=\"bottom\"\n                onClose={openGasDrawer}\n                className=\"evm-gas-drawer\"\n                contentWrapperStyle={{ height: 'auto' }}\n                destroyOnClose={true}\n                getContainer={() => {\n                    return authCoreModal.rootBody as HTMLElement;\n                }}\n            >\n                {!!gasFeeResult && !!transactionData && !!gasFeeMode && !!gasFeeDisplay && (\n                    <>\n                        <div className=\"gas-content-box\">\n                            <div className=\"eth-amount\">\n                                {gasFeeDisplay?.fee ?? gasFeeDisplay?.maxFee} {getNativeSymbol(chainInfo)}\n                            </div>\n\n                            <div className=\"eth-amount-about\">{usdDisplay(gasFeeDisplay)}</div>\n\n                            <div\n                                className=\"speed-time\"\n                                style={estimatedTime(gasMode).search('min') != -1 ? { color: '#F55F0D' } : {}}\n                            >\n                                {estimatedTime(gasMode)}\n                            </div>\n                            <div className=\"speed-situation\">\n                                <div className=\"situation-img\">\n                                    <Radio\n                                        className=\"radio-item\"\n                                        checked={gasMode === GasFeeMode.low}\n                                        onClick={() => selectGasMode(GasFeeMode.low)}\n                                    />\n                                    <Radio\n                                        className=\"radio-item\"\n                                        checked={gasMode === GasFeeMode.medium}\n                                        onClick={() => selectGasMode(GasFeeMode.medium)}\n                                    />\n                                    <Radio\n                                        className=\"radio-item\"\n                                        checked={gasMode === GasFeeMode.high}\n                                        onClick={() => selectGasMode(GasFeeMode.high)}\n                                    />\n                                </div>\n                                <div className=\"situation-line\" />\n                                <div className=\"situation-text\">\n                                    <span>{t('sign.gas_low')}</span>\n                                    <span>{t('sign.gas_medium')}</span>\n                                    <span>{t('sign.gas_high')}</span>\n                                </div>\n                            </div>\n                            <div className=\"more-details\" onClick={() => setMoreDetails(!moreDetails)}>\n                                {t('sign.advanced_options')}\n                                {moreDetails ? (\n                                    <SVGIcon className=\"arrow-icon\" name=\"arrow_icon\" data-fold=\"true\" />\n                                ) : (\n                                    <SVGIcon className=\"arrow-icon\" name=\"arrow_icon\" data-fold=\"false\" />\n                                )}\n                            </div>\n\n                            <div className=\"advanced-options\">\n                                <Form\n                                    className=\"options-form\"\n                                    onFinish={saveGas}\n                                    form={gasForm}\n                                    layout=\"vertical\"\n                                    ref={optionsForm}\n                                >\n                                    {moreDetails && (\n                                        <div className=\"form-son\">\n                                            <div>\n                                                <div className=\"img-box-minus\" onClick={minusGasLimit}>\n                                                    <MinusCircleFilled className=\"minus-icon\" />\n                                                </div>\n                                                <div className=\"img-box-add\" onClick={addGasLimit}>\n                                                    <PlusCircleFilled className=\"add-icon\" />\n                                                </div>\n                                                {errorTip && latestGasLimit && (\n                                                    <div className=\"error-tip mt-e0\">\n                                                        {t('sign.gas_limit_must').format(\n                                                            toBigNumber(latestGasLimit).toString()\n                                                        )}\n                                                    </div>\n                                                )}\n                                                <Form.Item\n                                                    label={t('sign.gas_limit')}\n                                                    getValueFromEvent={(event) => {\n                                                        return event.target.value\n                                                            .replace(/[^\\d.]/g, '')\n                                                            .replace(/(\\.)(\\d*)(\\1*)/g, '$1$2');\n                                                    }}\n                                                >\n                                                    <Input\n                                                        value={toBigNumber(gasLimit).toString()}\n                                                        maxLength={9}\n                                                        onChange={(e) => setCustomGasLimit(e.target.value)}\n                                                    />\n                                                </Form.Item>\n                                            </div>\n\n                                            {isEIP1559Type(transactionData?.type) && (\n                                                <div>\n                                                    <div className=\"estimate mt1\">\n                                                        {t('sign.estimate')}\n                                                        <span className=\"estimate-val\">\n                                                            {' '}\n                                                            {trimDecimals(\n                                                                gasFeeResult?.medium?.maxPriorityFeePerGas || 0,\n                                                                9\n                                                            )}{' '}\n                                                            GWEI\n                                                        </span>\n                                                    </div>\n                                                    <div className=\"about-val mt-a1\">\n                                                        {!!gasLimit && estimateFee(gasLimit, maxPriorityFeePerGas!)}{' '}\n                                                        {getNativeSymbol(chainInfo)}\n                                                    </div>\n                                                    <div className=\"img-box-minus\" onClick={minusMaxPriorityFee}>\n                                                        <MinusCircleFilled className=\"minus-icon\" />\n                                                    </div>\n                                                    <div className=\"img-box-add\" onClick={addMaxPriorityFee}>\n                                                        <PlusCircleFilled className=\"add-icon\" />\n                                                    </div>\n                                                    {errorTip1 && <div className=\"error-tip mt-e0\">{errorTip1}</div>}\n                                                    <Form.Item\n                                                        label={t('sign.max_priority_fee')}\n                                                        name=\"max-priority-fee\"\n                                                        getValueFromEvent={(event) => {\n                                                            return event.target.value\n                                                                .replace(/[^\\d.]/g, '')\n                                                                .replace(/(\\.)(\\d*)(\\1*)/g, '$1$2');\n                                                        }}\n                                                    >\n                                                        <Input\n                                                            maxLength={17}\n                                                            className=\"special-input\"\n                                                            defaultValue={feeDisplay(maxPriorityFeePerGas!)}\n                                                            onInput={(e: any) => {\n                                                                const value = e.target.value;\n                                                                e.target.value = value\n                                                                    .replace(/[^\\d.]/g, '')\n                                                                    .replace(/\\D*(\\d*)(\\.?)(\\d{0,9})\\d*/, '$1$2$3');\n                                                            }}\n                                                            onChange={(e) => setCustomMaxPriorityFee(e.target.value)}\n                                                        />\n                                                    </Form.Item>\n                                                </div>\n                                            )}\n\n                                            <div>\n                                                <div className=\"estimate mt1\">\n                                                    {t('sign.estimate')}\n                                                    <span className=\"estimate-val\">\n                                                        {' '}\n                                                        {trimDecimals(gasFeeResult?.medium?.maxFeePerGas || 0, 9)} GWEI\n                                                    </span>\n                                                </div>\n                                                <div className=\"about-val mt-a1\">\n                                                    {!!gasLimit && estimateFee(gasLimit, maxFee)}{' '}\n                                                    {getNativeSymbol(chainInfo)}\n                                                </div>\n                                                <div className=\"img-box-minus\" onClick={minusMaxFee}>\n                                                    <MinusCircleFilled className=\"minus-icon\" />\n                                                </div>\n                                                <div className=\"img-box-add\" onClick={addMaxFee}>\n                                                    <PlusCircleFilled className=\"add-icon\" />\n                                                </div>\n                                                {errorTip2 && <div className=\"error-tip mt-e0\">{errorTip2}</div>}\n                                                <Form.Item\n                                                    label={t('sign.max_fee')}\n                                                    name=\"max-fee\"\n                                                    getValueFromEvent={(event) => {\n                                                        return event.target.value\n                                                            .replace(/[^\\d.]/g, '')\n                                                            .replace(/(\\.)(\\d*)(\\1*)/g, '$1$2');\n                                                    }}\n                                                >\n                                                    <Input\n                                                        maxLength={17}\n                                                        className=\"special-input\"\n                                                        defaultValue={feeDisplay(maxFee)}\n                                                        onInput={(e: any) => {\n                                                            const value = e.target.value;\n                                                            e.target.value = value\n                                                                .replace(/[^\\d.]/g, '')\n                                                                .replace(/\\D*(\\d*)(\\.?)(\\d{0,9})\\d*/, '$1$2$3');\n                                                        }}\n                                                        onChange={(e) => setCustomMaxFee(e.target.value)}\n                                                    />\n                                                </Form.Item>\n                                            </div>\n                                        </div>\n                                    )}\n                                </Form>\n                            </div>\n                        </div>\n                        <div className=\"item-save-btn\">\n                            <Button\n                                className=\"save-btn\"\n                                type=\"primary\"\n                                disabled={\n                                    !checkSaveBtEnable(\n                                        toWeiBigNumber(gasFeeResult?.low.maxPriorityFeePerGas, 'gwei'),\n                                        toWeiBigNumber(gasFeeResult?.low.maxFeePerGas, 'gwei'),\n                                        toBigNumber(maxPriorityFeePerGas),\n                                        toBigNumber(maxFee)\n                                    ) || toBigNumber(gasLimit).lt(toBigNumber(latestGasLimit))\n                                }\n                                onClick={() => optionsForm.current.submit()}\n                            >\n                                {t('common.save')}\n                            </Button>\n                        </div>\n                        <PowerFooter className=\"footer-box-v2\" />\n                    </>\n                )}\n            </ParticleDrawer>\n        </>\n    );\n}\n\nexport default EvmGas;\n", "// wallet : displaywallet  \u6BCF\u4E2A\u9875\u9762\u90FD\u6709\n// account : \u6BCF\u4E2A\u9875\u9762\u90FD\u6709,\u7EA2\u70B9 \u70B9\u51FB\u6D88\u5931 \u5B58\u50A8\u5230localstorage\n// transaction : evm \u94FE eth_sendTransaction \u65F6\u6709,\u7EA2\u70B9\u70B9\u51FB\u6D88\u5931 \u5B58\u50A8\u5230 sessionStorage\n// \u5C0F\u4E8E3\u4E2A\u7684\u65F6\u5019\uFF0C\u4E0D\u663E\u793Amenu\uFF0C\u76F4\u63A5\u5E73\u94FA\n\nimport { Badge } from 'antd';\nimport md5 from 'crypto-js/md5.js';\nimport cloneDeep from 'lodash/cloneDeep.js';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport SVGIcon from '../../../components/icon/svg-icon';\nimport { useCustomNavigate, useParticleAuth } from '../../../context';\n\nconst Menu = (props: any) => {\n    const { userInfo } = props;\n    const navigate = useCustomNavigate();\n    const { modalOptions } = useParticleAuth();\n\n    const accountSecurityKey = useMemo(() => {\n        const key = `${modalOptions.appId}_${userInfo?.uuid}`;\n        return `account_security_${md5(key)}`;\n    }, [modalOptions.appId, userInfo?.uuid]);\n\n    const [meunInfo, setMeunInfo] = useState<any>({\n        account: {\n            name: 'Account & Security',\n            display: true,\n            badge: false,\n        },\n    });\n\n    /**\n     * \u6709Paymentpassword\u6216Masterpassword\u5176\u4E2D\u4E00\u4E2A\u6CA1\u6709\u5C31\u8BBE\u7F6E security \u4E3Atrue\uFF0C\u663E\u793A\u7EA2\u70B9\n     */\n    useEffect(() => {\n        if (userInfo?.security_account && !!accountSecurityKey && !localStorage.getItem(accountSecurityKey)) {\n            // eslint-disable-next-line camelcase\n            const { has_set_master_password, has_set_payment_password } = userInfo?.security_account || {};\n            // eslint-disable-next-line camelcase\n            if (!has_set_master_password || !has_set_payment_password) {\n                meunInfo.account.badge = true;\n            } else {\n                meunInfo.account.badge = false;\n            }\n        } else {\n            meunInfo.account.badge = false;\n        }\n        setMeunInfo(cloneDeep(meunInfo));\n    }, [userInfo?.security_account, accountSecurityKey]);\n\n    const accountButton = (\n        <div\n            className=\"item\"\n            onClick={() => {\n                meunInfo.account.badge = false;\n                setMeunInfo(cloneDeep(meunInfo));\n                navigate('/account/security');\n                localStorage.setItem(accountSecurityKey, 'true');\n            }}\n        >\n            <Badge dot={!!meunInfo.account.badge}>\n                <SVGIcon className=\"wallet-icon\" name=\"security_icon\" />\n            </Badge>\n        </div>\n    );\n\n    return <div className=\"top-menu-list\">{!!meunInfo?.account?.display && accountButton}</div>;\n};\n\nexport default Menu;\n", "import { addHexPrefix, stripHexPrefix } from '@ethereumjs/util';\nimport { RecordType } from '@particle-network/analytics';\nimport {\n    EvmEnhancedMethod,\n    EvmRpcMethod,\n    TransactionSmartType,\n    analyticsRecord,\n    isConnected,\n    syncUserInfo,\n    type EVMDeserializeTransactionResult,\n    type EVMFunction,\n    type EVMNFTChange,\n    type EVMTransaction,\n} from '@particle-network/auth-core';\nimport { Button, Image, Modal, Tabs } from 'antd';\nimport { BigNumber } from 'bignumber.js';\nimport BN from 'bn.js';\n//@ts-ignore\nimport jt from 'json-toy';\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport { useTranslation } from 'react-i18next';\nimport { type EvmSignProps } from '..';\nimport { getEVMPublicAddress } from '../../../api/getPublicAddress';\nimport { AuthError } from '../../../api/model/authError';\nimport { PromptSettingType } from '../../../api/model/bundle';\nimport { AuthPage } from '../../../components/customRouter';\nimport CircleClose from '../../../components/icon/circle-close';\nimport IconCopy from '../../../components/icon/icon-copy';\nimport ParticleLoading from '../../../components/loading';\nimport PowerFooter from '../../../components/power-footer';\nimport { useAuthCoreModal, useCustomNavigate, useEvents, useParticleAuth } from '../../../context';\nimport { useEthereum } from '../../../context/hooks';\nimport { useError } from '../../../context/hooks/useError';\nimport useMessage from '../../../context/hooks/useMessage';\nimport { usePaymentPassword } from '../../../context/hooks/usePaymentPassword';\nimport usePending from '../../../context/hooks/usePending';\nimport { AuthCoreModalEvent } from '../../../context/types';\nimport {\n    defaultTokenIcon,\n    formatAddress,\n    getChainDisplayName,\n    getChainIcon,\n    getNativeSymbol,\n} from '../../../utils/chain-utils';\nimport { shortString } from '../../../utils/common-utils';\nimport { ethereumUtils } from '../../../utils/ethereumUtils';\nimport { formatTokenAmount2, fromSunFormat, fromWeiFormat } from '../../../utils/number-utils';\nimport { isEIP1559Type, isEVMAddress, isTron, parseTransaction } from '../../../utils/transaction-utils';\nimport { useEVMTransaction } from '../evmContextProvider';\nimport riskModalStyle from '../riskModal/index.less';\nimport RiskReminder from '../riskReminder';\nimport RiskTypography from '../riskTypography';\nimport NewErcTransfers from './NewErcTransfers';\nimport EvmGas from './evm-gas';\nimport GasDisplay from './gas-display';\nimport styles from './info-sign.less';\nimport Menu from './menu';\nimport NoGas from './no-gas';\n\nimport biconomy000 from '../../../common/images/smartAccount/biconomy-000-icon.png';\nimport biconomyfff from '../../../common/images/smartAccount/biconomy-fff-icon.png';\nimport btc000 from '../../../common/images/smartAccount/btc-000-icon.png';\nimport btcfff from '../../../common/images/smartAccount/btc-fff-icon.png';\nimport cyberconnect000 from '../../../common/images/smartAccount/cyberconnect-000-icon.png';\nimport cyberconnectfff from '../../../common/images/smartAccount/cyberconnect-fff-icon.png';\nimport light000 from '../../../common/images/smartAccount/light-000-icon.png';\nimport lightfff from '../../../common/images/smartAccount/light-fff-icon.png';\nimport simple000 from '../../../common/images/smartAccount/simple-000-icon.png';\nimport simplefff from '../../../common/images/smartAccount/simple-fff-icon.png';\n\nenum RenderPageType {\n    SIGN_MESSAGE,\n    SEND_TX,\n    SIGN_TYPE_DATA,\n}\n\nexport const getAAIcon = (aaType: string, theme: string) => {\n    aaType = (aaType ?? 'biconomy')?.toLowerCase();\n    const aaIcons: Record<string, any> = {\n        biconomyfff,\n        biconomy000,\n        cyberconnectfff,\n        cyberconnect000,\n        simplefff,\n        simple000,\n        lightfff,\n        light000,\n        btcfff,\n        btc000,\n    };\n    const key = `${aaType}${theme === 'light' ? 'fff' : '000'}`;\n    return aaIcons[key] ?? aaIcons['biconomyfff'];\n};\n\nfunction EvmSign(props: EvmSignProps) {\n    const { method, param, loginAuthorizationSign } = props;\n\n    const { t } = useTranslation();\n    const message = useMessage();\n    const [loading, setLoading] = useState(false);\n\n    const [transactionInfo, setTransactionInfo] = useState<EVMDeserializeTransactionResult>();\n\n    const infoSignRef = useRef(null);\n\n    const [headerTitle, setHeaderTitle] = useState<string>('');\n    const { authCoreModal } = useAuthCoreModal();\n    const [headerDes, setHeaderDes] = useState<string>('');\n\n    const [gasVis, setGasVis] = useState<boolean>(false);\n\n    const navigate = useCustomNavigate();\n\n    const [renderPageType, setRenderPageType] = useState<RenderPageType | ''>('');\n\n    const [changeApproveAmount, setChangeApproveAmount] = useState<string>('');\n\n    const { errorHandle } = useError();\n\n    const {\n        transactionData,\n        gasError,\n        setTransaction,\n        updateTransaction,\n        currentChain: chainInfo,\n    } = useEVMTransaction();\n\n    const [riskPrompt, setRiskPrompt] = useState(false);\n\n    const { events } = useEvents();\n\n    const [addressDisplayed, setAddressDisplayed] = useState<string>();\n\n    const { hasSetPaymentPassword, showSetPaymentPasswordOrConfirm } = usePaymentPassword();\n\n    const { setPaymentVerify, setPaymentPassword, userInfo, modalOptions } = useParticleAuth();\n\n    const { address } = useEthereum();\n\n    const { checkPending } = usePending();\n\n    const loadsecurityAccounts = () => {\n        syncUserInfo()\n            .then(() => {\n                approveSign();\n            })\n            .catch((error) => {\n                setLoading(false);\n                message.error(error.message ?? 'Sign Error');\n            });\n    };\n\n    const { TabPane } = Tabs;\n\n    const isPersonalSign = useMemo(\n        () => method === EvmRpcMethod.personalSign || method === EvmRpcMethod.personalSignUniq,\n        [method]\n    );\n\n    const redirectToApp = ({ error, result }: { error?: AuthError; result?: unknown }) => {\n        events.emit(AuthCoreModalEvent.SignResponse, {\n            result,\n            error,\n        });\n    };\n\n    useEffect(() => {\n        getEVMPublicAddress({\n            erc4337: modalOptions.erc4337,\n            chainId: chainInfo.id,\n        })\n            .then((addr) => {\n                setAddressDisplayed(addr);\n            })\n            .catch((error) => {\n                console.error('get public address error', error);\n            });\n    }, [chainInfo.id, modalOptions.erc4337]);\n\n    useEffect(() => {\n        let renderPageType: RenderPageType | '' = '';\n        console.log(`evm sign method: ${method}, chainId: ${chainInfo.id}`);\n        if (isPersonalSign) {\n            //sign message\n            setHeaderTitle(t('sign.signature_message') as string);\n            setHeaderDes(t('sign.signature_title') as string);\n\n            renderPageType = RenderPageType.SIGN_MESSAGE;\n        } else if (method === EvmRpcMethod.ethSendTransaction) {\n            //send tx\n            setHeaderTitle(t('sign.send_transaction') as string);\n            setHeaderDes(t('sign.approve_and').format(getChainDisplayName(chainInfo)));\n            setTransactionData();\n            renderPageType = RenderPageType.SEND_TX;\n        } else if (method === EvmRpcMethod.ethSignTypedDataV4 || method === EvmRpcMethod.ethSignTypedDataV4Uniq) {\n            deserializeTypedData(JSON.stringify(param)).then((res) => {\n                if (res?.type === TransactionSmartType.SEAPORT_NFT_LISTING) {\n                    setHeaderTitle(t('sign.send_transaction') as string);\n                    setHeaderDes(t('sign.approve_and').format(getChainDisplayName(chainInfo)));\n                    renderPageType = RenderPageType.SEND_TX;\n                } else {\n                    renderPageType = RenderPageType.SIGN_TYPE_DATA;\n                    setHeaderTitle(t('sign.sign_typed_data') as string);\n                    setHeaderDes(t('sign.signature_title') as string);\n                }\n                setRenderPageType(renderPageType);\n            });\n        } else if (method.includes(EvmRpcMethod.ethSignTypedData)) {\n            //sign typed data\n            setHeaderTitle(t('sign.sign_typed_data') as string);\n            setHeaderDes(t('sign.signature_title') as string);\n            renderPageType = RenderPageType.SIGN_TYPE_DATA;\n        }\n\n        setRenderPageType(renderPageType);\n    }, [chainInfo]);\n\n    const setTransactionData = () => {\n        console.log('setTransactionData', param);\n        const txData = parseTransaction(param as any, chainInfo);\n        console.log('setTransactionData\uFF0C after parse', txData);\n        setTransaction(txData);\n        deserializeTransaction(txData);\n    };\n\n    const deserializeTypedData = async (jsonStr: string) => {\n        const result = await window.particleAuth?.ethereum\n            .request({\n                chainId: chainInfo.id,\n                method: EvmEnhancedMethod.deserializeTypedData,\n                params: [jsonStr],\n            })\n            .catch((error) => {\n                console.log('deserializeTypedData error', error);\n                message.error(error.message ?? 'deserializeTypedData Error');\n            });\n        setTransactionInfo(result);\n        return result;\n    };\n\n    const deserializeTransaction = async (txData: EVMTransaction) => {\n        if (!checkTxData(txData)) {\n            return;\n        }\n\n        const { TransactionFactory } = await import('@ethereumjs/tx');\n        const tx = TransactionFactory.fromTxData(txData);\n        window.particleAuth?.ethereum\n            .request({\n                chainId: chainInfo.id,\n                method: EvmEnhancedMethod.deserializeTransaction,\n                params: [address, addHexPrefix(tx.serialize().toString('hex'))],\n            })\n            .then((result) => {\n                setTransactionInfo(result);\n            })\n            .catch((error) => {\n                console.log('deserializeTransaction error', error);\n                Modal.error({\n                    title: error.message ?? 'Deserialize Transaction Error',\n                    wrapClassName: 'auth-core-modal-error',\n                    getContainer: () => {\n                        return authCoreModal.rootBody as HTMLElement;\n                    },\n                    okCancel: true,\n                    cancelText: t('common.cancel'),\n                    okText: t('common.retry'),\n                    onOk: () => {\n                        deserializeTransaction(txData);\n                    },\n                });\n            });\n    };\n\n    const hasSecurityRisk = useMemo(() => {\n        return transactionInfo?.securityDetection && transactionInfo?.securityDetection.length > 0;\n    }, [transactionInfo?.securityDetection]);\n\n    const checkTxData = (txData: EVMTransaction): boolean => {\n        if (isTron(chainInfo)) {\n            if (!txData.from || !txData.to || !txData.value) {\n                Modal.error({\n                    title: 'Transaction error, see doc for more info',\n                    wrapClassName: 'auth-core-modal-error',\n                    getContainer: () => {\n                        return authCoreModal.rootBody as HTMLElement;\n                    },\n                    onOk: () => {\n                        redirectToApp({\n                            error: AuthError.paramsError(),\n                        });\n                    },\n                });\n                return false;\n            }\n\n            return true;\n        }\n        if (Number(txData.type) !== 0 && Number(txData.type) !== 1 && Number(txData.type) !== 2) {\n            Modal.error({\n                title: 'Transaction type error, see doc for more info',\n                wrapClassName: 'auth-core-modal-error',\n                getContainer: () => {\n                    return authCoreModal.rootBody as HTMLElement;\n                },\n                onOk: () => {\n                    redirectToApp({\n                        error: AuthError.paramsError(),\n                    });\n                },\n            });\n            return false;\n        } else if (isEIP1559Type(txData.type) && txData.maxFeePerGas && txData.maxPriorityFeePerGas) {\n            const maxFeePerGasBN = new BN(stripHexPrefix(txData.maxFeePerGas), 16);\n            const maxPriorityFeePerGasBN = new BN(stripHexPrefix(txData.maxPriorityFeePerGas), 16);\n            if (maxFeePerGasBN.lte(maxPriorityFeePerGasBN)) {\n                // maxFeePerGas cannot be less than maxPriorityFeePerGas\n                Modal.error({\n                    title: 'maxFeePerGas cannot be less than maxPriorityFeePerGas.',\n                    wrapClassName: 'auth-core-modal-error',\n                    getContainer: () => {\n                        return authCoreModal.rootBody as HTMLElement;\n                    },\n                    onOk: () => {\n                        redirectToApp({\n                            error: AuthError.feeError(),\n                        });\n                    },\n                });\n                return false;\n            }\n        }\n        return true;\n    };\n\n    const decodeMessage = (message: string): string => {\n        const msg = Buffer.from(stripHexPrefix(message), 'hex').toString('utf-8');\n        if (isPersonalSign) {\n            if (/\uFFFD/.test(msg)) {\n                return message;\n            }\n        }\n        return msg;\n    };\n\n    const formatFunction = (evmFunction: EVMFunction): string => {\n        if (evmFunction.params.length > 0) {\n            const p = evmFunction.params.map((item) => item.type).join(', ');\n            return `${evmFunction.name}(${p})`;\n        }\n        return `${evmFunction.name}()`;\n    };\n\n    const approveSign = async (pendingConfirm = false) => {\n        if (!isConnected()) {\n            redirectToApp({\n                error: AuthError.notLogin(),\n            });\n            return;\n        }\n\n        analyticsRecord({\n            // eslint-disable-next-line camelcase\n            record_type: RecordType.PAGE_SIGN_CONFIRM_BUTTON_CLICK, // confirm\u6309\u94AE\u70B9\u51FB\n        });\n\n        if (method === EvmRpcMethod.ethSendTransaction) {\n            if (await checkPending(approveSign, pendingConfirm)) {\n                return;\n            } else if (userInfo?.security_account?.has_set_payment_password) {\n                setPaymentVerify({\n                    visible: true,\n                    onVerifyCompleted: signTx,\n                });\n            } else {\n                showSetPaymentPasswordOrConfirm(signTx);\n            }\n        } else if (method.includes(EvmRpcMethod.ethSignTypedData) || isPersonalSign) {\n            if (userInfo?.security_account?.has_set_payment_password) {\n                setPaymentVerify({\n                    visible: true,\n                    onVerifyCompleted: signData,\n                });\n            } else {\n                if (\n                    method.includes(EvmRpcMethod.ethSignTypedData) ||\n                    modalOptions.promptSettingConfig?.promptPaymentPasswordSettingWhenSign ===\n                        PromptSettingType.everyAndNotSkip\n                ) {\n                    // method\u662Feth_signTypedData \u6216\u8005 \u5F3A\u5236\u8BBE\u7F6E\u652F\u4ED8\u5BC6\u7801\n                    showSetPaymentPasswordOrConfirm(signData);\n                } else {\n                    signData();\n                }\n            }\n        } else {\n            Modal.error({\n                title: `method ${method} not support`,\n                wrapClassName: 'auth-core-modal-error',\n                getContainer: () => {\n                    return authCoreModal.rootBody as HTMLElement;\n                },\n            });\n        }\n    };\n\n    const signTx = async () => {\n        if (!transactionData) return;\n\n        setLoading(true);\n\n        const unsigned = JSON.stringify(transactionData);\n        console.log('unsigned tx:', unsigned);\n\n        let result;\n        try {\n            result = await window.particleAuth?.ethereum.sendTransaction({ ...transactionData });\n            analyticsRecord({\n                // eslint-disable-next-line camelcase\n                record_type: RecordType.PAGE_SIGN_CONFIRM_BUTTON_CLICK_SUCCESS, // confirm\u6210\u529F\n            });\n        } catch (error: any) {\n            console.error(method, error);\n            analyticsRecord({\n                // eslint-disable-next-line camelcase\n                record_type: RecordType.PAGE_SIGN_CONFIRM_BUTTON_CLICK_FAILURE, // confirm\u5931\u8D25\n            });\n            if (error?.error_code === 50103 && !userInfo?.security_account?.has_set_payment_password) {\n                loadsecurityAccounts();\n            } else if (\n                error?.message === 'Local Key not found' ||\n                error?.message === 'Master password decryption error'\n            ) {\n                navigate(AuthPage.MasterPasswordVerify);\n            } else {\n                Modal.error({\n                    title: error.message ?? 'Send Transaction Error',\n                    wrapClassName: 'auth-core-modal-error',\n                    getContainer: () => {\n                        return authCoreModal.rootBody as HTMLElement;\n                    },\n                    okText: t('common.confirm'),\n                    onOk: () => {\n                        redirectToApp({\n                            error: error,\n                        });\n                    },\n                });\n            }\n        } finally {\n            setLoading(false);\n        }\n        if (result) {\n            redirectToApp({\n                result,\n            });\n        }\n    };\n\n    const signData = async () => {\n        setLoading(true);\n        let result;\n        try {\n            if (isPersonalSign) {\n                result = await window.particleAuth?.ethereum.signMessage(param as string);\n            } else {\n                result = await window.particleAuth?.ethereum.signTypedData({\n                    data: param as any,\n                    version: ethereumUtils.getSignTypedVersion(method),\n                    uniq: ethereumUtils.isSignTypedDataUniq(method),\n                });\n            }\n            analyticsRecord({\n                // eslint-disable-next-line camelcase\n                record_type: RecordType.PAGE_SIGN_CONFIRM_BUTTON_CLICK_SUCCESS, // confirm\u6210\u529F\n            });\n        } catch (error: any) {\n            console.error(method, error);\n            analyticsRecord({\n                // eslint-disable-next-line camelcase\n                record_type: RecordType.PAGE_SIGN_CONFIRM_BUTTON_CLICK_FAILURE, // confirm\u5931\u8D25\n            });\n            if (error?.error_code === 50103 && !userInfo?.security_account?.has_set_payment_password) {\n                loadsecurityAccounts();\n            } else if (\n                error?.message === 'Local Key not found' ||\n                error?.message === 'Master password decryption error'\n            ) {\n                navigate(AuthPage.MasterPasswordVerify);\n            } else {\n                message.error(error.message ?? (isPersonalSign ? 'Sign Message Error' : 'Sign Typed Data Error'));\n            }\n        } finally {\n            setLoading(false);\n        }\n\n        if (result) {\n            if (loginAuthorizationSign) {\n                events.emit(AuthCoreModalEvent.LoginSuccess, {\n                    ...userInfo,\n                    authorization: {\n                        message: param,\n                        signature: result,\n                    },\n                });\n            } else {\n                redirectToApp({\n                    result,\n                });\n            }\n        }\n    };\n\n    const cancelSign = async () => {\n        if (loading) {\n            return;\n        }\n        //\u8FD4\u56DEapp\n        redirectToApp({\n            error: AuthError.userRejectedRequest(),\n        });\n    };\n\n    const formatValue = (data: any) => {\n        if (isEVMAddress(data.value)) {\n            return shortString(formatAddress(data.value, chainInfo));\n        }\n        return data.value;\n    };\n\n    const signMessageTitle = useMemo(() => {\n        let title = '';\n        if (method.includes(EvmRpcMethod.ethSignTypedData)) {\n            try {\n                const { primaryType } = param as any;\n                title = primaryType;\n            } catch (error) {\n                // pase error\n            }\n        }\n        return title || 'Message';\n    }, [method, param]);\n\n    const sMessage = useMemo(() => {\n        if (method.includes(EvmRpcMethod.ethSignTypedData)) {\n            try {\n                const signQueryMessage = param as any;\n                let { message } = signQueryMessage;\n\n                if (!signQueryMessage.message) {\n                    message = signQueryMessage;\n                }\n\n                return message;\n            } catch (error) {\n                // pase error\n            }\n        }\n        return {};\n    }, [method, param]);\n\n    const getRow = (key: string, index: number) => {\n        key = key.replace('ROOT.', '');\n        let value = jt.getValByKeyPath(sMessage, key);\n        let isTitle = false;\n        if (typeof value !== 'string' && typeof value !== 'number') {\n            value = '';\n            isTitle = true;\n        }\n        const indent = key.split('.').length;\n\n        return (\n            <div key={index} className=\"s-row\">\n                <div\n                    className=\"label\"\n                    style={{\n                        paddingLeft: 20 * indent,\n                    }}\n                    data-type={isTitle ? 'title' : ''}\n                >\n                    {key.split('.').pop()}\uFF1A\n                </div>\n\n                {isEVMAddress(value) ? (\n                    <CopyToClipboard text={value} onCopy={() => message.success(t('new.copied_to'))}>\n                        <div className=\"value copy-text\">{formatValue({ value })}</div>\n                    </CopyToClipboard>\n                ) : (\n                    <div\n                        className=\"value\"\n                        onClick={(e) => {\n                            e.stopPropagation();\n                        }}\n                    >\n                        {value}\n                    </div>\n                )}\n            </div>\n        );\n    };\n    // sign message\n    const signMessage = () => {\n        return (\n            <div className=\"sign-message\">\n                <div\n                    className={'message' + (hasSetPaymentPassword ? '' : ' no-password-tip')}\n                    data-transaction-type={transactionInfo?.type}\n                >\n                    {!method.includes(EvmRpcMethod.ethSignTypedData) && (\n                        <div className=\"pre-wrap personal-message\">{decodeMessage(param as string)}</div>\n                    )}\n\n                    {method.includes(EvmRpcMethod.ethSignTypedData) && (\n                        <>\n                            <div className=\"s-row\">\n                                <div className=\"label\" data-type=\"title\">\n                                    {signMessageTitle}\n                                </div>\n                            </div>\n                            {jt.travelJson(sMessage).map((key: string, index: number) => {\n                                return getRow(key, index);\n                            })}\n                        </>\n                    )}\n                </div>\n            </div>\n        );\n    };\n\n    const getNFTName = (info: EVMNFTChange): string => {\n        if (info.name && info.name.length > 0) {\n            return info.name;\n        }\n\n        return `NFT#${info.tokenId}`;\n    };\n\n    const approveDisabled = (data?: EVMTransaction): boolean => {\n        if (method === EvmRpcMethod.ethSendTransaction) {\n            if (!data) {\n                return true;\n            }\n\n            if (isTron(chainInfo)) {\n                return false;\n            }\n\n            if (isEIP1559Type(data.type)) {\n                return !data.gasLimit || !data.maxPriorityFeePerGas || !data.maxFeePerGas;\n            } else {\n                return !data.gasLimit || !data.gasPrice;\n            }\n        }\n        return false;\n    };\n    const [displayDetail, setDisplayDetail] = useState<boolean>(false);\n\n    const isErc4361 = useMemo(() => {\n        // https://eips.ethereum.org/EIPS/eip-4361#example-message\n        let result = false;\n        if (isPersonalSign) {\n            const signMessage = decodeMessage(param as string);\n            const domain = signMessage.match(/^(.+)?\\swants you/)?.[1];\n            const address = signMessage.match(/wants you to sign in with your Ethereum account:\\n(.*)/)?.[1];\n            const uri = signMessage.match(/URI:(.*)/)?.[1];\n            const version = signMessage.match(/Version:(.*)/)?.[1];\n            const chainId = signMessage.match(/Chain ID:(.*)/)?.[1];\n            const nonce = signMessage.match(/Nonce:(.*)/)?.[1];\n            if (domain && address && uri && version && chainId && nonce) {\n                result = true;\n            }\n        }\n        return result;\n    }, [transactionData, isPersonalSign]);\n\n    useEffect(() => {\n        if (isErc4361) {\n            setHeaderTitle(t('new.sign_in_request') as string);\n            setHeaderDes(t('new.requesting_sign_4361') as string);\n        }\n    }, [isErc4361]);\n\n    // sign/send transaction\n    const signTransaction = () => {\n        return (\n            <Tabs defaultActiveKey=\"1\">\n                <TabPane tab={t('sign.details')} key=\"1\">\n                    <div className=\"balance-change\">\n                        <div className=\"title\">{t('sign.estimated_balance_change')}</div>\n                        <div className=\"change-body\">\n                            {transactionInfo?.estimatedChanges?.natives\n                                ?.filter((info) => info.address.toLowerCase() === address?.toLowerCase())\n                                ?.map((info, index) => {\n                                    return (\n                                        <div className=\"change-title\" key={`native-change-${index}`}>\n                                            {getNativeSymbol(chainInfo)}\n                                            <div\n                                                className=\"change-val\"\n                                                style={info.nativeChange.includes('-') ? { color: '#ea4335' } : {}}\n                                            >\n                                                {info.nativeChange.includes('-') || info.nativeChange === '0'\n                                                    ? ''\n                                                    : '+'}\n                                                {isTron(chainInfo)\n                                                    ? fromSunFormat(info.nativeChange)\n                                                    : fromWeiFormat(info.nativeChange, 'ether', 18)}\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n\n                            {transactionInfo?.estimatedChanges?.nfts?.map((info, index) => {\n                                return (\n                                    <div className=\"change-title\" key={`nft-change-${index}`}>\n                                        {getNFTName(info)}\n                                        <div\n                                            className=\"change-val\"\n                                            style={info.amountChange < 0 ? { color: '#ea4335' } : {}}\n                                        >\n                                            {info.amountChange < 0 ? '' : '+'}\n                                            {info.amountChange}\n                                        </div>\n                                    </div>\n                                );\n                            })}\n\n                            {transactionInfo?.estimatedChanges?.tokens?.map((info, index) => {\n                                return (\n                                    <div className=\"change-title\" key={`token-change-${index}`}>\n                                        {info.name ? info.name : 'Unknown Token'}\n                                        <div\n                                            className=\"change-val\"\n                                            style={info.amountChange < 0 ? { color: '#ea4335' } : {}}\n                                        >\n                                            {info.amountChange < 0 ? '' : '+'}\n                                            {formatTokenAmount2(info.amountChange, info.decimals)}\n                                        </div>\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n\n                    {transactionInfo && (\n                        <div className=\"from-to\">\n                            <div className=\"address-item\">\n                                <div>{t('sign.from')}</div>\n                                <div>{shortString(formatAddress(transactionInfo.data.from, chainInfo))}</div>\n                            </div>\n                            <div className=\"address-item mt10\">\n                                <div>{t('sign.to')}</div>\n                                <div>{shortString(formatAddress(transactionInfo.data.to, chainInfo))}</div>\n                            </div>\n                            {!isTron(chainInfo) && (\n                                <div className=\"address-item mt10\">\n                                    <div>{t('sign.nonce')}</div>\n                                    <div>#{parseInt(transactionInfo.data.nonce)}</div>\n                                </div>\n                            )}\n                        </div>\n                    )}\n\n                    {!gasError && transactionData && !isTron(chainInfo) && (\n                        <GasDisplay\n                            openGasDrawer={() => setGasVis(true)}\n                            signLoading={loading}\n                            chainInfo={chainInfo}\n                            signMethod={method}\n                        />\n                    )}\n\n                    {gasError && !isTron(chainInfo) && <NoGas />}\n                </TabPane>\n                <TabPane tab={t('sign.data')} key=\"2\">\n                    <div>\n                        {transactionInfo && transactionInfo.data.function && (\n                            <div className=\"inner-instruction\" key={'instruction-function'}>\n                                <div className=\"inner-content\">\n                                    <div className=\"content-item\">\n                                        <div className=\"item\">\n                                            <div className=\"item-0\">\n                                                {t('sign.function_type')}{' '}\n                                                {formatFunction(transactionInfo.data.function)}\n                                            </div>\n\n                                            {transactionInfo.data.function.params.map((item) => (\n                                                <div className=\"item-1 mt10\" key={`instruction-function${item.name}`}>\n                                                    {shortString(item.name)}\n                                                    <span>{shortString(item.value)}</span>\n                                                </div>\n                                            ))}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        )}\n\n                        {/* hex data */}\n\n                        {transactionInfo && (\n                            <div className=\"inner-instruction\" key={'instruction-hex-data'}>\n                                <div className=\"inner-content\">\n                                    <div className=\"content-item\">\n                                        <div className=\"item\">\n                                            <div className=\"item-0\">{t('sign.hex_data')}</div>\n                                            <div className=\"item-1 mt10\">\n                                                <div className=\"data\">{transactionInfo.data.data}</div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                </TabPane>\n            </Tabs>\n        );\n    };\n\n    const editApproveAmount = async (amount: string) => {\n        setChangeApproveAmount(amount);\n\n        if (amount && amount !== '' && transactionInfo) {\n            const { decimals = 18 } = transactionInfo?.estimatedChanges?.tokens?.[0] || {};\n\n            BigNumber.config({ EXPONENTIAL_AT: [-256, 256] });\n            const bn = new BigNumber(amount).multipliedBy(new BigNumber(10).pow(decimals));\n            const approveAmount = bn.toString();\n            BigNumber.config({ EXPONENTIAL_AT: [-7, 21] });\n\n            const spender = transactionInfo.data?.function?.params?.[0]?.value || '';\n\n            const encodeData = await window.particleAuth?.ethereum.request({\n                chainId: chainInfo.id,\n                method: 'particle_abi_encodeFunctionCall',\n                params: [transactionInfo.data.to, 'erc20_approve', [spender, approveAmount]],\n            });\n\n            updateTransaction({\n                data: encodeData,\n            });\n        }\n    };\n\n    return (\n        <>\n            <style>{styles as unknown as string}</style>\n            {transactionInfo?.type ||\n            renderPageType === RenderPageType.SIGN_TYPE_DATA ||\n            renderPageType === RenderPageType.SIGN_MESSAGE ? (\n                <div\n                    className={`info-sign info-sign-${transactionInfo?.type}`}\n                    data-type={transactionInfo?.type}\n                    ref={infoSignRef}\n                >\n                    {!hasSetPaymentPassword && (\n                        <div className=\"has-payment-password\">\n                            <div className=\"has-payment-password-icon\"></div>\n                            <div className=\"has-payment-password-tip\">{t('account.waring_tip1')}</div>\n                            <div className=\"has-payment-password-set\" onClick={setPaymentPassword}>\n                                {t('account.set')}\n                            </div>\n                        </div>\n                    )}\n                    <div className={'scroll-part' + (hasSetPaymentPassword ? '' : ' no-password-tip')}>\n                        <Menu userInfo={userInfo} transactionInfo={transactionInfo} />\n                        <div className=\"info-request\">\n                            {modalOptions.erc4337 && (\n                                // <div className=\"aa-tag\">AA</div>\n                                <div className=\"aa-icon\">\n                                    <Image\n                                        src={getAAIcon(\n                                            ((modalOptions.erc4337 as any)?.name ?? 'BICONOMY').toLowerCase(),\n                                            modalOptions.themeType || 'light'\n                                        )}\n                                        fallback={defaultTokenIcon}\n                                        preview={false}\n                                    />\n                                </div>\n                            )}\n                            {headerTitle}\n                        </div>\n                        <div className=\"info-title\">\n                            <Image src={getChainIcon(chainInfo)} fallback={defaultTokenIcon} preview={false} />\n                            {getChainDisplayName(chainInfo)}\n                        </div>\n                        <CopyToClipboard\n                            text={addressDisplayed || ''}\n                            onCopy={() => message.success(t('new.copied_to'))}\n                        >\n                            <div className=\"info-address\">\n                                {shortString(addressDisplayed)}\n                                <div className=\"copy-icon\">\n                                    <IconCopy />\n                                </div>\n                            </div>\n                        </CopyToClipboard>\n                        <div className=\"info-des\">{headerDes}</div>\n                        <div className=\"apart-line\"></div>\n                        {transactionInfo?.type === TransactionSmartType.NativeTransfer ||\n                        transactionInfo?.type === TransactionSmartType.ERC20_TRANSFER ||\n                        transactionInfo?.type === TransactionSmartType.ERC20_APPROVE ||\n                        transactionInfo?.type === TransactionSmartType.ERC721_TRANFER ||\n                        transactionInfo?.type === TransactionSmartType.ERC1155_TRANFER ||\n                        transactionInfo?.type === TransactionSmartType.SEAPORT_CANCEL_ORDER ||\n                        transactionInfo?.type === TransactionSmartType.SEAPORT_FULFILL_ORDER ||\n                        transactionInfo?.type === TransactionSmartType.SEAPORT_NFT_LISTING ? (\n                            <NewErcTransfers\n                                setDisplayDetail={setDisplayDetail}\n                                displayDetail={displayDetail}\n                                gasError={gasError}\n                                setGasVis={setGasVis}\n                                formatFunction={formatFunction}\n                                transactionInfo={transactionInfo}\n                                changeApproveAmount={changeApproveAmount}\n                                setChangeApproveAmount={editApproveAmount}\n                                signLoading={loading}\n                                signMessage={signMessage}\n                                chainInfo={chainInfo}\n                                signMethod={method}\n                            />\n                        ) : method === EvmRpcMethod.ethSendTransaction ? (\n                            signTransaction()\n                        ) : method !== EvmRpcMethod.ethSendTransaction ? (\n                            signMessage()\n                        ) : (\n                            ''\n                        )}\n                    </div>\n\n                    <div className=\"btn-box\">\n                        <div>\n                            <Button className=\"btn-cancel\" onClick={cancelSign}>\n                                {t('common.cancel')}\n                            </Button>\n                            <Button\n                                className={`btn-approve ${gasError || hasSecurityRisk ? 'still-confirm' : ''}`}\n                                onClick={() => {\n                                    if (hasSecurityRisk) {\n                                        setRiskPrompt(true);\n                                    } else {\n                                        approveSign();\n                                    }\n                                }}\n                                loading={loading}\n                                disabled={approveDisabled(transactionData)}\n                            >\n                                {isErc4361\n                                    ? t('new.sign_in')\n                                    : gasError || hasSecurityRisk\n                                    ? t('common.still_confirm')\n                                    : t('common.confirm')}\n                            </Button>\n                        </div>\n\n                        <PowerFooter></PowerFooter>\n                    </div>\n\n                    {hasSecurityRisk && transactionInfo?.securityDetection && (\n                        <>\n                            <RiskReminder securityDetection={transactionInfo?.securityDetection}></RiskReminder>\n                            <Modal\n                                className=\"risk-modal\"\n                                open={riskPrompt}\n                                closeIcon={<CircleClose />}\n                                centered\n                                maskClosable={false}\n                                onCancel={() => {\n                                    setRiskPrompt(false);\n                                }}\n                                getContainer={() => {\n                                    return authCoreModal.rootBody as HTMLDivElement;\n                                }}\n                            >\n                                <style>{riskModalStyle as unknown as string}</style>\n                                <div className=\"risk-modal-title\">{t('sign.risk_hint_title')}</div>\n                                <RiskTypography\n                                    className=\"risk-modal-content\"\n                                    securityDetection={transactionInfo?.securityDetection}\n                                    title={t('sign.risk_identified') as string}\n                                />\n                                <div className=\"risk-bottom-btn-box\">\n                                    <Button\n                                        className=\"primary-antd-btn secondary\"\n                                        onClick={() => {\n                                            setRiskPrompt(false);\n                                        }}\n                                    >\n                                        {t('common.cancel')}\n                                    </Button>\n                                    <Button\n                                        className=\"primary-antd-btn danger\"\n                                        onClick={() => {\n                                            approveSign();\n                                            setRiskPrompt(false);\n                                        }}\n                                    >\n                                        {t('common.confirm')}\n                                    </Button>\n                                </div>\n                            </Modal>\n                        </>\n                    )}\n\n                    <EvmGas openGasDrawer={() => setGasVis(false)} visible={gasVis} />\n                </div>\n            ) : (\n                <ParticleLoading />\n            )}\n        </>\n    );\n}\n\nexport default EvmSign;\n", "import { isNeedRestoreWallet, syncUserInfo } from '@particle-network/auth-core';\nimport React, { useEffect } from 'react';\nimport { AuthPage } from '../../components/customRouter';\nimport { useCustomNavigate } from '../../context';\nimport EvmSign from './components/evm-sign';\nimport { EVMContextProvider } from './evmContextProvider';\n\nexport type EvmSignProps = {\n    method: string;\n    param: unknown;\n    loginAuthorizationSign?: boolean;\n};\n\nfunction Sign(props: EvmSignProps) {\n    const navigate = useCustomNavigate();\n\n    useEffect(() => {\n        syncUserInfo().catch((e) => console.log('syncUserInfo', e));\n        if (isNeedRestoreWallet()) {\n            navigate(AuthPage.MasterPasswordVerify);\n        }\n    }, []);\n\n    return (\n        <EVMContextProvider {...props}>\n            <EvmSign {...props} />\n        </EVMContextProvider>\n    );\n}\n\nexport default Sign;\n", "import type { PublicKey } from '@solana/web3.js';\n\nconst SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID = 'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL';\n\nconst solana = {\n    async findAssociatedTokenAddress(walletAddress: string, tokenMintAddress: string): Promise<PublicKey> {\n        const { TOKEN_PROGRAM_ID } = await import('@solana/spl-token');\n        const { PublicKey } = await import('@solana/web3.js');\n        return PublicKey.findProgramAddressSync(\n            [\n                new PublicKey(walletAddress).toBuffer(),\n                TOKEN_PROGRAM_ID.toBuffer(),\n                new PublicKey(tokenMintAddress).toBuffer(),\n            ],\n            new PublicKey(SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID)\n        )[0];\n    },\n};\n\nexport default solana;\n", "import { RecordType } from '@particle-network/analytics';\nimport {\n    SolanaEnhancedMethod,\n    SolanaRpcMethod,\n    analyticsRecord,\n    isNeedRestoreWallet,\n    particleAuth,\n    syncUserInfo,\n    type SolanaDeserializeTransactionResult,\n    type SplTokenChangeInfo,\n    type TokenChangeInfo,\n} from '@particle-network/auth-core';\nimport type { Transaction, VersionedTransaction } from '@solana/web3.js';\nimport { Button, Modal, Tabs } from 'antd';\nimport bs58 from 'bs58';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport { useTranslation } from 'react-i18next';\nimport { AuthError } from '../../../api/model/authError';\nimport { PromptSettingType } from '../../../api/model/bundle';\nimport { AuthPage } from '../../../components/customRouter';\nimport IconCopy from '../../../components/icon/icon-copy';\nimport PowerFooter from '../../../components/power-footer';\nimport { useAuthCoreModal, useCustomNavigate, useEvents, useModalOptions, useParticleAuth } from '../../../context';\nimport { useError } from '../../../context/hooks/useError';\nimport useMessage from '../../../context/hooks/useMessage';\nimport { usePaymentPassword } from '../../../context/hooks/usePaymentPassword';\nimport { AuthCoreModalEvent } from '../../../context/types';\nimport { getChainDisplayName, getChainIcon } from '../../../utils/chain-utils';\nimport { shortString } from '../../../utils/common-utils';\nimport { formatTokenAmount } from '../../../utils/number-utils';\nimport solana from '../../../utils/solana-utils';\nimport styles from './info-sign.less';\nimport Menu from './menu';\n\ninterface IProps {\n    param: unknown;\n    method: SolanaRpcMethod;\n    chainId?: number;\n}\nfunction InfoSign(props: IProps) {\n    const { method, param, chainId } = props;\n    const { t } = useTranslation();\n    const navigate = useCustomNavigate();\n    const { setPaymentVerify, userInfo, setPaymentPassword } = useParticleAuth();\n    const { events } = useEvents();\n    const { modalOptions } = useModalOptions();\n    const { authCoreModal } = useAuthCoreModal();\n    const { errorHandle } = useError();\n\n    const [loading, setLoading] = useState(false);\n    const message = useMessage();\n    const [transactionInfo, setTransactionInfo] = useState<SolanaDeserializeTransactionResult>();\n\n    const [nftChanges, setNftChanges] = useState<TokenChangeInfo[]>();\n\n    const [tokenChanges, setTokenChanges] = useState<SplTokenChangeInfo[]>();\n\n    const [headerTitle, setHeaderTitle] = useState<string>('');\n    const [headerDes, setHeaderDes] = useState<string>('');\n\n    const { hasSetPaymentPassword, showSetPaymentPasswordOrConfirm } = usePaymentPassword();\n\n    const chain = useMemo(() => {\n        return {\n            id: chainId || particleAuth.solana.chainId,\n            name: 'Solana',\n        };\n    }, []);\n\n    const shortAddress = useMemo(() => {\n        const address = particleAuth.solana.selectedAddress as string;\n        return shortString(address);\n    }, []);\n\n    useEffect(() => {\n        syncUserInfo().catch((e) => console.log('syncUserInfo', e));\n        if (isNeedRestoreWallet()) {\n            navigate(AuthPage.MasterPasswordVerify);\n        }\n    }, [navigate]);\n\n    const loadsecurityAccounts = () => {\n        syncUserInfo()\n            .then(() => {\n                approveSign();\n            })\n            .catch((error) => {\n                setLoading(false);\n                message.error(error.message ?? 'Sign Error');\n            });\n    };\n\n    const finallyHandle = (result: any, error?: any) => {\n        events.emit(AuthCoreModalEvent.SignResponse, {\n            result,\n            error,\n        });\n    };\n\n    async function asyncFilter<T>(predicate: (indo: T) => Promise<boolean>, arr?: T[]): Promise<T[]> {\n        if (!arr) {\n            return [];\n        }\n        const results = await Promise.all(arr.map(predicate));\n        return arr.filter((_v, index) => results[index]);\n    }\n\n    const approveSign = async () => {\n        if (!method) return;\n\n        analyticsRecord({\n            // eslint-disable-next-line camelcase\n            record_type: RecordType.PAGE_SIGN_CONFIRM_BUTTON_CLICK, // confirm\u6309\u94AE\u70B9\u51FB\n        });\n\n        if (userInfo?.security_account?.has_set_payment_password) {\n            setPaymentVerify({\n                visible: true,\n                onVerifyCompleted: approveSignImpl,\n            });\n        } else if (\n            method === SolanaRpcMethod.signAndSendTransaction ||\n            method === SolanaRpcMethod.signTransaction ||\n            method === SolanaRpcMethod.signAllTransactions ||\n            modalOptions?.promptSettingConfig?.promptPaymentPasswordSettingWhenSign ===\n                PromptSettingType.everyAndNotSkip\n        ) {\n            // \u663E\u793A\u8BBE\u7F6E\u652F\u4ED8\u5BC6\u7801\n            showSetPaymentPasswordOrConfirm(approveSignImpl);\n        } else {\n            approveSignImpl();\n        }\n    };\n\n    const approveSignImpl = async () => {\n        if (!method) return;\n        setLoading(true);\n        let signed;\n        try {\n            if (method === SolanaRpcMethod.signMessage) {\n                signed = await particleAuth.solana.signMessage(param as Uint8Array);\n            } else if (method === SolanaRpcMethod.signAndSendTransaction) {\n                signed = await particleAuth.solana.signAndSendTransaction(\n                    param as Transaction | VersionedTransaction,\n                    chain.id\n                );\n            } else if (method === SolanaRpcMethod.signTransaction) {\n                signed = await particleAuth.solana.signTransaction(\n                    param as Transaction | VersionedTransaction,\n                    chain.id\n                );\n            } else if (method === SolanaRpcMethod.signAllTransactions) {\n                signed = await particleAuth.solana.signAllTransactions(\n                    param as (Transaction | VersionedTransaction)[],\n                    chain.id\n                );\n            } else {\n                throw new Error('Unknown method');\n            }\n\n            analyticsRecord({\n                // eslint-disable-next-line camelcase\n                record_type: RecordType.PAGE_SIGN_CONFIRM_BUTTON_CLICK_SUCCESS, // confirm\u6210\u529F\n            });\n        } catch (e: any) {\n            console.error('approveSignImpl error', method, e);\n            analyticsRecord({\n                // eslint-disable-next-line camelcase\n                record_type: RecordType.PAGE_SIGN_CONFIRM_BUTTON_CLICK_FAILURE, // confirm\u5931\u8D25\n            });\n\n            if (e?.error_code === 50103 && !userInfo?.security_account?.has_set_payment_password) {\n                loadsecurityAccounts();\n            } else if (e?.message === 'Local Key not found' || e?.message === 'Master password decryption error') {\n                navigate(AuthPage.MasterPasswordVerify);\n            } else {\n                errorHandle(e);\n            }\n        } finally {\n            setLoading(false);\n        }\n\n        if (signed) {\n            finallyHandle(signed);\n        }\n    };\n\n    useEffect(() => {\n        if (method === SolanaRpcMethod.signMessage) {\n            setHeaderTitle(t('sign.signature_message') as string);\n            setHeaderDes(t('sign.signature_title') as string);\n        } else if (method === SolanaRpcMethod.signAndSendTransaction) {\n            setHeaderTitle(t('sign.send_transaction') as string);\n            setHeaderDes(t('sign.approve_and').format(getChainDisplayName(chain)));\n            const serializeTx = (param as Transaction | VersionedTransaction).serialize({\n                requireAllSignatures: false,\n                verifySignatures: false,\n            });\n            deserializeTransaction([bs58.encode(serializeTx)]);\n        } else if (method === SolanaRpcMethod.signTransaction) {\n            setHeaderTitle(t('sign.sign_transaction') as string);\n            setHeaderDes(t('sign.sign_but') as string);\n            const serializeTx = (param as Transaction | VersionedTransaction).serialize({\n                requireAllSignatures: false,\n                verifySignatures: false,\n            });\n            deserializeTransaction([bs58.encode(serializeTx)]);\n        } else if (method === SolanaRpcMethod.signAllTransactions) {\n            setHeaderTitle(t('sign.sign_transaction') as string);\n            setHeaderDes(t('sign.sign_but') as string);\n            const serializeTxs = (param as (Transaction | VersionedTransaction)[]).map((tx) =>\n                bs58.encode(\n                    tx.serialize({\n                        requireAllSignatures: false,\n                        verifySignatures: false,\n                    })\n                )\n            );\n            deserializeTransaction(serializeTxs);\n        } else {\n            throw new Error('Unknown method');\n        }\n    }, [param]);\n\n    useEffect(() => {\n        // init connect();\n        particleAuth.solana.connect();\n    }, []);\n\n    const deserializeTransaction = (messages: string[]) => {\n        particleAuth.solana\n            .request({\n                chainId: chain.id,\n                method: SolanaEnhancedMethod.enhancedDeserializeTransaction,\n                params: messages,\n            })\n            .then((result) => {\n                setTransactionInfo(result);\n                asyncFilter(async (info: any) => {\n                    const associatedTokenAddress = await solana.findAssociatedTokenAddress(\n                        particleAuth.solana.selectedAddress as string,\n                        info.mint\n                    );\n                    return info.associatedTokenAddress === associatedTokenAddress.toBase58();\n                }, result?.estimatedChanges?.nfts).then((results) => {\n                    console.log('NFTChanges', results.length);\n                    setNftChanges(results);\n                });\n\n                asyncFilter(async (info: any) => {\n                    const associatedTokenAddress = await solana.findAssociatedTokenAddress(\n                        particleAuth.solana.selectedAddress as string,\n                        info.mint\n                    );\n                    return info.associatedTokenAddress === associatedTokenAddress.toBase58();\n                }, result?.estimatedChanges?.tokens).then((results) => {\n                    console.log('TokenChanges', results.length);\n                    setTokenChanges(results);\n                });\n            })\n            .catch((error) => {\n                console.log('deserializeTransaction error', error);\n                Modal.error({\n                    title: error.message ?? 'Deserialize Transaction Error',\n                    okCancel: true,\n                    cancelText: t('common.cancel'),\n                    okText: t('common.retry'),\n                    wrapClassName: 'auth-core-modal-error',\n                    getContainer: () => {\n                        return authCoreModal.rootBody as HTMLElement;\n                    },\n                    onOk: () => {\n                        deserializeTransaction(messages);\n                    },\n                });\n            });\n    };\n\n    const signMessage = () => {\n        const textDecoder = new TextDecoder();\n        const decodedString = textDecoder.decode(param as any);\n        return (\n            <div className=\"sign-message\">\n                <div className={'message' + (hasSetPaymentPassword ? '' : ' no-password-tip')}>\n                    <div className=\"pre-wrap personal-message\">{decodedString}</div>\n                </div>\n            </div>\n        );\n    };\n\n    const signTransaction = () => {\n        return (\n            <Tabs\n                defaultActiveKey=\"1\"\n                items={[\n                    {\n                        label: t('sign.details'),\n                        key: '1',\n                        children: (\n                            <>\n                                <div className=\"balance-change\">\n                                    <div className=\"title\">{t('sign.estimated_balance_change')}</div>\n                                    <div className=\"change-body\">\n                                        {transactionInfo?.estimatedChanges?.sols\n                                            .filter(\n                                                (info) =>\n                                                    info.address === (particleAuth?.solana?.selectedAddress as string)\n                                            )\n                                            .map((info, index) => {\n                                                return (\n                                                    <div className=\"change-title\" key={`sol-change-${index}`}>\n                                                        SOL\n                                                        <div\n                                                            className=\"change-val\"\n                                                            style={info.lamportsChange < 0 ? { color: '#ea4335' } : {}}\n                                                        >\n                                                            {info.lamportsChange < 0 ? '' : '+'}\n                                                            {formatTokenAmount(info.lamportsChange, 9)}\n                                                        </div>\n                                                    </div>\n                                                );\n                                            })}\n\n                                        {nftChanges?.map((info, index) => {\n                                            return (\n                                                <div className=\"change-title\" key={`nft-change-${index}`}>\n                                                    {info.name ? info.name : 'Unknown NFT'}\n                                                    <div\n                                                        className=\"change-val\"\n                                                        style={info.amountChange < 0 ? { color: '#ea4335' } : {}}\n                                                    >\n                                                        {info.amountChange < 0 ? '' : '+'}\n                                                        {info.amountChange}\n                                                    </div>\n                                                </div>\n                                            );\n                                        })}\n\n                                        {tokenChanges?.map((info, index) => {\n                                            return (\n                                                <div className=\"change-title\" key={`token-change-${index}`}>\n                                                    {info.name ? info.name : 'Unknown Token'}\n                                                    <div\n                                                        className=\"change-val\"\n                                                        style={info.amountChange < 0 ? { color: '#ea4335' } : {}}\n                                                    >\n                                                        {info.amountChange < 0 ? '' : '+'}\n                                                        {formatTokenAmount(info.amountChange, info.decimals)}\n                                                    </div>\n                                                </div>\n                                            );\n                                        })}\n                                    </div>\n                                </div>\n\n                                <div className=\"net-fee solana\">\n                                    <div className=\"title\">\n                                        {t('sign.network_fee')}\n                                        {transactionInfo && (\n                                            <div className=\"fee-val\">\n                                                {formatTokenAmount(transactionInfo.estimatedLamportsFee, 9)} SOL\n                                            </div>\n                                        )}\n                                    </div>\n                                </div>\n                            </>\n                        ),\n                    },\n                    {\n                        label: t('sign.data'),\n                        key: '2',\n                        children: (\n                            <div>\n                                {transactionInfo?.instructions.map((instruction, index) => {\n                                    return (\n                                        <div className=\"inner-instruction\" key={`instruction-${index}`}>\n                                            <div className=\"inner-content\">\n                                                <div className=\"content-item\">\n                                                    <div className=\"item\">\n                                                        <div className=\"item-0\">\n                                                            #{index + 1} - {t(`program.${instruction.type}`)}\n                                                        </div>\n                                                        <div className=\"item-1 mt10\">\n                                                            {t('sign.program_id')}\n                                                            <span>{shortString(instruction.programId)}</span>\n                                                        </div>\n                                                        <div className=\"item-1 mt15\">\n                                                            {t('sign.data')}\n                                                            <span>{shortString(instruction.data)}</span>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        ),\n                    },\n                ]}\n            />\n        );\n    };\n\n    return (\n        <div className=\"info-sign\">\n            <style>{styles as unknown as string}</style>\n            {!hasSetPaymentPassword && (\n                <div className=\"has-payment-password\">\n                    <div className=\"has-payment-password-icon\"></div>\n                    <div className=\"has-payment-password-tip\">{t('account.waring_tip1')}</div>\n                    <div className=\"has-payment-password-set\" onClick={setPaymentPassword}>\n                        {t('account.set')}\n                    </div>\n                </div>\n            )}\n            <div className={'scroll-part' + (hasSetPaymentPassword ? '' : ' no-password-tip')}>\n                <Menu userInfo={userInfo} transactionInfo={transactionInfo} />\n                <div className=\"info-request\">{headerTitle}</div>\n                <div className=\"info-title\">\n                    <img src={getChainIcon(chain)} alt=\"\" />\n                    {getChainDisplayName(chain)}\n                </div>\n                <CopyToClipboard\n                    text={particleAuth.solana.selectedAddress as string}\n                    onCopy={() => message.success(t('new.copied_to'))}\n                >\n                    <div className=\"info-address\">\n                        {shortAddress}\n                        <div className=\"copy-icon\">\n                            <IconCopy />\n                        </div>\n                    </div>\n                </CopyToClipboard>\n                <div className=\"info-des\">{headerDes}</div>\n                <div className=\"apart-line\"></div>\n                {method === SolanaRpcMethod.signMessage && signMessage()}\n                {method !== SolanaRpcMethod.signMessage && signTransaction()}\n            </div>\n\n            <div className=\"btn-box\">\n                <div>\n                    <Button\n                        className=\"btn-cancel\"\n                        onClick={() => {\n                            if (!loading) {\n                                finallyHandle(undefined, AuthError.userRejectedRequest());\n                            }\n                        }}\n                    >\n                        {t('common.cancel')}\n                    </Button>\n                    <Button className=\"btn-approve\" onClick={approveSign} loading={loading}>\n                        {t('common.confirm')}\n                    </Button>\n                </div>\n                <PowerFooter></PowerFooter>\n            </div>\n        </div>\n    );\n}\n\nexport default InfoSign;\n", "import {\n    ApiError,\n    bindSecurityAccount,\n    getBindSecurityAccounCaptcha,\n    getCloudflareTurnstileResponse,\n    syncUserInfo,\n} from '@particle-network/auth-core';\nimport { useInterval, useRequest } from 'ahooks';\nimport { Button } from 'antd';\nimport throttle from 'lodash/throttle.js';\nimport qs from 'qs';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport SVGIcon from '../../../components/icon/svg-icon';\nimport PowerFooter from '../../../components/power-footer';\nimport AuthCode from '../../../components/react-auth-code-input';\nimport { useAuthCoreModal, useCustomNavigate } from '../../../context';\nimport { useCustomize } from '../../../context/hooks/useCustomize';\nimport useMessage from '../../../context/hooks/useMessage';\nimport styles from './index.less';\n\nconst CaptchaInput = (props: any) => {\n    const { bindAccount, backToInputAccount, redirectUrl = '', verifyToken = '' } = props;\n    const message = useMessage();\n    const { t } = useTranslation();\n\n    const { themeType, language } = useCustomize();\n\n    const navigate = useCustomNavigate();\n\n    const [captchaCode, setCaptchaCode] = useState<string>('');\n\n    const [interval, setInterval] = useState<number | undefined>(1000);\n\n    const [countdown, setCountdown] = useState(60);\n\n    const [errorTip, setErrorTip] = useState<string>();\n\n    const inputRef = useRef(null);\n\n    const { authCoreModal } = useAuthCoreModal();\n\n    useInterval(() => {\n        if (countdown > 0) {\n            const result = countdown - 1;\n            setCountdown(result);\n            if (result === 0) {\n                setInterval(undefined);\n            }\n        }\n    }, interval);\n\n    const { loading: bindLoading, run: runBinding } = useRequest(bindSecurityAccount, {\n        manual: true,\n        onSuccess: (result: any) => {\n            syncUserInfo();\n\n            if (redirectUrl) {\n                navigate(redirectUrl.split('?')[0], {\n                    replace: true,\n                    back: true,\n                    state: {\n                        ...qs.parse(redirectUrl.split('?')[1]),\n                        verifyToken: result?.token,\n                        account: bindAccount,\n                    },\n                });\n            } else if (!result.has_set_payment_password) {\n                // router to set payment password\n                navigate('/account/set-password');\n            } else {\n                navigate('/account/security', { replace: true });\n            }\n        },\n        onError: (error: any) => {\n            console.log('bind accounts error', error);\n            if (error?.error_code === ApiError.InvalidCode) {\n                setErrorTip(t('login.invalid_code') as string);\n            } else if (error?.error_code === ApiError.ResendCode) {\n                setErrorTip(t('login.please_send_again') as string);\n            }\n        },\n    });\n\n    const { loading: codeLoading, run: runGetCode } = useRequest(getBindSecurityAccounCaptcha, {\n        manual: true,\n        onSuccess: (result, params) => {\n            if (!interval) {\n                setCountdown(60);\n                setInterval(1000);\n            }\n        },\n        onError: (error: any) => {\n            setCountdown(0);\n            setInterval(undefined);\n        },\n    });\n\n    const submitBind = (code?: string) => {\n        let param: { email?: string; phone?: string; code: string; token?: string };\n        if (bindAccount.includes('@')) {\n            param = { email: bindAccount, code: code || captchaCode };\n        } else {\n            param = { phone: bindAccount, code: code || captchaCode };\n        }\n\n        if (verifyToken) {\n            param.token = verifyToken;\n        }\n        runBinding(param as any);\n    };\n\n    const requestCaptchaCode = () => {\n        setErrorTip('');\n        if (bindAccount.includes('@')) {\n            runGetCode({\n                email: bindAccount,\n            });\n        } else {\n            getCloudflareTurnstileResponse({\n                theme: themeType,\n                language,\n                getContainer: () => {\n                    return authCoreModal.rootBody as HTMLElement;\n                },\n            })\n                .then((token) => {\n                    runGetCode({\n                        phone: bindAccount,\n                        // eslint-disable-next-line camelcase\n                        cf_turnstile_response: token,\n                    });\n                })\n                .catch((error) => {\n                    message.error(t('error.server_20112'));\n                });\n        }\n    };\n\n    const onCodeInputChange = (code: string) => {\n        setCaptchaCode(code);\n        setErrorTip('');\n        if (code.length === 6) {\n            throttleSubmitBind(code);\n        }\n    };\n\n    const throttleSubmitBind = useCallback(\n        throttle(\n            (code) => {\n                submitBind(code);\n            },\n            1000,\n            {\n                leading: true,\n                trailing: false,\n            }\n        ),\n        []\n    );\n\n    useEffect(() => {\n        const elements = document.getElementsByClassName('react-input-code');\n        const contextmenuEvent = (e: any) => e.preventDefault();\n        elements[0]?.addEventListener('contextmenu', contextmenuEvent);\n        return () => {\n            elements[0]?.removeEventListener('contextmenu', contextmenuEvent);\n        };\n    }, []);\n\n    const handleCodeInputFocus = () => {\n        const elements = document.getElementsByClassName('input-code-item');\n        //@ts-ignore\n        elements[Math.min(captchaCode.length, 5)]?.focus();\n    };\n\n    return (\n        <div className=\"set-email-container\">\n            <style>{styles as unknown as string}</style>\n            <SVGIcon className=\"icon-navigation-back\" name=\"circle_back\" onClick={backToInputAccount} />\n            <h2 className=\"set-email-title\">{t('account.enter_code')}</h2>\n            <p className=\"set-email-desc-2\" style={{ margin: 20 }}>\n                {bindAccount}\n            </p>\n            <div onClick={handleCodeInputFocus}>\n                <AuthCode\n                    containerClassName=\"react-input-code\"\n                    inputClassName=\"input-code-item\"\n                    allowedCharacters=\"numeric\"\n                    length={6}\n                    ref={inputRef}\n                    placeholder={' '}\n                    onChange={onCodeInputChange}\n                />\n            </div>\n\n            {errorTip && <div className=\"code-error\">{errorTip}</div>}\n\n            <Button\n                disabled={captchaCode.length !== 6}\n                className=\"account-submit-btn\"\n                loading={bindLoading}\n                onClick={() => submitBind()}\n            >\n                {t('common.confirm')}\n            </Button>\n\n            <Button className=\"send-again\" onClick={requestCaptchaCode} disabled={countdown > 0 || codeLoading}>\n                {countdown > 0 ? `${t('login.send_again')} (${countdown}s)` : t('login.send_again')}\n            </Button>\n            <div className=\"back\" onClick={backToInputAccount}>\n                <SVGIcon className=\"arrow1-icon\" name=\"arrow1_icon\" />\n                <span>{t('login.back')}</span>\n            </div>\n            <PowerFooter />\n        </div>\n    );\n};\n\nexport default CaptchaInput;\n", "import { DownOutlined } from '@ant-design/icons';\nimport { getBindSecurityAccounCaptcha, getCloudflareTurnstileResponse } from '@particle-network/auth-core';\nimport { useRequest } from 'ahooks';\nimport { Button } from 'antd';\nimport getUnicodeFlagIcon from 'country-flag-icons/unicode';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { defaultCountriesData, getCurrentCountry } from '../../../api/model/all-countries';\nimport SVGIcon from '../../../components/icon/svg-icon';\nimport PowerFooter from '../../../components/power-footer';\nimport { useAuthCoreModal, useCustomNavigate } from '../../../context';\nimport { useCustomize } from '../../../context/hooks/useCustomize';\nimport useMessage from '../../../context/hooks/useMessage';\nimport { EmailRegExp, isPhoneValid } from '../../../utils';\nimport CaptchaInput from './captcha-input';\nimport styles from './index.less';\n\nconst AccountBind = (props: any) => {\n    const navigate = useCustomNavigate();\n\n    const { t } = useTranslation();\n    const state = props;\n    const redirectUrl = (state as any)?.redirectUrl;\n    const verifyToken = (state as any)?.verifyToken;\n    const message = useMessage();\n    const clickRef = useRef<any>();\n    const [bindAccount, setBindAccount] = useState<string>('');\n    const [countryData, setCountryData] = useState(['United States', 'us', '1']);\n    const [isSendCode, setIsSendCode] = useState(false);\n    const accountInputRef = useRef(null);\n    const [errorMsg, setError] = useState('');\n\n    const { themeType, language } = useCustomize();\n\n    const { authCoreModal } = useAuthCoreModal();\n\n    const [accountType, setAccountType] = useState<string>('email');\n\n    useEffect(() => {\n        if (accountType === 'phone' || (state as any)?.showSwitch) {\n            const currentCountry = getCurrentCountry();\n            if (currentCountry) {\n                setCountryData(currentCountry);\n            }\n        }\n    }, [accountType, (state as any)?.showSwitch]);\n\n    const [visbSelectCountry, setVisbSelectCountry] = useState(false);\n    useEffect(() => {\n        if (visbSelectCountry) {\n            document.addEventListener('click', clickCallback, true);\n            return () => {\n                document.removeEventListener('click', clickCallback, true);\n            };\n        }\n    }, [visbSelectCountry]);\n\n    const clickCallback = (event: any) => {\n        setTimeout(() => {\n            if (clickRef.current?.contains(event.target)) {\n                return;\n            }\n            setVisbSelectCountry(false);\n        });\n    };\n    useEffect(() => {\n        const type = (state as any)?.accountType;\n        if (type) {\n            setAccountType(type);\n        }\n    }, [state]);\n\n    const { loading: codeLoading, run: runGetCode } = useRequest(getBindSecurityAccounCaptcha, {\n        manual: true,\n        onSuccess: (result, params) => {\n            setIsSendCode(result);\n        },\n        onError: (error: any) => {\n            const code = error?.error_code || 0;\n            if (code === 50003 || code === 50004) {\n                setBindAccount('');\n                (accountInputRef.current as any).value = '';\n            }\n        },\n    });\n\n    const checkAndRequestCode = () => {\n        let account = (accountInputRef.current as any).value;\n\n        if (accountType === 'email') {\n            if (!account) {\n                return setError(t('account.input_vaild_email') as string);\n            } else if (!EmailRegExp.test(account)) {\n                return setError(t('login.email_format_error') as string);\n            }\n        } else {\n            const regionCode = countryData[1].toUpperCase();\n            if (!account && account !== '0') {\n                return setError(t('account.input_vaild_mobile') as string);\n            } else if (!isPhoneValid(account, regionCode)) {\n                return setError(t('login.phone_format_error') as string);\n            } else {\n                account = `+${countryData[2]}${account}`;\n            }\n        }\n        setBindAccount(account);\n        if (!account.includes('@')) {\n            getCloudflareTurnstileResponse({\n                theme: themeType,\n                language,\n                getContainer: () => {\n                    return authCoreModal.rootBody as HTMLElement;\n                },\n            })\n                .then((token) => {\n                    runGetCode({\n                        phone: account,\n                        // eslint-disable-next-line camelcase\n                        cf_turnstile_response: token,\n                    });\n                })\n                .catch((error) => {\n                    message.error(t('error.server_20112'));\n                });\n        } else {\n            runGetCode({\n                email: account,\n            });\n        }\n    };\n\n    const changeAccountType = () => {\n        setAccountType(accountType === 'email' ? 'phone' : 'email');\n        setBindAccount('');\n    };\n\n    useEffect(() => {\n        setTimeout(() => {\n            (accountInputRef.current as any)?.focus();\n        });\n    }, []);\n\n    // \u8F93\u5165\u9A8C\u8BC1\u7801\n    if (isSendCode) {\n        return (\n            <CaptchaInput\n                bindAccount={bindAccount}\n                redirectUrl={redirectUrl || ''}\n                verifyToken={verifyToken}\n                backToInputAccount={() => {\n                    setIsSendCode(false);\n                }}\n            />\n        );\n    }\n    return (\n        <div className=\"set-email-container\">\n            <style>{styles as unknown as string}</style>\n            <SVGIcon className=\"icon-navigation-back\" name=\"circle_back\" onClick={() => navigate(-1)} />\n            <h2 className=\"set-email-title\">\n                {accountType === 'email' ? t('account.set_your_email') : t('account.set_your_mobile')}\n            </h2>\n            <p className=\"set-email-desc-1\">\n                {accountType === 'email' ? t('account.set_your_email_tip') : t('account.set_your_mobile_tip')}\n            </p>\n\n            {accountType === 'email' ? (\n                <>\n                    <div className=\"account-input-box\">\n                        <input\n                            onInput={() => setError('')}\n                            className=\"input_email\"\n                            type=\"email\"\n                            placeholder={t('account.place_email_address') as string}\n                            ref={accountInputRef}\n                            defaultValue={bindAccount}\n                            // \u56DE\u8F66\u4E8B\u4EF6\n                            onKeyDown={(e) => {\n                                if (e.key === 'Enter') {\n                                    checkAndRequestCode();\n                                }\n                            }}\n                        />\n                    </div>\n                </>\n            ) : (\n                <>\n                    <div className=\"account-input-box phone\" ref={clickRef}>\n                        {visbSelectCountry && (\n                            <div className=\"account-select-country\">\n                                {defaultCountriesData.map((item, index) => (\n                                    <p\n                                        key={index}\n                                        className=\"account-select-country-item\"\n                                        onClick={() => {\n                                            setCountryData(item);\n                                            setVisbSelectCountry(false);\n                                        }}\n                                    >\n                                        <div className=\"country-box\">\n                                            <div className=\"country-flag\">{getUnicodeFlagIcon(`${item[1]}`)}</div>\n                                            <span className=\"country-name\">{item[0]}</span>\n                                        </div>\n                                        <div className=\"country-code\">{'+' + item[2]}</div>\n                                    </p>\n                                ))}\n                            </div>\n                        )}\n                        <div className=\"account-select-opt\" onClick={() => setVisbSelectCountry(!visbSelectCountry)}>\n                            <div className=\"account-select-icon\">{getUnicodeFlagIcon(`${countryData[1]}`)}</div>\n                            <DownOutlined className=\"down-more\" />\n                        </div>\n                        <span>+{countryData[2]}</span>\n                        <input\n                            onInput={() => {\n                                setError('');\n\n                                (accountInputRef.current as any).value =\n                                    (accountInputRef.current as any).value.match(/^\\d+/)?.[0] || '';\n                            }}\n                            type=\"text\"\n                            className=\"no-number dd\"\n                            placeholder={t('account.mobile') as string}\n                            ref={accountInputRef}\n                            onWheel={(e: any) => e.target.blur()}\n                            defaultValue={bindAccount.replace(`+${countryData[2]}`, '')}\n                            onKeyDown={(e) => {\n                                if (e.key === 'Enter') {\n                                    checkAndRequestCode();\n                                }\n                            }}\n                            onFocus={() => {\n                                document.querySelector('.account-input-box.phone')?.setAttribute('data-focus', 'true');\n                            }}\n                            onBlur={() => {\n                                document.querySelector('.account-input-box.phone')?.setAttribute('data-focus', 'false');\n                            }}\n                        />\n                    </div>\n                </>\n            )}\n            <p className={`error-tip ${errorMsg ? 'show' : ''}`}>{errorMsg}</p>\n\n            <Button\n                className=\"send-code-btn account-submit-btn bottom-margin\"\n                loading={codeLoading}\n                onClick={checkAndRequestCode}\n            >\n                {t('login.get_captcha')}\n            </Button>\n\n            {(state as any)?.showSwitch && (\n                <div className=\"account-switch-item\" onClick={changeAccountType}>\n                    {accountType === 'email' ? t('account.switch_text_mobile') : t('account.switch_text_email')}\n                </div>\n            )}\n            <PowerFooter />\n        </div>\n    );\n};\n\nexport default AccountBind;\n", "import {\n    ApiError,\n    AuthType,\n    bindLoginAccount,\n    getBindSecurityAccounCaptcha,\n    getCloudflareTurnstileResponse,\n    getSecurityAccountCaptcha,\n    getSecurityAccountToken,\n    setPaymentPassword,\n    syncUserInfo,\n    thirdpartyAuth,\n    type SocialAuthType,\n} from '@particle-network/auth-core';\nimport { useInterval, useRequest } from 'ahooks';\nimport { Button, Modal } from 'antd';\nimport base64url from 'base64url';\nimport throttle from 'lodash/throttle.js';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport SVGIcon from '../../../components/icon/svg-icon';\nimport PowerFooter from '../../../components/power-footer';\nimport AuthCode from '../../../components/react-auth-code-input';\nimport { useAuthCoreModal, useCustomNavigate, useCustomRouter, useParticleAuth } from '../../../context';\nimport { useCustomize } from '../../../context/hooks/useCustomize';\nimport useMessage from '../../../context/hooks/useMessage';\nimport { displayEmail, displayPhone } from '../../../utils/common-utils';\nimport { getAccountList } from '../../loginAccount';\nimport { PageType } from './config';\nimport styles from './index.less';\n\ninterface IParams {\n    account: string; // \u8FDB\u5165\u9875\u9762\u65F6\u4F1A\u7ED9\u8FD9\u4E2A\u8D26\u6237\u53D1\u9001\u9A8C\u8BC1\u7801\uFF0C\u8FD9\u4E2A\u8D26\u6237\u53EF\u80FD\u662F\u5B89\u5168\u8D26\u53F7\uFF0C\u4E5F\u53EF\u80FD\u662F\u8981\u7ED1\u5B9A\u7684\u8D26\u53F7\n    pageType: PageType;\n    unbindAccount: string; //\u89E3\u7ED1\u624B\u673A\u3001\u90AE\u7BB1\u65F6\u4F7F\u7528\n    authType: AuthType;\n    verifyToken: string;\n    redirectUrl: string;\n    password: string; // \u91CD\u7F6E\u5BC6\u7801\u65F6\u9700\u8981\n}\n\nconst AccountVerify = (props: any) => {\n    const navigate = useCustomNavigate();\n    const { t } = useTranslation();\n\n    const state = props;\n\n    const message = useMessage();\n\n    const { customRouter } = useCustomRouter();\n\n    const { themeType, language } = useCustomize();\n\n    const { account, pageType, authType, verifyToken, redirectUrl, password } = state as IParams;\n\n    const [code, setCode] = useState<string>('');\n\n    const [interval, setInterval] = useState<number | undefined>(1000);\n\n    const [countdown, setCountdown] = useState(60);\n\n    const [errorTip, setErrorTip] = useState<string>();\n    const { authCoreModal } = useAuthCoreModal();\n    const { userInfo } = useParticleAuth();\n\n    const inputRef = useRef(null);\n\n    useInterval(() => {\n        if (countdown > 0) {\n            const result = countdown - 1;\n            setCountdown(result);\n            if (result === 0) {\n                setInterval(undefined);\n            }\n        }\n    }, interval);\n\n    // \u83B7\u53D6\u9A8C\u8BC1\u7801\n    const { run: runGetCode } = useRequest(\n        async (params) => {\n            console.log('get code', params);\n            if (pageType === PageType.BindLoginAccount) {\n                params = {\n                    [authType as string]: account,\n                    // eslint-disable-next-line camelcase\n                    cf_turnstile_response: params.cf_turnstile_response,\n                };\n                return getBindSecurityAccounCaptcha(params).then((res) => {\n                    return res;\n                });\n            } else {\n                return getSecurityAccountCaptcha(params.verifyCodeMethod);\n            }\n        },\n        {\n            manual: true,\n            onSuccess: (result, params) => {\n                if (!interval) {\n                    setCountdown(60);\n                    setInterval(1000);\n                }\n            },\n            onError: (error) => {\n                setCountdown(0);\n                setInterval(undefined);\n            },\n        }\n    );\n\n    // \u9A8C\u8BC1\u5B89\u5168\u8D26\u53F7\uFF0C\u83B7\u53D6token\n    const { loading: verifyLoading, runAsync: securityAccountsVerifyRequest } = useRequest(getSecurityAccountToken, {\n        manual: true,\n        onError: (error: any) => {\n            if (error?.error_code === ApiError.InvalidCode) {\n                setErrorTip(t('login.invalid_code') as string);\n            } else if (error?.error_code === ApiError.ResendCode) {\n                setErrorTip(t('login.please_send_again') as string);\n            } else {\n                error.message && message.error(error.message);\n            }\n        },\n    });\n\n    // \u7ED1\u5B9A\u767B\u5F55\u90AE\u7BB1\u6216\u624B\u673A\u53F7\n    const { loading: loadBindingLoading, runAsync: loginBindingsAsyncRequest } = useRequest(\n        async (params) => {\n            console.log('loginBindingsAsyncRequest', params);\n            return bindLoginAccount(params).then(async () => {\n                await syncUserInfo();\n            });\n        },\n        {\n            manual: true,\n            onSuccess: (data) => {\n                message.success(t('new.bind_login_account_success'));\n            },\n            onError: (error: any) => {\n                console.log('loginBindings', error);\n                let messageValue = error.message;\n                if (error?.error_code === ApiError.InvalidCode) {\n                    setErrorTip(t('login.invalid_code') as string);\n                    return;\n                } else if (error?.error_code === ApiError.ResendCode) {\n                    setErrorTip(t('login.please_send_again') as string);\n                    return;\n                } else if (error.error_code === 20109) {\n                    messageValue =\n                        authType == AuthType.email ? t('error.server_email_20109') : t('error.server_phone_20109');\n                } else {\n                    messageValue = error?.extra?.[0] || error.message;\n                }\n\n                Modal.error({\n                    title: messageValue,\n                    wrapClassName: 'auth-core-modal-error',\n                    getContainer: () => {\n                        return authCoreModal.rootBody as HTMLElement;\n                    },\n                    onOk: () => {\n                        (inputRef.current as any)?.clear();\n                        if (error.error_code === 20109) {\n                            // back\n                            navigate(-1);\n                        }\n                    },\n                });\n            },\n        }\n    );\n\n    // \u91CD\u7F6E\u652F\u4ED8\u5BC6\u7801\n    const { loading: resetLoading, run: runResetPaymentPassword } = useRequest(setPaymentPassword, {\n        manual: true,\n        onError: (error: any) => {\n            if (error?.error_code === ApiError.InvalidCode) {\n                setErrorTip(t('login.invalid_code') as string);\n            } else if (error?.error_code === ApiError.ResendCode) {\n                setErrorTip(t('login.please_send_again') as string);\n            }\n        },\n        onSuccess: (result, params) => {\n            syncUserInfo();\n\n            const paths = ['account/security', 'solana/sign', 'evm-chain/sign'];\n            const indexs = paths.map((path) => {\n                return customRouter.history?.findIndex((item) => item.path === path) as number;\n            });\n\n            const index = indexs.indexOf(Math.max(...indexs));\n\n            navigate(paths[index], { replace: true, back: true });\n        },\n    });\n\n    // \u89E3\u7ED1\u767B\u5F55\u8D26\u53F7\n    const { loading: deleteLoginAccountLoading, run: deleteLoginAccount } = useRequest(\n        // pnApi.deleteLoginBinding\n        () => new Promise((resolve, reject) => {}),\n        {\n            manual: true,\n            onSuccess: (result) => {\n                // const _userInfo = tokenProvider.userInfo;\n                // _userInfo.passkeys_id = undefined;\n                // tokenProvider.userInfo = _userInfo;\n                // setUserInfo({\n                //     passkeys_id: undefined,\n                // });\n                // route(-2);\n            },\n        }\n    );\n\n    const verifyCodeMethod = useMemo(() => {\n        return account?.includes('@') ? AuthType.email : AuthType.phone;\n    }, [account]);\n\n    useEffect(() => {\n        requestVerifyCode();\n    }, [account]);\n\n    const requestVerifyCode = () => {\n        setErrorTip('');\n        if (pageType === PageType.BindLoginAccount && authType === AuthType.phone) {\n            getCloudflareTurnstileResponse({\n                theme: themeType,\n                language,\n                getContainer: () => {\n                    return authCoreModal.rootBody as HTMLElement;\n                },\n            })\n                .then((token) => {\n                    runGetCode({\n                        // eslint-disable-next-line camelcase\n                        verify_code_method: verifyCodeMethod,\n                        // eslint-disable-next-line camelcase\n                        cf_turnstile_response: token,\n                    });\n                })\n                .catch(() => {\n                    message.error(t('error.server_20112'));\n                    navigate(-1);\n                });\n        } else {\n            runGetCode({\n                // eslint-disable-next-line camelcase\n                verifyCodeMethod: verifyCodeMethod,\n            });\n        }\n    };\n\n    const onCodeInputChange = (code: string) => {\n        setErrorTip('');\n        setCode(code);\n\n        if (code.length === 6) {\n            throttleConfirmCode(code);\n        }\n    };\n\n    const throttleConfirmCode = useCallback(\n        throttle(\n            (code) => {\n                confirmCode(code);\n            },\n            1000,\n            {\n                leading: true,\n                trailing: false,\n            }\n        ),\n        []\n    );\n\n    const resetPassword = (codeValue?: string) => {\n        runResetPaymentPassword({\n            password,\n            verifyCodeMethod: verifyCodeMethod,\n            code: codeValue || code,\n        });\n    };\n\n    const confirmCode = (code = '') => {\n        console.log('pageType', pageType);\n        if (errorTip) {\n            console.log('errorTip', errorTip);\n            return;\n        }\n        let data: any = { code };\n        if (pageType === PageType.ResetPaymentPassword) {\n            resetPassword(code);\n        } else if (pageType == PageType.VerifySecurityAccount_SetSecurityAccount) {\n            // \u7ED1\u5B9A\u5B89\u5168\u8D26\u53F7\u65F6\u524D\u7F6E\u9A8C\u8BC1\u5B89\u5168\u8D26\u53F7\n            securityAccountsVerifyRequest({\n                verifyCodeMethod: verifyCodeMethod,\n                code,\n            }).then((verifyToken) => {\n                navigate('/account/bind', {\n                    replace: true,\n                    state: {\n                        accountType: authType,\n                        verifyToken,\n                        redirectUrl,\n                    },\n                });\n            });\n        } else if (pageType === PageType.VerifySecurityAccount_BindLoginAccount) {\n            // \u7ED1\u5B9A\u767B\u5F55\u8D26\u53F7\u65F6\u524D\u7F6E\u9A8C\u8BC1\u5B89\u5168\u8D26\u53F7\n            securityAccountsVerifyRequest({\n                verifyCodeMethod: verifyCodeMethod,\n                code,\n            }).then((verifyToken) => {\n                const accountList = getAccountList({\n                    userInfo,\n                    t,\n                });\n                const { id, value } = accountList.find((item) => item.type === authType) || {};\n                // \u9A8C\u8BC1\u6210\u529F\u540E\uFF0C\u6839\u636E authType \u6267\u884C\u4E0D\u540C\u903B\u8F91\n                // AuthType.phone\uFF0CAuthType.email \u8DF3\u8F6C\u9875\u9762\uFF0C\u5176\u4ED6\u7684\u6267\u884Cauth\u7B7E\u540D\u8DF3\u8F6C\u767B\u5F55\u6388\u6743\n                if (authType === AuthType.phone || authType === AuthType.email || value || id) {\n                    navigate('/login-account/bind', {\n                        state: {\n                            authType,\n                            verifyToken,\n                        },\n                        replace: true,\n                    });\n                } else {\n                    console.log('\u7ED1\u5B9A\u7B2C\u4E09\u65B9 \u9875\u9762\u8DF3\u8F6C');\n                    const appState = base64url.encode(JSON.stringify({ verifyToken, purpose: 'bindLoginAccount' }));\n                    thirdpartyAuth({\n                        authType: authType as SocialAuthType,\n                        appState,\n                        prompt: 'select_account',\n                    }).catch((error) => {\n                        message.error(error?.message || error);\n                    });\n                }\n            });\n        } else if (pageType === PageType.BindLoginAccount) {\n            // eslint-disable-next-line camelcase\n            data = { ...data, security_account_verify_token: verifyToken, [authType as string]: account };\n            loginBindingsAsyncRequest(data).then((res) => {\n                navigate(-2);\n            });\n        } else if (pageType === PageType.UnbindLoginAccount) {\n            // passkeys\n        }\n    };\n\n    const formatDisplayAccount = (): string => {\n        if (account.includes('@')) {\n            return displayEmail(account);\n        } else {\n            return displayPhone(account);\n        }\n    };\n\n    useEffect(() => {\n        const elements = document.getElementsByClassName('react-input-code');\n        const contextmenuEvent = (e: any) => e.preventDefault();\n        elements[0]?.addEventListener('contextmenu', contextmenuEvent);\n        return () => {\n            elements[0]?.removeEventListener('contextmenu', contextmenuEvent);\n        };\n    }, []);\n\n    const handleCodeInputFocus = () => {\n        const elements = document.getElementsByClassName('input-code-item');\n        //@ts-ignore\n        elements[Math.min(code.length, 5)]?.focus();\n    };\n\n    return (\n        <div className=\"set-viery-container\">\n            <style>{styles as unknown as string}</style>\n            <div className=\"account-header\">\n                <SVGIcon\n                    className=\"icon-navigation-back\"\n                    name=\"circle_back\"\n                    onClick={() => {\n                        navigate(-1);\n                    }}\n                />\n            </div>\n            <h2 className=\"set-email-title\">{t('account.enter_code')}</h2>\n            <p className=\"set-email-desc-2\">{formatDisplayAccount()}</p>\n\n            <div onClick={handleCodeInputFocus}>\n                <AuthCode\n                    containerClassName=\"react-input-code\"\n                    inputClassName=\"input-code-item\"\n                    allowedCharacters=\"numeric\"\n                    length={6}\n                    ref={inputRef}\n                    placeholder={' '}\n                    onChange={onCodeInputChange}\n                />\n            </div>\n\n            {errorTip && <div className=\"code-error\">{errorTip}</div>}\n\n            <Button\n                className=\"account-submit-btn\"\n                loading={resetLoading || verifyLoading || loadBindingLoading || deleteLoginAccountLoading}\n                onClick={() => {\n                    setTimeout(() => {\n                        confirmCode(code);\n                    });\n                }}\n                disabled={code.length !== 6}\n            >\n                {t('common.confirm')}\n            </Button>\n\n            <Button className=\"send-again\" onClick={requestVerifyCode} disabled={countdown > 0}>\n                {countdown > 0 ? `${t('login.send_again')} (${countdown}s)` : t('login.send_again')}\n            </Button>\n            <div\n                className=\"back\"\n                onClick={() => {\n                    navigate(-1);\n                }}\n            >\n                <SVGIcon className=\"arrow1-icon\" name=\"arrow1_icon\" />\n                <span>{t('login.back')}</span>\n            </div>\n\n            <PowerFooter />\n        </div>\n    );\n};\n\nexport default AccountVerify;\n", "import React from 'react';\nimport SVGIcon from '../icon/svg-icon';\nimport styles from './index.less';\n\nconst EyeOpen = () => {\n    return (\n        <>\n            <style>{styles as unknown as string}</style>\n            <SVGIcon className=\"icon-eye\" name=\"eye_open\" />\n        </>\n    );\n};\nconst EyeClose = () => {\n    return (\n        <>\n            <style>{styles as unknown as string}</style>\n            <SVGIcon className=\"icon-eye\" name=\"eye_close\" />\n        </>\n    );\n};\n\nexport { EyeClose, EyeOpen };\n", "import { Input } from 'antd';\nimport React from 'react';\nimport { isAutoFocusSupported } from '../../utils';\nimport { isNullish } from '../../utils/common-utils';\nimport { EyeClose, EyeOpen } from '../eyeIcon';\nimport styles from './index.less';\n\ntype Prop = {\n    className?: string;\n    maxLength?: number;\n    defaultValue?: string;\n    onChange?: (value: string) => void;\n    onPressEnter?: (event: any) => void;\n    onBlur?: (event: any) => void;\n    autoFocus?: boolean;\n};\n\nconst InputPassword = (prop: Prop) => {\n    const inputRef = React.useRef<any>(null);\n\n    return (\n        <>\n            <style>{styles as unknown as string}</style>\n            <Input.Password\n                ref={inputRef}\n                className={'password-input' + (prop?.className ? ` ${prop?.className}` : '')}\n                iconRender={(visible) =>\n                    visible ? (\n                        <div>\n                            <EyeOpen />\n                        </div>\n                    ) : (\n                        <div>\n                            <EyeClose />\n                        </div>\n                    )\n                }\n                onChange={(e) => {\n                    if (prop?.onChange) {\n                        prop?.onChange?.(e.target.value);\n                    }\n                }}\n                defaultValue={prop?.defaultValue}\n                maxLength={prop?.maxLength || 20}\n                onPressEnter={(e) => prop?.onPressEnter?.(e)}\n                onBlur={(e) => prop?.onBlur?.(e)}\n                autoFocus={isNullish(prop?.autoFocus) && isAutoFocusSupported() ? true : prop?.autoFocus}\n            />\n        </>\n    );\n};\n\nexport default InputPassword;\n", "import { useInterval } from 'ahooks';\nimport { Button, Space, Typography } from 'antd';\nimport { useLottie } from 'lottie-react';\nimport React, { Suspense, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport PowerFooter from '../../../components/power-footer';\nimport { useCustomNavigate, useParticleAuth } from '../../../context';\nimport styles from './index.less';\nconst rightData = require('../../../common/lottie/right.json');\n\nconst SetMasterPasswordSuccess = (props: any) => {\n    const { loginSetMasterPassword } = props;\n    const { loginSuccessRedirectToApp } = useParticleAuth();\n    const { Text } = Typography;\n    const { t } = useTranslation();\n    const navigate = useCustomNavigate();\n\n    const [interval, setInterval] = useState<number | undefined>(1000);\n\n    const [countdown, setCountdown] = useState(3);\n\n    const { View } = useLottie({\n        animationData: rightData,\n        loop: false,\n    });\n\n    useInterval(() => {\n        if (countdown > 0) {\n            const result = countdown - 1;\n            setCountdown(result);\n            if (result === 0) {\n                setInterval(undefined);\n                backOnClick();\n            }\n        }\n    }, interval);\n\n    const backOnClick = () => {\n        if (loginSetMasterPassword) {\n            loginSuccessRedirectToApp();\n        } else {\n            navigate('/account/security', { replace: true, back: true });\n        }\n    };\n\n    return (\n        <>\n            <style>{styles as unknown as string}</style>\n            <div className=\"set-mp-success-container\">\n                <Suspense fallback={<></>}>\n                    <div className=\"set-mp-success-icon\">{View}</div>\n                </Suspense>\n                <div className=\"set-mp-success\">{t('account.setting_successed')}</div>\n                <Space className=\"set-mp-success-tip\" direction=\"vertical\">\n                    <Text>{t('account.master_password_successed')}</Text>\n                    <Text strong>{t('account.master_password_store_hint')}</Text>\n                </Space>\n\n                <Button className=\"primary-antd-btn back-btn\" onClick={backOnClick}>\n                    {t('login.back') + ` (${countdown})`}\n                </Button>\n                <PowerFooter />\n            </div>\n        </>\n    );\n};\n\nexport default SetMasterPasswordSuccess;\n", "import { Space, Typography } from 'antd';\nimport { useLottie } from 'lottie-react';\nimport React, { Suspense } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport PowerFooter from '../../../components/power-footer';\nimport { useCustomize } from '../../../context/hooks';\n\nconst walletEncryptLight = require('../../../common/lottie/wallet_encrypt_fff.json');\nconst walletEncryptDark = require('../../../common/lottie/wallet_encrypt_000.json');\n\nconst MasterPasswordLoading = () => {\n    const { t } = useTranslation();\n    const { themeType } = useCustomize();\n\n    const { View } = useLottie({\n        animationData: themeType === 'dark' ? walletEncryptDark : walletEncryptLight,\n        loop: true,\n    });\n\n    return (\n        <div className=\"mp-loading-container\" data-theme={themeType}>\n            <div className=\"scroll-content\">\n                <Suspense fallback={<></>}>\n                    <div className=\"mp-icon-loading\">{View}</div>\n                </Suspense>\n                <Space className=\"loading-tip\" direction=\"vertical\">\n                    <Typography.Text>{t('account.master_password_loading_tip1')}</Typography.Text>\n                    <Typography.Text>{t('account.master_password_loading_tip2')}</Typography.Text>\n                    <Typography.Text>{t('account.master_password_loading_tip3')}</Typography.Text>\n                </Space>\n            </div>\n            <PowerFooter />\n        </div>\n    );\n};\n\nexport default MasterPasswordLoading;\n", "import { RecordType } from '@particle-network/analytics';\nimport { analyticsRecord, setMastersPassword } from '@particle-network/auth-core';\nimport { useRequest } from 'ahooks';\nimport { Button, Form, Modal, Space, Typography } from 'antd';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { PromptSettingType } from '../../../api/model/bundle';\nimport SVGIcon from '../../../components/icon/svg-icon';\nimport InputPassword from '../../../components/input-password';\nimport PowerFooter from '../../../components/power-footer';\nimport { useAuthCoreModal, useCustomNavigate, useModalOptions, useParticleAuth } from '../../../context';\nimport { useConnect } from '../../../context/hooks/useConnect';\nimport useMessage from '../../../context/hooks/useMessage';\nimport { isAutoFocusSupported } from '../../../utils';\nimport SetMasterPasswordSuccess from '../setMasterPasswordSuccess';\nimport styles from './index.less';\nimport MasterPasswordLoading from './masterPasswordLoading';\n\nconst SetMasterPassword = (props: any) => {\n    const navigate = useCustomNavigate();\n\n    const { t } = useTranslation();\n\n    const { Text, Link } = Typography;\n    const message = useMessage();\n    const state = props;\n\n    const [digitsError, setDigitsError] = useState(false);\n\n    const [matchError, setMatchError] = useState(false);\n\n    const [passwordStep, setPasswordStep] = useState<'unset' | 'loading' | 'success' | 'failure'>('unset');\n\n    const { authCoreModal } = useAuthCoreModal();\n\n    const [passwordForm] = Form.useForm();\n\n    const [passwordValue, setPasswordValue] = useState('');\n\n    const [disableSubmit, setDisableSubmit] = useState(true);\n\n    const { loginSuccessRedirectToApp } = useParticleAuth();\n\n    const { modalOptions } = useModalOptions();\n\n    const { disconnect } = useConnect();\n\n    const { setAuthCoreModal } = useAuthCoreModal();\n\n    const changePassword = useMemo(() => (state as any)?.setNewMasterPassword, [state]);\n\n    const loginSetMasterPassword = useMemo(() => (state as any)?.loginSetMasterPassword, [state]);\n\n    useEffect(() => {\n        if (\n            modalOptions?.promptSettingConfig?.promptMasterPasswordSettingWhenLogin ===\n                PromptSettingType.everyAndNotSkip &&\n            loginSetMasterPassword\n        ) {\n            setAuthCoreModal({\n                closable: false,\n            });\n            return () => {\n                setAuthCoreModal({\n                    closable: true,\n                });\n            };\n        }\n    }, [loginSetMasterPassword, modalOptions?.promptSettingConfig?.promptMasterPasswordSettingWhenLogin]);\n\n    const { run: runSetMasterPassword } = useRequest(setMastersPassword, {\n        manual: true,\n        onBefore: () => {\n            setPasswordStep('loading');\n        },\n        onSuccess: async (result) => {\n            console.log('set master password success', result);\n            if (!changePassword) {\n                analyticsRecord({\n                    // eslint-disable-next-line camelcase\n                    record_type: RecordType.PAGE_SETTING_MASTER_PASSWORD_SET, // \u4E3B\u5BC6\u7801\u8BBE\u7F6E\u6210\u529F\n                });\n            } else {\n                analyticsRecord({\n                    // eslint-disable-next-line camelcase\n                    record_type: RecordType.PAGE_SETTING_MASTER_PASSWORD_CHANGE, // \u4E3B\u5BC6\u7801\u4FEE\u6539\u6210\u529F\n                });\n            }\n\n            setPasswordStep('success');\n        },\n        onError: (error) => {\n            console.log('set master password error', error);\n            setPasswordStep('failure');\n            message.error(t('account.master_password_set_failed'));\n        },\n    });\n\n    const toDescription = () => {\n        navigate('/account/master-password/description');\n    };\n\n    const onInputFinish = ({\n        password,\n        confirmPassword,\n    }: {\n        password: string | undefined;\n        confirmPassword: string | undefined;\n    }) => {\n        if (password && password.length >= 6 && password.length <= 20 && password === confirmPassword) {\n            setPasswordValue(password);\n            runSetMasterPassword(password);\n        } else {\n            setDigitsError(!password || password.length < 6 || password.length > 20);\n            setMatchError(Boolean(password && confirmPassword && password !== confirmPassword));\n        }\n    };\n\n    const onPasswordInputBlur = (event: any) => {\n        const password: string | undefined = passwordForm.getFieldValue('password');\n        const confirmPassword: string | undefined = passwordForm.getFieldValue('confirmPassword');\n        setDigitsError(!password || password.length < 6 || password.length > 20);\n        if (password && confirmPassword) {\n            setMatchError(password !== confirmPassword);\n        }\n    };\n    const onConfirmPasswordInputBlur = (event: any) => {\n        const password: string | undefined = passwordForm.getFieldValue('password');\n        const confirmPassword: string | undefined = passwordForm.getFieldValue('confirmPassword');\n        setMatchError(Boolean(password && confirmPassword && password !== confirmPassword));\n    };\n\n    const onPasswordInputChange = () => {\n        setDigitsError(false);\n    };\n\n    const onConfirmPasswordInputChange = () => {\n        setMatchError(false);\n    };\n\n    const warningModalRef = React.useRef<any>();\n\n    const onBack = () => {\n        if (\n            modalOptions?.promptSettingConfig?.promptMasterPasswordSettingWhenLogin ===\n            PromptSettingType.everyAndNotSkip\n        ) {\n            warningModalRef.current = Modal.warning({\n                className: 'm-warning-modal',\n                wrapClassName: 'auth-core-modal-error set-mp-warning-modal',\n                getContainer: () => {\n                    return authCoreModal.rootBody as HTMLElement;\n                },\n                content: (\n                    <div className=\"content-wrap\">\n                        <div className=\"content\">{t('account.unset_the_master_password')}</div>\n                        <div className=\"footer-btns\">\n                            <Button\n                                className=\"cancel-btn\"\n                                onClick={() => {\n                                    disconnect().finally(() => {\n                                        warningModalRef.current.destroy();\n                                        setAuthCoreModal({\n                                            particleModalVisible: false,\n                                        });\n                                    });\n                                }}\n                            >\n                                {t('account.exit')}\n                            </Button>\n                            <Button\n                                className=\"confirm-btn\"\n                                onClick={() => {\n                                    warningModalRef.current.destroy();\n                                }}\n                            >\n                                {t('new.continue')}\n                            </Button>\n                        </div>\n                    </div>\n                ),\n                closable: true,\n                maskClosable: false,\n            });\n        } else if (loginSetMasterPassword) {\n            loginSuccessRedirectToApp();\n        } else {\n            navigate(-1);\n        }\n    };\n\n    const onValuesChange = () => {\n        const password = passwordForm.getFieldValue('password');\n        const confirmPassword = passwordForm.getFieldValue('confirmPassword');\n        setDisableSubmit(!password || !confirmPassword);\n    };\n\n    useEffect(() => {\n        // biRecords({\n        //     record_type: RecordType.PAGE_SETTING_MASTER_PASSWORD_ENTER, // \u8FDB\u5165\u4E3B\u5BC6\u7801\u8BBE\u7F6E\u9875\u9762\n        // });\n    }, []);\n\n    return (\n        <div className=\"set-mp-container\">\n            <style>{styles as unknown as string}</style>\n            <div className=\"set-mp-title\">\n                {changePassword ? t('account.new_master_password') : t('account.master_password')}\n            </div>\n\n            {/* set master password */}\n            {(passwordStep === 'unset' || passwordStep === 'failure') && (\n                <div className=\"form-wrap\">\n                    <Form\n                        onFinish={onInputFinish}\n                        form={passwordForm}\n                        layout=\"vertical\"\n                        onValuesChange={onValuesChange}\n                    >\n                        <div className=\"account-header\">\n                            <SVGIcon className=\"icon-navigation-back\" name=\"circle_back\" onClick={onBack} />\n                        </div>\n                        <div className=\"scroll-content\">\n                            <div className=\"mp-input-name padding-top-16\">\n                                {changePassword ? t('account.new_master_password') : t('account.master_password')}\n                            </div>\n                            <Form.Item name=\"password\" initialValue={passwordValue}>\n                                <InputPassword\n                                    className=\"mp-input\"\n                                    onBlur={onPasswordInputBlur}\n                                    onChange={onPasswordInputChange}\n                                    autoFocus={isAutoFocusSupported()}\n                                />\n                            </Form.Item>\n\n                            {digitsError && <div className=\"mp-input-error\">{t('account.password_digits_hint')}</div>}\n\n                            <div className=\"mp-confirm-input-name\">\n                                {changePassword\n                                    ? t('account.confirm_new_master_password')\n                                    : t('account.confirm_master_password')}\n                            </div>\n\n                            <Form.Item name=\"confirmPassword\" initialValue={passwordValue}>\n                                <InputPassword\n                                    className=\"mp-input\"\n                                    onBlur={onConfirmPasswordInputBlur}\n                                    onChange={onConfirmPasswordInputChange}\n                                    autoFocus={false}\n                                />\n                            </Form.Item>\n\n                            {matchError && (\n                                <div className=\"mp-input-error\">{t('account.master_password_not_match')}</div>\n                            )}\n\n                            <Space className=\"description-space\" direction=\"vertical\">\n                                <Text>\n                                    * {t('account.master_password_use1')}{' '}\n                                    <Link onClick={toDescription} className=\"more-text-btn\">\n                                        {t('account.learn_more_period')}\n                                    </Link>\n                                </Text>\n                                <Text strong>* {t('account.master_password_store_hint')}</Text>\n                                <Text>{t('account.master_password_note')}</Text>\n                            </Space>\n                        </div>\n                        <Form.Item>\n                            <div className=\"set-mp-footer\">\n                                <Button\n                                    className=\"primary-antd-btn set-mp-btn\"\n                                    htmlType=\"submit\"\n                                    disabled={disableSubmit}\n                                >\n                                    {changePassword\n                                        ? t('account.set_new_master_password')\n                                        : t('account.set_master_password')}\n                                </Button>\n                                <PowerFooter />\n                            </div>\n                        </Form.Item>\n                    </Form>\n                </div>\n            )}\n\n            {/* set master password loading */}\n            {passwordStep === 'loading' && <MasterPasswordLoading />}\n\n            {/* set master password success */}\n            {passwordStep === 'success' && <SetMasterPasswordSuccess loginSetMasterPassword={loginSetMasterPassword} />}\n        </div>\n    );\n};\n\nexport default SetMasterPassword;\n", "import { Space, Typography } from 'antd';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Header from '../../../components/header';\nimport SVGIcon from '../../../components/icon/svg-icon';\nimport PowerFooter from '../../../components/power-footer';\nimport { useCustomNavigate } from '../../../context';\nimport styles from './index.less';\n\nconst MasterPasswordDescription = () => {\n    const { Title, Paragraph } = Typography;\n    const navigate = useCustomNavigate();\n    const { t } = useTranslation();\n\n    return (\n        <div className=\"master-password-description-container height-100\">\n            <Header>{t('account.about_master_password')}</Header>\n            <div className=\"scroll-content\">\n                <style>{styles as unknown as string}</style>\n                <div className=\"about-mp-container\">\n                    <SVGIcon className=\"icon-navigation-back\" name=\"circle_back\" onClick={() => navigate(-1)} />\n                    <Space direction=\"vertical\" className=\"space-container\">\n                        <Title level={5} className=\"title\">\n                            {t('account.about_master_password_t1')}\n                        </Title>\n                        <Paragraph className=\"content\">{t('account.about_master_password_p1')}</Paragraph>\n                        <Title level={5} className=\"title\">\n                            {t('account.about_master_password_t2')}\n                        </Title>\n                        <Paragraph className=\"content\">{t('account.about_master_password_p2')}</Paragraph>\n                        <Title level={5} className=\"title\">\n                            {t('account.about_master_password_t3')}\n                        </Title>\n                        <Paragraph className=\"content\">{t('account.about_master_password_p3')}</Paragraph>\n                    </Space>\n                </div>\n            </div>\n            <PowerFooter className=\"footer-box-v2\" />\n        </div>\n    );\n};\n\nexport default MasterPasswordDescription;\n", "import { RecordType } from '@particle-network/analytics';\nimport { analyticsRecord, restoreWallet } from '@particle-network/auth-core';\nimport { useRequest } from 'ahooks';\nimport { Button, Form, Space, Typography } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport InputPassword from '../../../components/input-password';\nimport PowerFooter from '../../../components/power-footer';\nimport { useCustomNavigate, useParticleAuth } from '../../../context';\nimport useMessage from '../../../context/hooks/useMessage';\nimport styles from './index.less';\n\nexport type MasterPasswordVerifyProps = {\n    loginVerifyMasterPassword?: boolean;\n};\n\nconst MasterPasswordVerify = (props?: MasterPasswordVerifyProps) => {\n    const { Text, Link } = Typography;\n    const navigate = useCustomNavigate();\n    const [showPasswordError, setShowPasswordError] = useState(false);\n    const { t } = useTranslation();\n\n    const { loginVerifyMasterPassword } = props || {};\n    const containerRef = React.useRef<any>(null);\n    const [nextDisabled, setNextDisabled] = useState(true);\n    const { loginSuccessRedirectToApp } = useParticleAuth();\n    const message = useMessage();\n    const { run: runCheckMasterPassword, loading } = useRequest(restoreWallet, {\n        manual: true,\n        onBefore: () => {\n            analyticsRecord({\n                // eslint-disable-next-line camelcase\n                record_type: RecordType.PAGE_MASTER_PASSWORD_VERIFY, // \u4E3B\u5BC6\u7801\u9A8C\u8BC1\n            });\n        },\n        onSuccess: (result: boolean) => {\n            if (result) {\n                analyticsRecord({\n                    // eslint-disable-next-line camelcase\n                    record_type: RecordType.PAGE_MASTER_PASSWORD_VERIFY_SUCCESS, // \u4E3B\u5BC6\u7801\u9A8C\u8BC1\u6210\u529F\n                });\n                if (loginVerifyMasterPassword) {\n                    loginSuccessRedirectToApp();\n                } else {\n                    navigate(-1);\n                }\n            } else {\n                setShowPasswordError(true);\n            }\n        },\n        onError: (error) => {\n            console.log('checkMasterPassword error', error);\n            message.error(error?.message || 'check master password error');\n        },\n    });\n\n    const toDecription = () => {\n        navigate('/account/master-password/description');\n    };\n\n    const verifyMasterPassword = (values: any) => {\n        const { password } = values;\n        if (password?.length >= 6 && password?.length <= 20) {\n            setShowPasswordError(false);\n            runCheckMasterPassword(password);\n        } else {\n            setShowPasswordError(true);\n        }\n    };\n\n    const onValuesChange = (values: any) => {\n        const { password } = values;\n        setShowPasswordError(false);\n        setNextDisabled(!password);\n    };\n\n    useEffect(() => {\n        setTimeout(() => {\n            containerRef.current?.querySelector('.password-input input')?.focus();\n        }, 200);\n    }, []);\n\n    return (\n        <div className=\"mp-verify-container\" ref={containerRef}>\n            <style>{styles as unknown as string}</style>\n            <div className=\"mp-verify-title\">{t('account.restore_wallet')}</div>\n            <Form layout=\"vertical\" onFinish={verifyMasterPassword} onValuesChange={onValuesChange}>\n                <div className=\"scroll-content\">\n                    <div className=\"mp-input-name padding-top-16\">{t('account.master_password')}</div>\n                    <Form.Item name=\"password\">\n                        <InputPassword className=\"mp-input\" />\n                    </Form.Item>\n                    {showPasswordError && <div className=\"mp-input-error\">{t('account.password_error')}</div>}\n                    <Space direction=\"vertical\" className=\"mp-tip-space\">\n                        <Text>{t('account.mpc_tss_intro')}</Text>\n                        <Text>\n                            {t('account.input_decrypt_hint')}{' '}\n                            <Link onClick={toDecription} className=\"more-text-btn\">\n                                {t('account.learn_more_period')}\n                            </Link>\n                        </Text>\n                    </Space>\n                </div>\n                <Form.Item>\n                    <div className=\"bottom-container footer\">\n                        <Button\n                            className=\"primary-antd-btn mp-next\"\n                            htmlType=\"submit\"\n                            loading={loading}\n                            disabled={nextDisabled}\n                        >\n                            {t('common.confirm')}\n                        </Button>\n                        <PowerFooter className=\"footer-box-v2\" />\n                    </div>\n                </Form.Item>\n            </Form>\n        </div>\n    );\n};\n\nexport default MasterPasswordVerify;\n", "import { Button } from 'antd';\nimport React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { PromptSettingType } from '../../../api/model/bundle';\nimport PowerFooter from '../../../components/power-footer';\nimport { useCustomNavigate, useParticleAuth } from '../../../context';\nimport styles from './index.less';\n\nconst MasterPasswordModal = () => {\n    const { t } = useTranslation();\n    const navigate = useCustomNavigate();\n    const { loginSuccessRedirectToApp, modalOptions, setAuthCoreModal } = useParticleAuth();\n    const { promptSettingConfig } = modalOptions;\n\n    useEffect(() => {\n        setAuthCoreModal({\n            closable: false,\n        });\n        return () => {\n            setAuthCoreModal({\n                closable: true,\n            });\n        };\n    }, []);\n\n    const navigateToSetMasterPassword = () => {\n        navigate('/account/master-password', {\n            replace: true,\n            state: {\n                loginSetMasterPassword: true,\n            },\n        });\n    };\n\n    const laterToSet = () => {\n        loginSuccessRedirectToApp();\n    };\n\n    return (\n        <div className=\"mp-modal-container\">\n            <style>{styles as unknown as string}</style>\n\n            <div className=\"particle-title\">{t('account.set_master_password')}</div>\n\n            <div className=\"scroll-content\">\n                <div className=\"mp-set-desc\">{t('account.set_master_password_tip')}</div>\n                <div className=\"mp-set-img\" />\n            </div>\n\n            <div className=\"btns\">\n                <Button className=\"mp-set-now mp-antd-bt\" onClick={navigateToSetMasterPassword}>\n                    {t('account.set_master_password_now')}\n                </Button>\n\n                {\n                    // \u5F3A\u5236\u8BBE\u7F6E\u4E3B\u5BC6\u7801\uFF0C\u9690\u85CF Later \u6309\u94AE\n                    promptSettingConfig?.promptMasterPasswordSettingWhenLogin !== PromptSettingType.everyAndNotSkip && (\n                        <Button className=\"mp-set-later mp-antd-bt\" onClick={laterToSet}>\n                            {t('account.later')}\n                        </Button>\n                    )\n                }\n            </div>\n            <PowerFooter className=\"footer-box-v2\" />\n        </div>\n    );\n};\n\nexport default MasterPasswordModal;\n", "import { verifyMasterPassword } from '@particle-network/auth-core';\nimport { useRequest } from 'ahooks';\nimport { Button, Form, Space, Typography } from 'antd';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Header from '../../../components/header';\nimport InputPassword from '../../../components/input-password';\nimport PowerFooter from '../../../components/power-footer';\nimport { useCustomNavigate } from '../../../context';\nimport useMessage from '../../../context/hooks/useMessage';\nimport styles from './index.less';\n\nconst MasterPasswordChange = () => {\n    const navigate = useCustomNavigate();\n    const { t } = useTranslation();\n    const { Text, Link } = Typography;\n\n    const [showError, setShowError] = useState(false);\n    const message = useMessage();\n    const [nextDisabled, setNextDisabled] = useState(true);\n\n    const { run: runCheckMasterPassword, loading } = useRequest(\n        (password: string) => {\n            return verifyMasterPassword(password).then((res) => {\n                if (!res) {\n                    throw new Error('Master password decryption error');\n                }\n                return res;\n            });\n        },\n        {\n            manual: true,\n            onSuccess: (result) => {\n                setNewMasterPassword();\n            },\n            onError: (error) => {\n                console.log('checkMasterPassword error', error);\n                if (error?.message === 'Master password decryption error') {\n                    setShowError(true);\n                } else {\n                    message.error(error?.message || 'check master password error');\n                }\n            },\n        }\n    );\n\n    const setNewMasterPassword = () => {\n        navigate('/account/master-password', {\n            state: {\n                setNewMasterPassword: true,\n            },\n        });\n    };\n\n    const onInputFinish = (values: any) => {\n        const { password } = values;\n        if (password && password.length >= 6 && password.length <= 20) {\n            runCheckMasterPassword(password);\n        } else {\n            setShowError(true);\n        }\n    };\n\n    const onValuesChange = (values: any) => {\n        setShowError(false);\n        const { password } = values;\n        setNextDisabled(!password);\n    };\n\n    const toDecription = () => {\n        navigate('/account/master-password/description');\n    };\n\n    return (\n        <div className=\"mp-change-container\">\n            <style>{styles as unknown as string}</style>\n            <Header displayBackBtn={true}>{t('account.current_master_password')}</Header>\n            <div className=\"wapper\">\n                <Form onFinish={onInputFinish} layout=\"vertical\" onValuesChange={onValuesChange}>\n                    <div className=\"scroll-content\">\n                        <div className=\"mp-input-name padding-top-16\">{t('account.input_master_password')}</div>\n                        <Form.Item name=\"password\">\n                            <InputPassword className=\"mp-input\" />\n                        </Form.Item>\n                        {showError && <div className=\"mp-input-error\">{t('account.password_error')}</div>}\n                        <Space direction=\"vertical\" className=\"mp-tip-space\">\n                            <Text>{t('account.mpc_tss_intro')}</Text>\n                            <Text>\n                                {t('account.input_decrypt_hint')}{' '}\n                                <Link onClick={toDecription} className=\"more-text-btn\">\n                                    {t('account.learn_more_period')}\n                                </Link>\n                            </Text>\n                        </Space>\n                    </div>\n                    <Form.Item>\n                        <div className=\"bottom-container\">\n                            <Button\n                                className=\"primary-antd-btn mp-next\"\n                                htmlType=\"submit\"\n                                loading={loading}\n                                disabled={nextDisabled}\n                            >\n                                {t('common.next')}\n                            </Button>\n                            <PowerFooter />\n                        </div>\n                    </Form.Item>\n                </Form>\n            </div>\n        </div>\n    );\n};\n\nexport default MasterPasswordChange;\n", "import { LoadingOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport SVGIcon from '../../../components/icon/svg-icon';\nimport PowerFooter from '../../../components/power-footer';\nimport styles from './index.less';\n\nconst ParticleKeywords = ({\n    onChange,\n    value,\n    keyboardInvisible,\n}: {\n    onChange?: (val: string) => void;\n    value?: string;\n    keyboardInvisible?: boolean;\n}) => {\n    const { t } = useTranslation();\n    const [input, setInput] = useState(['', '', '', '', '', '']);\n    const [inputVal, setInputVal] = useState(value ?? '');\n    const [keywords, setKeywords] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9, '', 0]);\n\n    const inputChange = (val: string) => {\n        if (inputVal.length < 6) {\n            setInputVal(inputVal + '' + val);\n        }\n    };\n\n    const delVal = () => {\n        if (inputVal.length > 0) {\n            const newVal = inputVal.slice(0, inputVal.length - 1);\n            setInputVal(newVal);\n        }\n    };\n    useEffect(() => {\n        onChange?.(inputVal);\n    }, [inputVal]);\n\n    useEffect(() => {\n        setInputVal(value ?? '');\n    }, [value]);\n\n    if (!keyboardInvisible) {\n        return (\n            <>\n                <style>{styles as unknown as string}</style>\n                <div className=\"particle-keywords-box\">\n                    {input.map((item, idx) => (\n                        <span key={item + idx} className={`input-item ${!item || 'active'}`}>\n                            {inputVal[idx] ? '\u25CF' : ''}\n                        </span>\n                    ))}\n                </div>\n                <div className=\"particle-keywords-map\">\n                    {keywords.map((item) => (\n                        <span\n                            className=\"span\"\n                            key={item}\n                            data-value={item}\n                            onClick={() => {\n                                if (item === '') {\n                                    return;\n                                }\n                                inputChange(item + '');\n                            }}\n                        >\n                            {item}\n                        </span>\n                    ))}\n                    <span className=\"span del\" onClick={delVal}>\n                        <SVGIcon className=\"img\" name=\"backspace\" />\n                    </span>\n                    <PowerFooter />\n                </div>\n            </>\n        );\n    }\n    return (\n        <>\n            <style>{styles as unknown as string}</style>\n            <div className=\"particle-keywords-map loading\">\n                <img src={require('../../../common/images/account/icon_logo_gray.png').default} alt=\"\" />\n                <p>{t('account.payment_checking')}</p>\n                <LoadingOutlined className=\"loading-icon\" />\n            </div>\n        </>\n    );\n};\n\nexport default ParticleKeywords;\n", "import { useRequest } from 'ahooks';\nimport { Button } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useCustomNavigate } from '../../../context';\nimport ParticleKeywords from '../ParticleKeywords/index';\n\nimport { updatePaymentPassword } from '@particle-network/auth-core';\nimport React from 'react';\nimport SVGIcon from '../../../components/icon/svg-icon';\nimport { useError } from '../../../context/hooks/useError';\nimport { PageType } from '../accountVerify/config';\nimport styles from './index.less';\n\nconst SetPaymentPassword = (props: any) => {\n    const navigate = useCustomNavigate();\n    const { t } = useTranslation();\n    const state = props;\n    // 1. loading  3. password  4,success 5. check 6. code 7  confirm password\n    type StepType = 'loading' | 'password' | 'success' | 'check' | 'code' | 'confirm';\n    const [step, setStep] = useState<StepType>('loading');\n    const [codeVal, setCodeVal] = useState('');\n    const [password, setPassword] = useState('');\n    const [passwordMistake, setPasswordMistake] = useState<boolean>();\n    const [passwordMatched, setPasswordMatched] = useState<boolean>(false);\n    const { errorHandle } = useError();\n\n    const { loading: updateLoading, run: runUpdate } = useRequest(updatePaymentPassword, {\n        manual: true,\n        onSuccess: () => {\n            navigate(-1);\n        },\n        onError: (error: any) => {\n            console.log('update password error', error);\n            errorHandle(error);\n            if (error?.error_code === 50104) {\n                setCodeVal('');\n                setPassword('');\n                setPasswordMistake(false);\n                setStep('password');\n            }\n        },\n    });\n\n    useEffect(() => {\n        setStep('password');\n    }, []);\n\n    const checkPassword = (value: string) => {\n        if (value.length === 6) {\n            if (value === password) {\n                setCodeVal(value);\n                setPasswordMatched(true);\n            } else {\n                setCodeVal('');\n                setPassword('');\n                setPasswordMistake(true);\n                setStep('password');\n                setPasswordMatched(false);\n            }\n        } else {\n            setCodeVal(value);\n            setPasswordMatched(false);\n        }\n    };\n\n    const submitPassword = () => {\n        if ((state as any)?.account) {\n            //reset password\n            navigate('/account/verify', {\n                state: {\n                    account: (state as any)?.account,\n                    password: codeVal,\n                    pageType: PageType.ResetPaymentPassword,\n                },\n            });\n        } else if ((state as any)?.oldPassword) {\n            //change password\n            const oldPassword = (state as any)?.oldPassword;\n            const password = codeVal;\n            runUpdate({\n                password: password,\n                oldPassword: oldPassword,\n            });\n        }\n    };\n\n    if (step === 'confirm') {\n        return (\n            <div className=\"set-password-container\">\n                <style>{styles as unknown as string}</style>\n                <SVGIcon className=\"icon-navigation-back\" name=\"circle_back\" onClick={() => navigate(-1)} />\n                <h2 className=\"payment-title\">{t('account.set_payment_password')}</h2>\n                <p className=\"payment-desc-1\">{t('account.re_enter_confirm')}</p>\n                <div className=\"keyboard-container\">\n                    <ParticleKeywords onChange={checkPassword} value={codeVal}></ParticleKeywords>\n                </div>\n                <div className=\"payment-buttons2\">\n                    <Button\n                        className=\"payment-main-button2\"\n                        disabled={!passwordMatched}\n                        loading={(state as any)?.oldPassword ? updateLoading : false}\n                        onClick={submitPassword}\n                    >\n                        {t('account.done')}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <>\n            <style>{styles as unknown as string}</style>\n            <div className=\"set-password-container\">\n                <SVGIcon className=\"icon-navigation-back\" name=\"circle_back\" onClick={() => navigate(-1)} />\n                <h2 className=\"payment-title\">{t('account.set_payment_password')}</h2>\n                <p className=\"payment-desc-1\">{t('account.set_payment_password_tip')}</p>\n                <div className=\"keyboard-container\">\n                    <ParticleKeywords\n                        onChange={(e) => {\n                            setPassword(e);\n                            if (e.length > 5) {\n                                setPasswordMistake(false);\n                                setPasswordMatched(false);\n                                setStep('confirm');\n                            }\n                        }}\n                        value={password}\n                    ></ParticleKeywords>\n                </div>\n\n                {passwordMistake && <div className=\"password-mistake\">{t('account.password_do_not_match')}</div>}\n            </div>\n        </>\n    );\n};\n\nexport default SetPaymentPassword;\n", "import { useRequest } from 'ahooks';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useCustomNavigate, useParticleAuth } from '../../../context';\nimport ParticleKeywords from '../ParticleKeywords/index';\n\nimport { ApiError, verifyPaymentPassword } from '@particle-network/auth-core';\nimport Header from '../../../components/header';\nimport styles from './index.less';\nconst ChangePaymentPassword = (prop: any) => {\n    const navigate = useCustomNavigate();\n    const { t } = useTranslation();\n    const [pwd, setPwd] = useState('');\n\n    const { setWrongPassword } = useParticleAuth();\n\n    const { loading: verifyLoading, run: runVerify } = useRequest(verifyPaymentPassword, {\n        manual: true,\n        onSuccess: (result, params) => {\n            navigate('/account/set-password', {\n                state: {\n                    oldPassword: pwd,\n                },\n                replace: true,\n            });\n        },\n        onError: (error: any) => {\n            console.log('verify password error', error);\n            setPwd('');\n            if (error?.error_code === ApiError.WrongPaymentPassword) {\n                setWrongPassword({ visible: true });\n            } else if (error?.error_code === ApiError.SecurityAccountFrozen) {\n                const seconds = error.extra.seconds || 0;\n                setWrongPassword({\n                    visible: true,\n                    accountFrozen: {\n                        seconds: seconds,\n                    },\n                });\n            }\n        },\n    });\n\n    const checkInputPwd = (value: string) => {\n        setPwd(value);\n        if (value.length === 6) {\n            runVerify(value);\n        }\n    };\n\n    return (\n        <>\n            <style>{styles as unknown as string}</style>\n            <div className=\"payment-password-container\">\n                <Header displayBackBtn={true}></Header>\n                <div className=\"wrapper\">\n                    <div className=\"page-title\">{t('account.change_payment_password')}</div>\n                    <p className=\"payment-desc-1\">{t('account.change_enter_payment')}</p>\n                    <ParticleKeywords onChange={checkInputPwd} value={pwd} keyboardInvisible={verifyLoading} />\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default ChangePaymentPassword;\n", "import { DownOutlined } from '@ant-design/icons';\nimport { useClickAway } from 'ahooks';\nimport type { FormInstance } from 'antd';\nimport { Form, Input, InputNumber } from 'antd';\nimport getUnicodeFlagIcon from 'country-flag-icons/unicode';\nimport { isValidPhoneNumber, parsePhoneNumber } from 'libphonenumber-js/max';\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { defaultCountriesData, getCurrentCountry } from '../../api/model/all-countries';\nimport styles from './index.less';\ninterface Iprops {\n    form: FormInstance;\n    name: string;\n    disabled?: boolean;\n    previewMode?: string;\n    [key: string]: any;\n}\n\nconst PhoneInputItem = (props: Iprops) => {\n    const form = props.form;\n    const phoneValue = Form.useWatch(props.name, form);\n    const [countryData, setCountryData] = useState(['United States', 'us', '1']);\n    const { t } = useTranslation();\n    const [visbSelectCountry, setVisbSelectCountry] = useState(false);\n    const clickRef = useRef<any>();\n    const forItemRef = useRef<any>();\n    const [searchValue, setSearchValue] = useState('');\n    const searchInputRef = useRef<any>();\n    const countriesList = useMemo(() => {\n        return defaultCountriesData.filter((item) => {\n            return item.join('+').toLowerCase().includes(searchValue.toLowerCase());\n        });\n    }, [searchValue]);\n\n    useClickAway(() => {\n        setVisbSelectCountry(false);\n    }, clickRef);\n\n    useEffect(() => {\n        if (visbSelectCountry) {\n            setSearchValue('');\n        }\n    }, [visbSelectCountry]);\n\n    useEffect(() => {\n        if (phoneValue?.includes('*')) {\n            return;\n        }\n        const countryCode = `+${countryData[2]}`;\n        const value = (phoneValue || '').replace(/^\\+\\d+/, '').trim();\n        form.setFieldsValue({\n            [props.name]: `${countryCode} ${value}`,\n        });\n        if (value) {\n            form.validateFields(['_phone']);\n        }\n    }, [countryData, phoneValue]);\n\n    useEffect(() => {\n        try {\n            if (phoneValue?.includes?.('*')) {\n                form.setFieldsValue({\n                    _phone: phoneValue,\n                });\n            } else if (phoneValue) {\n                if (isValidPhoneNumber(phoneValue)) {\n                    const phoneNumber = parsePhoneNumber(phoneValue);\n                    const value = phoneNumber.nationalNumber;\n\n                    form.setFieldsValue({\n                        _phone: value,\n                    });\n\n                    const countryCode = phoneNumber.countryCallingCode.toString();\n                    const regionCode = phoneNumber.country;\n\n                    if (countryCode && regionCode) {\n                        const items = defaultCountriesData.filter(\n                            (item) =>\n                                item[2].toString() === countryCode && item[1].toLowerCase() === regionCode.toLowerCase()\n                        );\n                        if (items && items.length > 0) {\n                            setCountryData(items[items.length - 1]);\n                        }\n                    }\n                }\n            } else {\n                const currentCountry = getCurrentCountry();\n                if (currentCountry) {\n                    setCountryData(currentCountry);\n                }\n            }\n        } catch (error) {\n            // pass\n        }\n    }, [phoneValue]);\n\n    return (\n        <>\n            <style>{styles as unknown as string}</style>\n            <div className=\"phone-input-item-container\">\n                <Form.Item\n                    className={!props.disabled || (props.disabled && props.previewMode !== 'input') ? 'hidden' : ''}\n                    extra={props.extra}\n                    name={props.name}\n                >\n                    <Input disabled={props.disabled}></Input>\n                </Form.Item>\n                <Form.Item\n                    name=\"_phone\"\n                    className={props.disabled && props.previewMode == 'input' ? 'hidden' : ''}\n                    extra={props.extra}\n                    // getValueFromEvent={(event) => {\n                    //     return event.target.value.replace(/\\D+/g, '');\n                    // }}\n                    rules={[\n                        {\n                            required: true,\n                            validator: (rule, value) => {\n                                try {\n                                    if (!value) {\n                                        return Promise.reject(t('login.input_phone_holder'));\n                                    } else {\n                                        try {\n                                            value = `+${countryData[2]} ${value}`;\n                                            if (!isValidPhoneNumber(value)) {\n                                                return Promise.reject(t('login.phone_format_error'));\n                                            }\n                                        } catch (error) {\n                                            return Promise.reject(t('login.phone_format_error'));\n                                        }\n                                    }\n                                } catch (error) {\n                                    return Promise.reject(t('login.phone_format_error'));\n                                }\n                                return Promise.resolve();\n                            },\n                        },\n                    ]}\n                >\n                    <InputNumber\n                        placeholder={t('account.mobile') as string}\n                        disabled={props.disabled}\n                        controls={false}\n                        onChange={(value) => {\n                            form.setFieldsValue({\n                                [props.name]: `+${countryData[2]} ${value}`,\n                            });\n                        }}\n                        onFocus={() => {\n                            document\n                                .querySelector('.ant-input-number-group-wrapper')\n                                ?.setAttribute('data-focus', 'true');\n                        }}\n                        onBlur={() => {\n                            document\n                                .querySelector('.ant-input-number-group-wrapper')\n                                ?.setAttribute('data-focus', 'false');\n                        }}\n                        addonBefore={\n                            <div className=\"country-box phone\" ref={forItemRef}>\n                                <div\n                                    className=\"prefix-wrap\"\n                                    onClick={() => {\n                                        if (!props.disabled) {\n                                            setVisbSelectCountry(!visbSelectCountry);\n                                            setTimeout(() => {\n                                                searchInputRef.current?.focus();\n                                            });\n                                        }\n                                    }}\n                                    ref={clickRef}\n                                >\n                                    <div className=\"account-select-opt\">\n                                        <div className=\"account-select-icon\">\n                                            {getUnicodeFlagIcon(`${countryData[1]}`)}\n                                        </div>\n                                        <DownOutlined className=\"down-more\" />\n                                    </div>\n                                    <span>+{countryData[2]}</span>\n                                </div>\n\n                                {visbSelectCountry && (\n                                    <div className=\"account-select-country-list \">\n                                        <div\n                                            className=\"account-select-country-item search-input-wrap\"\n                                            onClick={(e) => {\n                                                e.stopPropagation();\n                                            }}\n                                        >\n                                            <Input\n                                                ref={searchInputRef}\n                                                className=\"search-input\"\n                                                type=\"text\"\n                                                placeholder={t('login.search_country_holder') as string}\n                                                allowClear\n                                                onChange={(e) => {\n                                                    const value = e?.target?.value || '';\n                                                    setSearchValue(value);\n                                                }}\n                                            />\n                                        </div>\n                                        {countriesList && !!countriesList.length ? (\n                                            <div className=\"p-country-list\">\n                                                {countriesList.map((item, index) => (\n                                                    <div\n                                                        key={`${item[0]}-${item[1]}-${item[2]}`}\n                                                        className=\"account-select-country-item\"\n                                                        onClick={() => {\n                                                            setCountryData(item);\n                                                            setVisbSelectCountry(false);\n                                                        }}\n                                                    >\n                                                        <div className=\"country-box\">\n                                                            <div className=\"country-flag\">\n                                                                {getUnicodeFlagIcon(`${item[1]}`)}\n                                                            </div>\n                                                            <span className=\"country-name\">{item[0]}</span>\n                                                        </div>\n                                                        <div className=\"country-code\">{'+' + item[2]}</div>\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        ) : (\n                                            <div className=\"no-data\">No data</div>\n                                        )}\n                                    </div>\n                                )}\n                            </div>\n                        }\n                    />\n                </Form.Item>\n            </div>\n        </>\n    );\n};\n\nexport default PhoneInputItem;\n", "import { AuthType, checkHasBoundLoginPhoneOrEmail } from '@particle-network/auth-core';\nimport { useRequest, useThrottleFn } from 'ahooks';\nimport { Button, Form, Input, Modal } from 'antd';\nimport { parsePhoneNumber } from 'libphonenumber-js/max';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Header from '../../components/header';\nimport PhoneInputItem from '../../components/phoneInputItem';\nimport PowerFooter from '../../components/power-footer';\nimport { useAuthCoreModal, useCustomNavigate, useParticleAuth } from '../../context';\nimport { useUserInfo } from '../../context/hooks';\nimport useMessage from '../../context/hooks/useMessage';\nimport { EmailRegExp } from '../../utils';\nimport { PageType } from '../account/accountVerify/config';\nimport { encryptValue, getAccountList } from '../loginAccount';\nimport styles from './index.less';\n\nexport interface IAccountInfo {\n    type: AuthType;\n    icon: string;\n    name: string;\n    value: string;\n    id?: string;\n    isOriginal?: boolean;\n}\n\ninterface IState {\n    authType: AuthType;\n    verifyToken: string;\n}\n\nconst LoginAccountBind = (props: any) => {\n    const state = props;\n    const authType = (state as IState)?.authType || '';\n    const verifyToken = (state as IState)?.verifyToken || '';\n    const { t } = useTranslation();\n    const [form] = Form.useForm();\n    const navigate = useCustomNavigate();\n    const message = useMessage();\n    const { userInfo } = useUserInfo();\n    const { showSelectSecurityAccount } = useParticleAuth();\n    const [submitLoading, setSubmitLoading] = useState(false);\n    const { runAsync: loginBindingsCheckRequest } = useRequest(checkHasBoundLoginPhoneOrEmail, {\n        manual: true,\n    });\n    const { authCoreModal } = useAuthCoreModal();\n    const accountList = useMemo(() => {\n        return getAccountList({ userInfo, t });\n    }, [userInfo]);\n\n    const accountInfo: IAccountInfo = useMemo(() => {\n        const data = (accountList?.find?.((item) => item.type === authType) || {}) as IAccountInfo;\n        return data;\n    }, [accountList, authType]);\n\n    /**\n     *  \u53EF\u4EE5\u5DF2\u7ECF\u7ED1\u5B9A\n     */\n    const canLink = useMemo(() => {\n        return !accountInfo.value && !accountInfo.id;\n    }, [accountInfo]);\n\n    /**\n     * \u662F\u5426\u53EF\u4EE5\u89E3\u7ED1\n     * \u5982\u679CisOriginal=true \u8BF4\u660E\u662F\u539F\u59CB\u8D26\u53F7\uFF0C\u4E0D\u80FD\u89E3\u7ED1\n     */\n    const canUnlink = useMemo(() => {\n        return !accountInfo.isOriginal && !canLink;\n    }, [accountInfo]);\n\n    const bindLoginAccount = () => {\n        form.validateFields().then((values) => {\n            const targetInputValue: string = form.getFieldsValue()?.inputValue?.replace(/\\s/g, '')?.trim?.() || '';\n            setSubmitLoading(true);\n            // \u5224\u65AD\u6B64\u624B\u673A\u53F7\u662F\u5426\u662F\u5B89\u5168\u624B\u673A\u53F7\u7801\uFF0C\u5982\u679C\u662F\u5B89\u5168\u624B\u673A\u53F7\u7801\uFF0C\u5C31\u63D0\u793A\u201D\u5B89\u5168\u624B\u673A\u53F7\u7801\u4E0D\u80FD\u4F5C\u4E3A\u767B\u5F55\u8D26\u53F7\u201C\n            if (authType === 'phone' && userInfo?.security_account?.phone === targetInputValue) {\n                Modal.error({\n                    title: t('new.duplicate_phonel_bindings'),\n                    wrapClassName: 'auth-core-modal-error',\n                    getContainer: () => {\n                        return authCoreModal.rootBody as HTMLElement;\n                    },\n                });\n                setSubmitLoading(false);\n                return;\n            } else if (\n                authType === 'email' &&\n                userInfo?.security_account?.email?.toLowerCase() === targetInputValue?.toLowerCase()\n            ) {\n                Modal.error({\n                    title: t('new.duplicate_email_bindings'),\n                    wrapClassName: 'auth-core-modal-error',\n                    getContainer: () => {\n                        return authCoreModal.rootBody as HTMLElement;\n                    },\n                });\n                setSubmitLoading(false);\n                return;\n            }\n\n            const params: any = {};\n            if (authType === AuthType.phone) {\n                params.phone = targetInputValue;\n            } else {\n                params.email = targetInputValue;\n            }\n            loginBindingsCheckRequest(params)\n                .then((res) => {\n                    navigate('/account/verify', {\n                        state: {\n                            account: targetInputValue,\n                            authType,\n                            verifyToken,\n                            pageType: PageType.BindLoginAccount,\n                        },\n                    });\n                    setSubmitLoading(false);\n                })\n                .catch((error) => {\n                    setSubmitLoading(false);\n                    if (error.error_code === 20109) {\n                        Modal.error({\n                            title:\n                                authType === AuthType.phone\n                                    ? t('error.server_phone_20109')\n                                    : t('error.server_email_20109'),\n                            wrapClassName: 'auth-core-modal-error',\n                            getContainer: () => {\n                                return authCoreModal.rootBody as HTMLElement;\n                            },\n                        });\n                    } else {\n                        message.error(error.message);\n                    }\n                });\n        });\n    };\n\n    const { run: toAccountVerify } = useThrottleFn(\n        (params) => {\n            navigate('/account/verify', {\n                state: {\n                    account: params.account, // \u9A8C\u8BC1\u5B89\u5168\u8D26\u53F7\n                    authType,\n                    unbindAccount: form.getFieldValue('inputValue'),\n                    pageType: PageType.UnbindLoginAccount,\n                },\n            });\n        },\n        { wait: 3000 }\n    );\n\n    const unbindLoginAccount = () => {\n        // \u89E3\u7ED1\u9A8C\u8BC1\u9700\u8981\u9A8C\u8BC1\u5B89\u5168\u8D26\u53F7\n        if (userInfo?.security_account?.email && userInfo?.security_account?.phone) {\n            showSelectSecurityAccount(true, {\n                authType,\n                unbindAccount: form.getFieldValue('inputValue'),\n                pageType: PageType.UnbindLoginAccount,\n            });\n        } else {\n            toAccountVerify({\n                account: userInfo?.security_account?.email || userInfo?.security_account?.phone,\n            });\n        }\n    };\n\n    useEffect(() => {\n        if (accountInfo?.value || accountInfo?.id) {\n            if (authType === AuthType.phone) {\n                const phoneNumber = parsePhoneNumber(accountInfo?.value.replace(/\\s/g, ''));\n                const countryCode = phoneNumber.countryCallingCode;\n                const nationalNumber = phoneNumber.nationalNumber;\n                form.setFieldsValue({\n                    inputValue: encryptValue(`+${countryCode} ${nationalNumber}`),\n                });\n            } else {\n                form.setFieldsValue({\n                    inputValue: encryptValue(accountInfo?.value || accountInfo?.id || ''),\n                });\n            }\n        }\n    }, [accountInfo?.value, accountInfo?.id, authType]);\n\n    return (\n        <div className=\"login-account-bind \">\n            <style>{styles as unknown as string}</style>\n            <Header displayBackBtn={true}>{accountInfo.name}</Header>\n            <Form className=\"account-bind-form\" layout=\"vertical\" form={form} onFinish={bindLoginAccount}>\n                {authType === AuthType.phone ? (\n                    <PhoneInputItem\n                        name=\"inputValue\"\n                        form={form}\n                        disabled={!canLink}\n                        previewMode=\"input\"\n                        extra={\n                            <div className=\"link-account-hint\">\n                                {t('new.link_account_hint').format(accountInfo.name)}\n                            </div>\n                        }\n                    />\n                ) : (\n                    <Form.Item\n                        name=\"inputValue\"\n                        validateTrigger=\"onBlur\"\n                        extra={\n                            <div className=\"link-account-hint\">\n                                {t('new.link_account_hint').format(accountInfo.name)}\n                            </div>\n                        }\n                        rules={[\n                            {\n                                required: true,\n                                validator: async (rule, value) => {\n                                    if (!value) {\n                                        return Promise.reject(t('account.input_vaild_email'));\n                                    } else if (!EmailRegExp.test(value)) {\n                                        return Promise.reject(t('login.email_format_error'));\n                                    }\n                                    return Promise.resolve();\n                                },\n                            },\n                        ]}\n                    >\n                        <Input\n                            className=\"account-input\"\n                            placeholder={accountInfo.name}\n                            disabled={!canLink}\n                            onChange={(e) =>\n                                form.setFields([\n                                    {\n                                        name: 'email',\n                                        value: e.target.value,\n                                        errors: [],\n                                    },\n                                ])\n                            }\n                        />\n                    </Form.Item>\n                )}\n\n                <Form.Item>\n                    {canLink ? (\n                        <Button\n                            className=\"primary-antd-btn link-btn\"\n                            // onClick={bindLoginAccount}\n                            loading={submitLoading}\n                            htmlType=\"submit\"\n                        >\n                            {t('account.link')}\n                        </Button>\n                    ) : (\n                        <></>\n                        // <Button\n                        //     className=\"primary-antd-btn unlink-btn\"\n                        //     disabled={!canUnlink}\n                        //     onClick={() => {\n                        //         unbindLoginAccount();\n                        //     }}\n                        // >\n                        //     Unlink\n                        // </Button>\n                    )}\n                </Form.Item>\n            </Form>\n            <PowerFooter />\n        </div>\n    );\n};\n\nexport default LoginAccountBind;\n", "import { bindLoginAccount } from '@particle-network/auth-core';\nimport { Button } from 'antd';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Header from '../../../components/header';\nimport SVGIcon from '../../../components/icon/svg-icon';\nimport { useCustomNavigate } from '../../../context';\nimport { useUserInfo } from '../../../context/hooks';\nimport useMessage from '../../../context/hooks/useMessage';\nimport { getAccountList } from '../../loginAccount';\nimport styles from './index.less';\n\nconst LoginAccountBindLoading = (props: any) => {\n    const state = props;\n    const { authType = 'google', verifyToken, code } = state;\n    const navigate = useCustomNavigate();\n    const { t } = useTranslation();\n    const [loading, setLoading] = useState(true);\n    const { userInfo } = useUserInfo();\n    const message = useMessage();\n    const accountList = useMemo(() => {\n        return getAccountList({ userInfo, t });\n    }, [userInfo]);\n\n    const authItem = useMemo(() => {\n        const item = (accountList.find((item) => item.type.replace(/v1$/, '') == authType) || {}) as any;\n        return {\n            ...item,\n        };\n    }, [accountList, state]);\n\n    useEffect(() => {\n        if (authType && verifyToken) {\n            bindLoginAccount({\n                provider: authType,\n                // eslint-disable-next-line camelcase\n                thirdparty_code: code,\n                // eslint-disable-next-line camelcase\n                security_account_verify_token: verifyToken,\n                version: 'v2',\n            })\n                .then((res) => {\n                    setLoading(false);\n                })\n                .catch((error) => {\n                    message.error(error.message);\n                    setTimeout(() => {\n                        navigate('/account/security', { replace: true });\n                    });\n                });\n        }\n    }, [authType, verifyToken]);\n\n    return (\n        <div className=\"account-bind-container\">\n            <style>{styles as unknown as string}</style>\n            <Header displayBackBtn={true}></Header>\n            <div className=\"particle-connect-form-contaier center-center flex-column\">\n                {loading ? (\n                    <div className=\"particle-loading\">\n                        <SVGIcon name={authItem.type + '_icon'} className=\"logo-img logo-img-2\" />\n                        <p>\n                            <img\n                                className=\"particle-loading-img\"\n                                width={30}\n                                height={30}\n                                src={require('../../../common/images/loading.png').default}\n                                alt=\"\"\n                            />\n                        </p>\n                    </div>\n                ) : (\n                    <div className=\"result-content resultsuccess\">\n                        <img src={authItem?.icon} alt=\"\" />\n                        <div className=\"info\">Binding succeeded\uFF01</div>\n                        <div className=\"back\">\n                            <Button\n                                type=\"primary\"\n                                onClick={() => {\n                                    navigate('/account/security', { replace: true });\n                                }}\n                            >\n                                Back\n                            </Button>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default LoginAccountBindLoading;\n", "import { isConnected } from '@particle-network/auth-core';\nimport qs from 'qs';\nimport React, { useMemo } from 'react';\nimport type { ICustomRouter } from '../../context/types';\nimport ParticleLoading from '../loading';\n\nexport enum AuthPage {\n    Index = 'index',\n    Login = 'login',\n    EvmSign = 'evm-chain/sign',\n    SolanaSign = 'solana/sign',\n    LoginAccount = 'login-account',\n    AccountSecurity = 'account/security',\n    MasterPasswordVerify = 'account/master-password/verify',\n    MasterPasswordPrompt = 'account/master-password/prompt',\n}\n\ninterface IPage {\n    name?: AuthPage;\n    path?: string;\n    component: React.LazyExoticComponent<any>;\n}\n\nconst pages: IPage[] = [\n    {\n        name: AuthPage.Index,\n        component: React.lazy(() => import('../../pages/index/index')),\n    },\n    {\n        name: AuthPage.Login,\n        component: React.lazy(() => import('../../pages/login')),\n    },\n    {\n        path: 'account/security',\n        component: React.lazy(() => import('../../pages/account/security')),\n    },\n    {\n        name: AuthPage.LoginAccount,\n        path: 'login-account',\n        component: React.lazy(() => import('../../pages/loginAccount/index')),\n    },\n    {\n        path: 'manageDevices/deviceList',\n        component: React.lazy(() => import('../../pages/manageDevices/deviceList/index')),\n    },\n    {\n        path: 'manageDevices/deviceDetails',\n        component: React.lazy(() => import('../../pages/manageDevices/deviceDetails/index')),\n    },\n    {\n        name: AuthPage.EvmSign,\n        component: React.lazy(() => import('../../pages/sign/index')),\n    },\n    {\n        name: AuthPage.SolanaSign,\n        component: React.lazy(() => import('../../pages/sign/components/info-sign')),\n    },\n    {\n        path: 'account/bind',\n        component: React.lazy(() => import('../../pages/account/accountBind/index')),\n    },\n    {\n        path: 'account/verify',\n        component: React.lazy(() => import('../../pages/account/accountVerify/index')),\n    },\n    {\n        path: 'login-account',\n        component: React.lazy(() => import('../../pages/loginAccount/index')),\n    },\n    {\n        path: 'manageDevices/deviceDetails',\n        component: React.lazy(() => import('../../pages/manageDevices/deviceDetails/index')),\n    },\n    {\n        path: 'account/master-password',\n        component: React.lazy(() => import('../../pages/account/setMasterPassword/index')),\n    },\n    {\n        path: 'account/master-password/description',\n        component: React.lazy(() => import('../../pages/account/masterPasswordDescription/index')),\n    },\n    {\n        path: AuthPage.MasterPasswordVerify,\n        component: React.lazy(() => import('../../pages/account/masterPasswordVerify/index')),\n    },\n    {\n        path: AuthPage.MasterPasswordPrompt,\n        component: React.lazy(() => import('../../pages/account/masterPasswordModal/index')),\n    },\n    {\n        path: 'account/master-password/change',\n        component: React.lazy(() => import('../../pages/account/masterPasswordChange/index')),\n    },\n    {\n        path: 'account/set-password',\n        component: React.lazy(() => import('../../pages/account/setPaymentPassword/index')),\n    },\n    {\n        path: 'account/change-password',\n        component: React.lazy(() => import('../../pages/account/changePaymentPassword/index')),\n    },\n    {\n        path: 'login-account/bind',\n        component: React.lazy(() => import('../../pages/loginAccountBind/index')),\n    },\n    {\n        path: 'login-account/bind-loading',\n        component: React.lazy(() => import('../../pages/account/loginAccountBindLoading/index')),\n    },\n];\n\nconst CustomRouter = (props: ICustomRouter) => {\n    const path = useMemo(() => {\n        let path = props.path?.split('?')?.[0].replace(/^\\//, '');\n        if (path == '' || path == '/') {\n            path = AuthPage.Index;\n        }\n        if (path !== AuthPage.Login && !isConnected() && path !== AuthPage.Index) {\n            path = AuthPage.Login;\n        }\n        return path;\n    }, [props.path]);\n\n    const queryString = useMemo(() => {\n        let queryString = props.path?.split('?')?.[1];\n        if (path !== AuthPage.Login && !isConnected() && path !== AuthPage.Index) {\n            queryString = '';\n        }\n        return queryString;\n    }, [props.path, path]);\n\n    const state = useMemo(() => {\n        return {\n            ...(props.state || {}),\n            ...qs.parse(queryString),\n        };\n    }, [props.state, queryString]);\n\n    const Comp = useMemo(() => {\n        let Comp = pages.find((item: IPage) => item.name === path || item.path === path);\n        if (!Comp) {\n            if (path) {\n                console.log('Not Found', path);\n            }\n            Comp = pages[0];\n        }\n        return Comp;\n    }, [path]);\n\n    return (\n        <div data-path={path} data-state={qs.stringify(state)} key={path}>\n            <React.Suspense\n                fallback={\n                    <div className=\"lazy-loaing-container\">\n                        <ParticleLoading />\n                    </div>\n                }\n            >\n                <Comp.component {...state} children={props.children} />\n            </React.Suspense>\n        </div>\n    );\n};\n\nexport default CustomRouter;\n", "import { Modal } from 'antd';\nimport React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\n\nimport { useAuthCoreModal } from '../../context';\nimport ParticleDrawer from '../particle-drawer';\nimport styles from './index.less';\n\ninterface IProps {\n    children?: React.ReactNode;\n    visible?: boolean;\n    containerSelector?: any;\n    title?: string | any;\n    modalProps?: any;\n    locked?: 'modal' | 'drawer';\n    drawerProps?: any;\n    className?: string;\n    closable?: boolean;\n    onOpen?: () => void;\n    onClose?: () => void;\n}\nconst ParticleModal = forwardRef((props: IProps, ref) => {\n    const { children, title, drawerProps = {}, modalProps = {} } = props;\n    const { authCoreModal } = useAuthCoreModal();\n    const [visible, setVisible] = useState(props.visible || false);\n\n    const onClose = () => {\n        setVisible(false);\n        props.onClose && props.onClose();\n    };\n\n    const onOpen = () => {\n        setVisible(true);\n        props.onOpen && props.onOpen();\n    };\n\n    useImperativeHandle(ref, () => ({\n        setVisible,\n        onOpen,\n        onClose,\n    }));\n\n    useEffect(() => {\n        setVisible(props.visible ?? false);\n    }, [props.visible]);\n\n    if (modalProps?.style?.top) {\n        modalProps.style.top = '';\n    }\n\n    return (\n        <>\n            <style>{styles as unknown as string}</style>\n            {authCoreModal.viewType == 'desktop' || props.locked === 'modal' ? (\n                <Modal\n                    title={title}\n                    open={visible}\n                    okText=\"\"\n                    wrapClassName={`w-model-container ${props.className || ''}`}\n                    centered={true}\n                    maskClosable={false}\n                    getContainer={() => {\n                        return props.containerSelector\n                            ? document.querySelector(props.containerSelector)\n                            : authCoreModal.rootModalContainer || document.querySelector('body');\n                    }}\n                    onCancel={() => {\n                        onClose();\n                    }}\n                    closable={props.closable ?? true}\n                    // closeIcon={<MIcon name=\"icon_63\" size={30} />}\n                    {...modalProps}\n                    styles={{\n                        ...modalProps.styles,\n                    }}\n                >\n                    {children}\n                </Modal>\n            ) : (\n                <ParticleDrawer\n                    className={`w-drawer-container ${props.className || ''}`}\n                    closable={props.closable ?? true}\n                    onClose={onClose}\n                    visible={visible}\n                    placement=\"bottom\"\n                    getContainer={() => {\n                        return props.containerSelector\n                            ? document.querySelector(props.containerSelector)\n                            : authCoreModal.rootModalContainer || document.querySelector('body');\n                    }}\n                    extra={<>{/* <MIcon name=\"icon_63\" size={30} onClick={() => onClose()} /> */}</>}\n                    title={title}\n                    {...drawerProps}\n                >\n                    {children}\n                </ParticleDrawer>\n            )}\n        </>\n    );\n});\n\nexport default ParticleModal;\n", "import React, { useEffect, useRef } from 'react';\n\nconst AuthCoreModalContainer = ({ setAuthCoreModal }: any) => {\n    const rootModalContainerRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        setAuthCoreModal({\n            rootModalContainer: rootModalContainerRef.current,\n        });\n    }, [setAuthCoreModal]);\n\n    return <div ref={rootModalContainerRef}></div>;\n};\n\nexport default AuthCoreModalContainer;\n", "import en from './en.json';\nimport jp from './jp.json';\nimport kr from './kr.json';\nimport tc from './tc.json';\nimport zh from './zh.json';\n\nconst resources = {\n    en: {\n        translation: en,\n    },\n    'zh-CN': {\n        translation: zh,\n    },\n    'zh-TW': {\n        translation: tc,\n    },\n    'zh-HK': {\n        translation: tc,\n    },\n    ja: {\n        translation: jp,\n    },\n    ko: {\n        translation: kr,\n    },\n};\nexport default resources;\n", "import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport resources from './locales/resources';\n\nexport const i18nInit = (lng = 'en') => {\n    i18n.use(initReactI18next).init({\n        fallbackLng: 'en',\n        resources,\n        lng: lng ? lng.replace('_', '-') : undefined,\n        interpolation: {\n            escapeValue: false,\n        },\n    });\n};\nexport default i18n;\n", "import {\n    getLatestAuthType,\n    getUserInfo,\n    isNullish,\n    requireNotNullish,\n    type ERC4337Options,\n} from '@particle-network/auth-core';\nimport type { Chain } from '@particle-network/chains';\nimport base58 from 'bs58';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getEVMPublicAddress } from '../api/getPublicAddress';\nimport type { LoginAuthorization, SolanaAuthorization } from '../types/connectOptions';\nimport { isSolana } from './chain-utils';\nimport { shortString, toHexPrefixString } from './common-utils';\n\nexport type AuthorizationResult = {\n    message: string;\n    signature: string;\n};\n\n//https://eips.ethereum.org/EIPS/eip-4361\nconst signInEthereumMessage = `{0} wants you to sign in with your Ethereum account:\n{1}\n\n{2}\n\nURI: https://{3}/\nVersion: 1\nChain ID: {4}\nNonce: {5}\nIssued At: {6}\nExpiration Time: {7}`;\n\nconst authorizeUtils = {\n    isNeedAuthorize({ authorization, chain }: LoginAuthorization): boolean {\n        if (!authorization) {\n            return false;\n        }\n        if (chain.name.toLowerCase() === 'solana') {\n            return (\n                'message' in authorization &&\n                !isNullish(authorization.message) &&\n                'uniq' in authorization &&\n                !isNullish(authorization.uniq)\n            );\n        } else {\n            return 'uniq' in authorization && !isNullish(authorization.uniq);\n        }\n    },\n\n    async generateMessage(chain: Chain, erc4337?: ERC4337Options): Promise<string> {\n        const domain = location.host;\n        const userInfo = getUserInfo() as any;\n        const address = isSolana(chain)\n            ? window.particleAuth?.solana.selectedAddress\n            : await getEVMPublicAddress({\n                  ...erc4337,\n                  chainId: chain.id,\n              });\n        const authType = getLatestAuthType() || 'email';\n        const account = userInfo[authType] || userInfo[`${authType}_email`] || shortString(userInfo[`${authType}_id`]);\n        const statement = `${authType.titleCase()}: ${account}`;\n        const nonce = uuidv4().replace(/-/g, '');\n        const issuedAt = new Date().toISOString();\n        // 15\u5206\u949F\u6709\u6548\u671F\n        const expirationTime = new Date(Date.now() + 10 * 60 * 1000).toISOString();\n        return signInEthereumMessage.format(\n            domain,\n            address || '',\n            statement,\n            domain,\n            chain.id.toString(),\n            nonce,\n            issuedAt,\n            expirationTime\n        );\n    },\n\n    async authorize(\n        { authorization, chain }: LoginAuthorization,\n        erc4337?: ERC4337Options\n    ): Promise<AuthorizationResult> {\n        const message = isSolana(chain)\n            ? (authorization as SolanaAuthorization).message\n            : toHexPrefixString(await this.generateMessage(chain, erc4337));\n        const particleAuth = requireNotNullish(window.particleAuth);\n        let signature;\n        if (isSolana(chain)) {\n            const result = await particleAuth.solana.signMessage(base58.decode(message));\n            signature = Buffer.from(result).toString('base64');\n        } else {\n            signature = await particleAuth.ethereum.signMessage(message);\n        }\n        return {\n            message,\n            signature,\n        };\n    },\n};\n\nexport default authorizeUtils;\n", "import { AuthCoreEvent, getUserInfo, isConnected } from '@particle-network/auth-core';\nimport { walletEntryPlugin } from '@particle-network/wallet';\nimport React, { useCallback, useEffect } from 'react';\nimport { useModalOptions } from '.';\nimport { useAuthCore, useConnect, useEthereum, useSolana } from './hooks';\n\nenum MessageType {\n    OpenAccountAndSecurity = 'open-account-and-security',\n    GetUserInfo = 'get-user-info',\n}\n\nconst IframeWalletPlugin = () => {\n    const { provider } = useEthereum();\n\n    const { wallet } = useSolana();\n\n    const { openAccountAndSecurity } = useAuthCore();\n\n    const { modalOptions } = useModalOptions();\n\n    const { connected } = useConnect();\n\n    const customEventHandler = useCallback(\n        async (messageType: string) => {\n            if (messageType === MessageType.OpenAccountAndSecurity) {\n                openAccountAndSecurity();\n            } else if (messageType === MessageType.GetUserInfo) {\n                return getUserInfo();\n            }\n        },\n        [openAccountAndSecurity]\n    );\n\n    useEffect(() => {\n        const walletOptions = {\n            ...modalOptions.wallet,\n            erc4337: modalOptions.erc4337,\n            language: modalOptions.language,\n        };\n\n        walletEntryPlugin.init(\n            {\n                projectId: modalOptions.projectId,\n                clientKey: modalOptions.clientKey,\n                appId: modalOptions.appId,\n            },\n            walletOptions\n        );\n        const onConnected = () => {\n            walletEntryPlugin.walletEntryCreate();\n        };\n        const onDisconnect = () => {\n            walletEntryPlugin.walletEntryDestroy();\n        };\n        if (typeof window !== 'undefined') {\n            window.particleAuth?.on(AuthCoreEvent.ParticleAuthDisconnect, onDisconnect);\n            window.particleAuth?.on(AuthCoreEvent.ParticleAuthConnect, onConnected);\n        }\n        if (isConnected()) {\n            walletEntryPlugin.walletEntryCreate();\n        }\n        return () => {\n            if (typeof window !== 'undefined') {\n                window.particleAuth?.off(AuthCoreEvent.ParticleAuthDisconnect, onDisconnect);\n                window.particleAuth?.off(AuthCoreEvent.ParticleAuthConnect, onConnected);\n            }\n        };\n    }, [\n        modalOptions.projectId,\n        modalOptions.clientKey,\n        modalOptions.appId,\n        modalOptions.wallet,\n        modalOptions.erc4337,\n        modalOptions.language,\n    ]);\n\n    useEffect(() => {\n        if (connected) {\n            walletEntryPlugin.setWalletCore(\n                {\n                    ethereum: provider,\n                    solana: wallet,\n                },\n                customEventHandler\n            );\n        }\n    }, [connected, provider, wallet, customEventHandler]);\n\n    return (\n        <div id=\"auth-core-modal-wallet-plugin\" style={{ display: 'none' }}>\n            Wallet Plugin\n        </div>\n    );\n};\n\nexport default IframeWalletPlugin;\n", "import { Button, Modal } from 'antd';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { PromptSettingType } from '../../../api/model/bundle';\nimport CircleClose from '../../../components/icon/circle-close';\nimport { useAuthCoreModal, useParticleAuth } from '../../../context';\nimport styles from './index.less';\nexport interface AccountTipModalProps {\n    visible: boolean;\n    confirm?: () => void;\n}\n\nconst AccountTipModal = ({ modal }: { modal: AccountTipModalProps }) => {\n    const { visible, confirm } = modal;\n    const { t } = useTranslation();\n    const { setPaymentPassword, showAccountTipModal, modalOptions } = useParticleAuth();\n    const { authCoreModal } = useAuthCoreModal();\n    const setPassword = () => {\n        showAccountTipModal({\n            visible: false,\n        });\n        setPaymentPassword();\n    };\n\n    const continueConfirm = () => {\n        confirm?.();\n        showAccountTipModal({\n            visible: false,\n        });\n    };\n\n    return (\n        <>\n            <style>{styles as unknown as string}</style>\n            <Modal\n                open={visible}\n                closable={false}\n                centered={true}\n                okButtonProps={{ style: { display: 'none' } }}\n                cancelButtonProps={{ style: { display: 'none' } }}\n                width={'90%'}\n                getContainer={() => {\n                    return authCoreModal.rootBody as HTMLElement;\n                }}\n            >\n                <div className=\"wrong-password-content\">\n                    <CircleClose\n                        className=\"close-icon\"\n                        onClick={() =>\n                            showAccountTipModal({\n                                visible: false,\n                            })\n                        }\n                    />\n                    <h3 className=\"modal-title m-margin-top-40\">{t('account.account_modal1_title')}</h3>\n                    <div className=\"tip\">{t('account.account_modal1_tip')}</div>\n                    <Button className=\"btn\" onClick={setPassword}>\n                        {t('account.account_modal1_btn1')}\n                    </Button>\n                    {\n                        // \u5F3A\u5236\u8BBE\u7F6E\u652F\u4ED8\u5BC6\u7801\uFF0C\u9690\u85CF\u8DF3\u8FC7\u6309\u94AE\n                        modalOptions.promptSettingConfig?.promptPaymentPasswordSettingWhenSign !==\n                            PromptSettingType.everyAndNotSkip && (\n                            <Button className=\"btn cancel\" onClick={continueConfirm}>\n                                {t('account.account_modal1_btn2')}\n                            </Button>\n                        )\n                    }\n                </div>\n            </Modal>\n        </>\n    );\n};\n\nexport default AccountTipModal;\n", "import { ApiError, verifyPaymentPassword } from '@particle-network/auth-core';\nimport { useRequest } from 'ahooks';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport ParticleDrawer from '../../../components/particle-drawer';\nimport { useAuthCoreModal, useParticleAuth } from '../../../context';\nimport ParticleKeywords from '../ParticleKeywords';\nimport styles from './index.less';\nexport interface PaymentVerify {\n    visible: boolean;\n    onVerifyCompleted?: (password: string) => void;\n    onVerifyFailed?: (message: string) => void;\n    type?: 'close' | 'verify';\n}\n\n//\u652F\u4ED8\u65F6\u9A8C\u8BC1\nconst PaymentVerifyModal = ({ props }: { props: PaymentVerify }) => {\n    const { setPaymentVerify, setWrongPassword } = useParticleAuth();\n    const { t } = useTranslation();\n\n    const [pwd, setPwd] = useState('');\n    const { authCoreModal } = useAuthCoreModal();\n    useEffect(() => {\n        if (props.visible) {\n            setPwd('');\n        }\n    }, [props.visible]);\n\n    const { loading: verifyLoading, run: runVerify } = useRequest(verifyPaymentPassword, {\n        manual: true,\n        onSuccess: (result, params) => {\n            setPaymentVerify({ visible: false });\n            props.onVerifyCompleted?.(pwd);\n        },\n        onError: (error: any) => {\n            console.log('verify password error', error);\n            setPwd('');\n            if (error?.error_code === ApiError.WrongPaymentPassword) {\n                setWrongPassword({ visible: true });\n            } else if (error?.error_code === ApiError.SecurityAccountFrozen) {\n                const seconds = error.extra.seconds || 0;\n                setWrongPassword({\n                    visible: true,\n                    accountFrozen: {\n                        seconds: seconds,\n                    },\n                });\n            }\n        },\n    });\n\n    const closeVerify = () => {\n        if (verifyLoading) return false;\n        setPaymentVerify({ visible: false });\n        props.onVerifyFailed?.(t('common.cancel'));\n    };\n\n    const checkInputPwd = (value: string) => {\n        setPwd(value);\n        if (value.length === 6) {\n            runVerify(value);\n        }\n    };\n\n    return (\n        <>\n            <style>{styles as unknown as string}</style>\n            <ParticleDrawer\n                visible={props.visible}\n                placement=\"bottom\"\n                height={421}\n                closable={false}\n                maskClosable={false}\n                onClose={closeVerify}\n                className=\"payment-password-drawer\"\n                title={\n                    (props.type === 'close'\n                        ? t('account.close_payment_password')\n                        : t('account.payment_password')) as string\n                }\n                forceRender={true}\n                getContainer={() => {\n                    return authCoreModal.rootBody as HTMLElement;\n                }}\n            >\n                <div className=\"content payment-verify-content\">\n                    <ParticleKeywords onChange={checkInputPwd} value={pwd} keyboardInvisible={verifyLoading} />\n                </div>\n            </ParticleDrawer>\n        </>\n    );\n};\n\nexport default PaymentVerifyModal;\n", "import { useInterval } from 'ahooks';\nimport { Button, Modal } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport CircleClose from '../../../components/icon/circle-close';\nimport { useAuthCoreModal, useCustomNavigate, useParticleAuth } from '../../../context';\nimport styles from './index.less';\nexport interface WrongPasswordInfo {\n    visible: boolean;\n    accountFrozen?: { seconds: number };\n}\n\nconst WrongPasswordModal = ({ info }: { info: WrongPasswordInfo }) => {\n    const { t } = useTranslation();\n    const { setWrongPassword, setPaymentVerify, userInfo, showSelectSecurityAccount } = useParticleAuth();\n\n    const navigate = useCustomNavigate();\n\n    const forgotPassword = () => {\n        setWrongPassword({ visible: false });\n        setPaymentVerify({ visible: false });\n        chooseVerifyType();\n    };\n    const { authCoreModal } = useAuthCoreModal();\n\n    //reset password\n    const chooseVerifyType = () => {\n        if (userInfo?.security_account?.email && userInfo?.security_account?.phone) {\n            showSelectSecurityAccount(true);\n        } else {\n            navigate('/account/set-password', {\n                state: {\n                    account: userInfo?.security_account?.email || userInfo?.security_account?.phone,\n                },\n            });\n        }\n    };\n\n    const retry = () => {\n        setWrongPassword({ visible: false });\n    };\n\n    const [interval, setInterval] = useState<number | undefined>();\n\n    const [countdown, setCountdown] = useState(info.accountFrozen?.seconds || 0);\n\n    useInterval(() => {\n        const result = countdown - 1;\n        setCountdown(result);\n        if (result <= 0) {\n            setInterval(undefined);\n            retry();\n        }\n    }, interval);\n\n    useEffect(() => {\n        if (info.accountFrozen) {\n            setCountdown(info.accountFrozen.seconds);\n            setInterval(1000);\n        }\n        return () => {\n            setInterval(undefined);\n        };\n    }, [info.accountFrozen]);\n\n    const formatTime = (seconds: number): string => {\n        let h: string | number = Math.floor(seconds / 60 / 60);\n        h = h < 10 ? '0' + h : h;\n        let m: string | number = Math.floor((seconds / 60) % 60);\n        m = m < 10 ? '0' + m : m;\n        let s: string | number = Math.floor(seconds % 60);\n        s = s < 10 ? '0' + s : s;\n        return h + ':' + m + ':' + s;\n    };\n\n    return (\n        <>\n            <style>{styles as unknown as string}</style>\n            <Modal\n                open={info.visible}\n                closable={false}\n                centered={true}\n                okButtonProps={{ style: { display: 'none' } }}\n                cancelButtonProps={{ style: { display: 'none' } }}\n                getContainer={() => {\n                    return authCoreModal.rootBody as HTMLDivElement;\n                }}\n            >\n                <div className=\"wrong-password-content\">\n                    <CircleClose className=\"close-icon\" onClick={retry} />\n\n                    {info.accountFrozen ? (\n                        <>\n                            <div className=\"modal-title\">{t('account.incorrect_payment_password')}</div>\n                            <div className=\"tip m-margin-top-20\">{t('account.incorrect_tip2')}</div>\n                        </>\n                    ) : (\n                        <div className=\"tip m-margin-top-20\">{t('account.incorrect_tip1')}</div>\n                    )}\n\n                    {info.accountFrozen && <div className=\"frozen-countdown\">{formatTime(countdown)}</div>}\n\n                    <Button className=\"btn\" onClick={forgotPassword}>\n                        {t('account.forgot_password')}\n                    </Button>\n\n                    {!info.accountFrozen && (\n                        <Button className=\"btn\" onClick={retry}>\n                            {t('account.retry')}\n                        </Button>\n                    )}\n                </div>\n            </Modal>\n        </>\n    );\n};\n\nexport default WrongPasswordModal;\n", "import { AuthType } from '@particle-network/auth-core';\nimport { Button } from 'antd';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport ParticleDrawer from '../../../components/particle-drawer';\nimport { useAuthCoreModal, useCustomNavigate, useParticleAuth } from '../../../context';\nimport { displayEmail, displayPhone } from '../../../utils/common-utils';\nimport styles from './index.less';\n\nconst SelectSecurityAccount = (props: any) => {\n    const { t } = useTranslation();\n    const { visible, state } = props;\n    const { showSelectSecurityAccount, userInfo } = useParticleAuth();\n    const navigate = useCustomNavigate();\n    const { authCoreModal } = useAuthCoreModal();\n    const navigateToVerify = (account?: string, authType?: AuthType) => {\n        if (state) {\n            navigate('/account/verify', {\n                state: {\n                    account,\n                    ...state,\n                },\n            });\n        } else {\n            navigate('/account/set-password', {\n                state: {\n                    account,\n                },\n            });\n        }\n        showSelectSecurityAccount(false);\n    };\n\n    return (\n        <>\n            <style>{styles as unknown as string}</style>\n            <ParticleDrawer\n                title={t('account.modal_select_verification') ?? ''}\n                placement=\"bottom\"\n                closable={false}\n                className=\"select-account-drawer\"\n                visible={visible}\n                maskClosable={true}\n                forceRender={true}\n                height={220}\n                onClose={() => showSelectSecurityAccount(false)}\n                getContainer={() => {\n                    return authCoreModal.rootBody as HTMLElement;\n                }}\n            >\n                <div className=\"select-account\">\n                    <Button\n                        className=\"account-btn\"\n                        onClick={() => navigateToVerify(userInfo?.security_account?.email, AuthType.email)}\n                    >\n                        {`${t('account.email')} - ${displayEmail(userInfo?.security_account?.email || '')}`}\n                    </Button>\n                    <Button\n                        className=\"account-btn\"\n                        onClick={() => navigateToVerify(userInfo?.security_account?.phone, AuthType.phone)}\n                    >\n                        {`${t('account.mobile')} - ${displayPhone(userInfo?.security_account?.phone || '')}`}\n                    </Button>\n                </div>\n            </ParticleDrawer>\n        </>\n    );\n};\n\nexport default SelectSecurityAccount;\n", "import type { UserInfo } from '@particle-network/auth-core';\nimport {\n    AuthCoreEvent,\n    EvmRpcMethod,\n    SolanaRpcMethod,\n    connect,\n    getConnectCaptcha,\n    getUserInfo,\n    hasPaymentPassword,\n    isConnected,\n    particleAuth,\n    syncUserInfo,\n} from '@particle-network/auth-core';\nimport { useSetState, useSize } from 'ahooks';\nimport base58 from 'bs58';\nimport { EventEmitter } from 'events';\nimport React, { createContext, useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport root from 'react-shadow';\nimport { AuthError } from '../api/model/authError';\nimport CustomRouter, { AuthPage } from '../components/customRouter';\nimport ParticleModal from '../components/particle-modal';\nimport AuthCoreModalContainer from '../components/particle-modal/authCoreModalContainer';\nimport i18n, { i18nInit } from '../i18n';\nimport type { AccountTipModalProps } from '../pages/account/accountTipModal';\nimport type { PaymentVerify } from '../pages/account/paymentVerifyModal';\nimport type { WrongPasswordInfo } from '../pages/account/wrongPasswordModal';\nimport type { LoginAuthorization, SolanaAuthorization } from '../types/connectOptions';\nimport { isServer } from '../utils';\nimport authorizeUtils from '../utils/authorizeUtils';\nimport { isSolana } from '../utils/chain-utils';\nimport { toHexPrefixString } from '../utils/common-utils';\nimport { sendAnalyticsActive } from '../utils/sendAnalyticsActive';\nimport type {\n    AuthCoreModalOptions,\n    ConnectionStatus,\n    IAuthCoreModal,\n    ICustomRouter,\n    NavigateOptions,\n    SocialConnectCallback,\n    ViewType,\n} from './types';\nimport { AuthCoreModalEvent } from './types';\n\nconst IframeWalletPlugin = React.lazy(() => import('./iframeWalletPlugin'));\nconst AccountTipModal = React.lazy(() => import('../pages/account/accountTipModal'));\nconst PaymentVerifyModal = React.lazy(() => import('../pages/account/paymentVerifyModal'));\nconst WrongPasswordModal = React.lazy(() => import('../pages/account/wrongPasswordModal'));\nconst SelectSecurityAccount = React.lazy(() => import('../pages/account/selectSecurityAccount'));\n\nif (!isServer()) {\n    // @ts-ignore\n    window.particleI18n = i18n;\n}\n\nexport const defaultModalOptions = {\n    projectId: '',\n    clientKey: '',\n    appId: '',\n    themeType: 'light',\n    language: 'en',\n    fiatCoin: 'USD',\n    promptSettingConfig: {\n        promptPaymentPasswordSettingWhenSign: 1,\n        promptMasterPasswordSettingWhenLogin: 0,\n    },\n    customStyle: {\n        modalWidth: 400,\n        modalHeight: 650,\n    },\n    wallet: { visible: true, themeType: 'light' },\n};\n\ninterface GlobalState {\n    connectionStatus: ConnectionStatus;\n    setConnectionStatus: (status: ConnectionStatus) => void;\n    userInfo?: UserInfo;\n    modalOptions: AuthCoreModalOptions;\n    setModalOptions: (options: any) => void;\n    showSelectSecurityAccount: (display: boolean, state?: any) => void;\n    setWrongPassword: (info: WrongPasswordInfo) => void;\n    setPaymentVerify: (props: PaymentVerify) => void;\n    showAccountTipModal: (props: AccountTipModalProps) => void;\n    setPaymentPassword: () => void;\n    loginSuccessRedirectToApp: () => void;\n    events: EventEmitter;\n    authCoreModal: IAuthCoreModal;\n    setAuthCoreModal: (params: any) => void;\n    customRouter: ICustomRouter;\n    setCustomRouter: (params: any) => void;\n    customNavigate: (url: string | number, options?: NavigateOptions) => void;\n    setLoginAuthorization: (loginAuthorization?: LoginAuthorization) => void;\n    authCoreModalClose: () => void;\n    socialConnectCallback?: SocialConnectCallback;\n    setSocialConnectCallback: (callback?: SocialConnectCallback) => void;\n}\n\nconst defaultData: GlobalState = {\n    connectionStatus: 'loading',\n    setConnectionStatus: (status) => {},\n    modalOptions: defaultModalOptions as AuthCoreModalOptions,\n    setModalOptions: (options) => {},\n    showSelectSecurityAccount: (display) => {},\n    setWrongPassword: (info) => {},\n    setPaymentVerify: (props) => {},\n    showAccountTipModal: (props) => {},\n    setPaymentPassword: () => {},\n    loginSuccessRedirectToApp: () => {},\n    events: {} as any,\n    authCoreModal: {} as IAuthCoreModal,\n    setAuthCoreModal: (params) => {},\n    customRouter: {\n        path: '/',\n    } as ICustomRouter,\n    setCustomRouter: (params) => {},\n    customNavigate: (url, options) => {},\n    setLoginAuthorization: (authorization) => {},\n    authCoreModalClose: () => {},\n    setSocialConnectCallback: () => {},\n};\n\nexport const GlobalContext = createContext<GlobalState>(defaultData);\n\nexport const AuthCoreContextProvider = (props: { options: AuthCoreModalOptions; children: React.ReactNode }) => {\n    const [userInfo, setUserInfo] = useState<UserInfo | undefined>();\n    const rootRef = React.useRef<HTMLDivElement>(null);\n    const [events] = useState(new EventEmitter());\n\n    const [styles, setStyles] = useState<any>({\n        styleList: [\n            {\n                name: 'antStyle',\n                loadStyle: () => import('../../../../node_modules/antd/dist/antd.css'),\n                styleContent: '',\n            },\n            {\n                name: 'globalStyle',\n                loadStyle: () => import('../common/style/global.scss'),\n                styleContent: '',\n            },\n            {\n                name: 'scrollStyle',\n                loadStyle: () => import('../common/style/scroll.scss'),\n                styleContent: '',\n            },\n            {\n                name: 'themeStyle',\n                loadStyle: () => import('../common/style/theme.scss'),\n                styleContent: '',\n            },\n        ],\n    });\n\n    const [modalOptions, setModalOptions] = useSetState<AuthCoreModalOptions>({\n        ...(defaultModalOptions as AuthCoreModalOptions),\n    });\n\n    const [selectSecurityAccount, setSelectSecurityAccount] = useState(false);\n\n    const [verifySecurityAccountState, setVerifySecurityAccountState] = useState<any>();\n\n    const [wrongPassword, setWrongPassword] = useState<WrongPasswordInfo>({ visible: false });\n\n    const [accountTipModal, setAccountTipModal] = useState<AccountTipModalProps>({\n        visible: false,\n    });\n\n    const initParticleAuthRef = React.useRef<any>(false);\n\n    const [paymentVerify, setPaymentVerify] = useState<PaymentVerify>({ visible: false });\n\n    const [loginAuthorization, setLoginAuthorization] = useState<LoginAuthorization>();\n\n    const [connectionStatus, setConnectionStatus] = useState<ConnectionStatus>(defaultData.connectionStatus);\n\n    const showSelectSecurityAccount = (display: boolean, state?: any) => {\n        setVerifySecurityAccountState(state);\n        setSelectSecurityAccount(display);\n    };\n\n    const showAccountTipModal = (props: AccountTipModalProps) => {\n        setAccountTipModal(props);\n    };\n\n    const loadStyles = () => {\n        const fns = styles.styleList.map((item: any) => {\n            return item?.loadStyle?.();\n        });\n        Promise.all(fns).then((styles: any) => {\n            const styleList = styles.map((item: any) => {\n                return {\n                    styleContent: item.default,\n                };\n            });\n            setStyles({\n                styleList,\n            });\n        });\n    };\n\n    const [customRouter, setCustomRouter] = useSetState<ICustomRouter>({ path: '/' });\n    const [authCoreModal, setAuthCoreModal] = useSetState<IAuthCoreModal>({\n        viewType: 'mobile' as ViewType,\n        particleModalVisible: false,\n        rootModalContainer: null,\n        rootBody: null,\n        closable: true,\n    });\n\n    const customNavigate = useCallback(\n        (url: string | number, options?: NavigateOptions) => {\n            if (typeof url === 'string' && url !== '/') {\n                url = url.replace(/^\\//, '');\n            }\n\n            console.log('customNavigate', url, options);\n\n            let { history } = customRouter;\n\n            if (!history) {\n                history = [];\n            }\n\n            if (options?.back === true) {\n                if (\n                    typeof url === 'string' &&\n                    !!history.find((item: any) => item.path.replace(/^\\//, '') === (url as string).replace(/^\\//, ''))\n                ) {\n                    url = history.findIndex((item) => item.path === url) - history.length + 1;\n                }\n            }\n\n            if (typeof url === 'string') {\n                if (url !== AuthPage.Login && url !== AuthPage.Index && !isConnected()) {\n                    throw AuthError.notLogin();\n                }\n\n                const { replace = false, state = {} } = options || {};\n\n                if (history.length && replace) {\n                    history.pop();\n                }\n\n                history.push({\n                    path: url,\n                    state,\n                    updateAt: new Date().getTime(),\n                });\n\n                setCustomRouter({\n                    path: url,\n                    replace,\n                    state,\n                    history,\n                });\n            } else if (typeof url === 'number' && history.length > 0) {\n                for (let i = 0; i < Math.abs(url); i++) {\n                    history.pop();\n                }\n\n                if (history.length === 0) {\n                    setAuthCoreModal({\n                        particleModalVisible: false,\n                    });\n                    return;\n                }\n\n                const route = history[history.length - 1];\n                setCustomRouter({\n                    path: route?.path,\n                    replace: false,\n                    state: route?.state,\n                    history,\n                });\n            }\n        },\n        [customRouter, setAuthCoreModal, setCustomRouter]\n    );\n\n    const setPaymentPassword = useCallback(() => {\n        if (userInfo?.security_account?.has_set_payment_password) {\n            return;\n        }\n        if (!userInfo?.security_account?.email && !userInfo?.security_account?.phone) {\n            customNavigate('/account/bind', {\n                state: {\n                    accountType: userInfo?.email ? 'phone' : 'email',\n                    showSwitch: true,\n                    redirectUrl: '/account/set-password',\n                },\n            });\n            return;\n        }\n        if (userInfo?.security_account?.email && userInfo?.security_account?.phone) {\n            showSelectSecurityAccount(true);\n        } else {\n            customNavigate('/account/set-password', {\n                state: {\n                    account: userInfo?.security_account?.email || userInfo?.security_account?.phone,\n                },\n            });\n        }\n    }, [userInfo, customNavigate]);\n\n    const loginSuccessRedirectToApp = useCallback(() => {\n        console.log('login success', 'redirectToApp');\n\n        let authorizeResult;\n        if (loginAuthorization && authorizeUtils.isNeedAuthorize(loginAuthorization)) {\n            if (hasPaymentPassword()) {\n                if (isSolana(loginAuthorization.chain)) {\n                    const message = (loginAuthorization.authorization as SolanaAuthorization).message;\n                    customNavigate(AuthPage.SolanaSign, {\n                        state: {\n                            method: SolanaRpcMethod.signMessage,\n                            param: base58.decode(message),\n                            loginAuthorizationSign: true,\n                        },\n                    });\n                } else {\n                    authorizeUtils\n                        .generateMessage(loginAuthorization.chain, modalOptions.erc4337)\n                        .then((message) => {\n                            customNavigate(AuthPage.EvmSign, {\n                                state: {\n                                    method: loginAuthorization.authorization.uniq\n                                        ? EvmRpcMethod.personalSignUniq\n                                        : EvmRpcMethod.personalSign,\n                                    param: toHexPrefixString(message),\n                                    loginAuthorizationSign: true,\n                                },\n                            });\n                        })\n                        .catch((error) => {\n                            events.emit(AuthCoreModalEvent.LoginFail, error);\n                        });\n                }\n                return;\n            } else {\n                authorizeUtils\n                    .authorize(loginAuthorization, modalOptions.erc4337)\n                    .then((result) => {\n                        events.emit(AuthCoreModalEvent.LoginSuccess, {\n                            ...userInfo,\n                            authorization: result,\n                        });\n                    })\n                    .catch((error) => {\n                        events.emit(AuthCoreModalEvent.LoginFail, error);\n                    });\n            }\n        } else {\n            events.emit(AuthCoreModalEvent.LoginSuccess, {\n                ...(userInfo ?? getUserInfo()),\n                authorization: authorizeResult,\n            });\n        }\n    }, [customNavigate, events, userInfo, modalOptions.erc4337, loginAuthorization]);\n\n    const authCoreModalClose = () => {\n        if (events.listenerCount(AuthCoreModalEvent.SignResponse) > 0) {\n            events.emit(AuthCoreModalEvent.SignResponse, {\n                error: AuthError.userRejectedRequest(),\n            });\n        }\n\n        if (events.listenerCount(AuthCoreModalEvent.LoginSuccess)) {\n            if (customRouter?.path === AuthPage.Login || !userInfo) {\n                events.emit(AuthCoreModalEvent.LoginFail, AuthError.userCancelOperation());\n            } else {\n                events.emit(AuthCoreModalEvent.LoginSuccess, userInfo);\n            }\n        }\n\n        setAuthCoreModal({\n            particleModalVisible: false,\n        });\n    };\n\n    const getPageHTML = () => {\n        let htmlContent = rootRef.current?.outerHTML || '';\n        const path = rootRef.current?.getAttribute('data-path');\n        htmlContent = Buffer.from(htmlContent).toString('base64');\n        console.log('getPageHTML', path, htmlContent.substring(0, 30) + '...');\n        return htmlContent;\n    };\n\n    const fontStyle = useMemo(() => {\n        let style = '';\n        if (!isServer()) {\n            const bodyFontFamily = window.getComputedStyle(window.document.body).fontFamily;\n            const fontFamily =\n                props.options?.customStyle?.fontFamily ||\n                bodyFontFamily ||\n                '\"PingFang SC\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif';\n\n            style = ` \n                            .particle-auth-core-shadow-root {\n                                --auth-core-font-family: ${fontFamily};\n                            }\n                        `;\n        }\n\n        return style;\n    }, [props.options?.customStyle?.fontFamily]);\n\n    // \u81EA\u5B9A\u4E49 \u4E3B\u9898\n    const customThemeStyle = useMemo(() => {\n        const themeType = modalOptions.themeType;\n        const customStyle = modalOptions.customStyle || {};\n\n        const theme = {\n            ...Object.fromEntries(\n                Object.keys(customStyle || {})\n                    .filter((key) => key !== 'theme')\n                    .map((key) => {\n                        return [key, (customStyle as any)?.[key] || ''];\n                    })\n            ),\n\n            ...(customStyle?.theme?.[themeType === 'light' ? 'light' : 'dark'] || {}),\n        };\n\n        const styleContent = Object.keys(theme)\n            .filter((key) => key !== 'fontFamily')\n            .map((key) => {\n                const name = key.replace(/([A-Z])/g, '-$1').toLowerCase();\n                let value = theme[key as keyof typeof theme];\n                if (!isNaN(Number(value))) {\n                    value = value + 'px';\n                }\n                return `--${name}:${value};`;\n            })\n            .join('\\n');\n\n        if (themeType === 'dark') {\n            return `.particle-auth-core-shadow-root.dark{\n                    ${styleContent}\n                }`;\n        }\n\n        return `.particle-auth-core-shadow-root{\n            ${styleContent}\n        }`;\n    }, [modalOptions.themeType, modalOptions.customStyle]);\n\n    useEffect(() => {\n        setModalOptions({\n            ...defaultData.modalOptions,\n            ...props.options,\n            promptSettingConfig: {\n                ...defaultData.modalOptions.promptSettingConfig,\n                ...props.options.promptSettingConfig,\n            },\n            customStyle: {\n                ...defaultData.modalOptions.customStyle,\n                ...props.options.customStyle,\n            },\n        });\n    }, [props.options, setModalOptions]);\n\n    useEffect(() => {\n        // \u5F39\u51FA\u7A97\u53E3\u540E \u9501\u5B9Abody \u6EDA\u52A8\n        if (!document.querySelector('.particle-auth-core-body-style')) {\n            const style = document.createElement('style');\n            style.classList.add('particle-auth-core-body-style');\n            const styleContent = `.particle-modal-lock {\n                overflow: hidden !important;\n            }`;\n            style.innerHTML = styleContent;\n            document.head.appendChild(style);\n        }\n\n        if (authCoreModal.particleModalVisible) {\n            document.body.classList.add('particle-modal-lock');\n            const rootBody = authCoreModal.rootModalContainer?.querySelector(\n                '.root-particle-modal-container .ant-drawer-body,.root-particle-modal-container .ant-modal-body'\n            ) as HTMLDivElement;\n            setAuthCoreModal({\n                rootBody,\n            });\n        } else {\n            // \u5173\u95EDrootModal\u5F39\u7A97\u540E\uFF0C\u5EF6\u65F6\u6E05\u7A7A\u8DEF\u7531\n            setTimeout(() => {\n                setCustomRouter({\n                    path: '/',\n                    history: [],\n                });\n            }, 100);\n            document.body.classList.remove('particle-modal-lock');\n        }\n    }, [authCoreModal.particleModalVisible, authCoreModal.rootModalContainer]);\n\n    const bodySze = useSize(isServer() ? null : document.body);\n\n    useEffect(() => {\n        // \u8BBE\u7F6EviewType \u4E3A\u5168\u5C40\u53D8\u91CF desktop | mobile\n        let viewType: ViewType = 'mobile';\n        if (document.body.clientWidth >= 600) {\n            viewType = 'desktop';\n        }\n        setAuthCoreModal({\n            viewType,\n        });\n    }, [bodySze]);\n\n    useEffect(() => {\n        if (customRouter?.path && customRouter?.path != '/') {\n            // \u8DEF\u7531 path \u4E0D\u4E3A / \u65F6\uFF0C\u6253\u5F00rootModal\u5F39\u7A97\n            setAuthCoreModal({\n                particleModalVisible: true,\n            });\n        }\n    }, [customRouter?.path]);\n\n    useEffect(() => {\n        // \u8BBE\u7F6E\u6A21\u6001\u6846\u7684\u5BBD\u5EA6\u548C\u9AD8\u5EA6\uFF0C\u54CD\u5E94\u79FB\u52A8\u7AEF\u89C6\u56FE\n        if (rootRef.current) {\n            const minWidth = 300;\n            const minHeight = 500;\n            let modalWidth = Math.max(minWidth, Number(modalOptions.customStyle?.modalWidth));\n            let modalHeight = Math.max(minHeight, Number(modalOptions.customStyle?.modalHeight));\n\n            if (authCoreModal.viewType == 'mobile') {\n                modalWidth = document.body.clientWidth;\n                modalHeight = document.body.clientHeight * 0.86;\n            }\n            const vm = modalWidth / 100;\n            rootRef.current.style.setProperty('--vw', vm + 'px');\n            rootRef.current.style.setProperty('--doc-height', modalHeight + 'px');\n            rootRef.current.style.setProperty('--doc-width', modalWidth + 'px');\n        }\n    }, [\n        rootRef.current,\n        authCoreModal.viewType,\n        modalOptions.customStyle?.modalWidth,\n        modalOptions.customStyle?.modalHeight,\n    ]);\n\n    useEffect(() => {\n        setTimeout(() => {\n            i18n.changeLanguage(modalOptions.language || 'en');\n        });\n    }, [modalOptions.language]);\n\n    useEffect(() => {\n        const onMasterPasswordChange = () => {\n            customNavigate(AuthPage.MasterPasswordVerify);\n        };\n        window?.particleAuth?.on(AuthCoreEvent.MasterPasswordChanged, onMasterPasswordChange);\n        return () => {\n            window?.particleAuth?.off(AuthCoreEvent.MasterPasswordChanged, onMasterPasswordChange);\n        };\n    }, [customRouter.history, customNavigate]);\n\n    useEffect(() => {\n        i18nInit(modalOptions.language || 'en');\n\n        const userInfoChanged = (userInfo: UserInfo) => {\n            setUserInfo(userInfo);\n        };\n        const onDisconnect = (error?: Error) => {\n            setUserInfo(undefined);\n            if (events.listenerCount(AuthCoreModalEvent.SignResponse) > 0) {\n                // \u5982\u679C\u6709\u76D1\u542CsignResponse\u4E8B\u4EF6\uFF0C\u8BF4\u660E\u662F\u5728\u7B7E\u540D\u4E2D\u65AD\uFF0C\u9700\u8981\u89E6\u53D1signResponse\u4E8B\u4EF6\n                events.emit(AuthCoreModalEvent.SignResponse, {\n                    error: error || AuthError.notLogin(),\n                });\n            }\n            setAuthCoreModal({\n                particleModalVisible: false,\n            });\n        };\n\n        window?.particleAuth?.on(AuthCoreEvent.UserInfoChanged, userInfoChanged);\n        window?.particleAuth?.on(AuthCoreEvent.ParticleAuthDisconnect, onDisconnect);\n        return () => {\n            window?.particleAuth?.off(AuthCoreEvent.UserInfoChanged, userInfoChanged);\n            window?.particleAuth?.off(AuthCoreEvent.ParticleAuthDisconnect, onDisconnect);\n        };\n    }, []);\n\n    if (!initParticleAuthRef.current) {\n        // authCore \u521D\u59CB\u5316\n        particleAuth.init({\n            projectId: modalOptions.projectId || props.options.projectId,\n            clientKey: modalOptions.clientKey || props.options.clientKey,\n            appId: modalOptions.appId || props.options.appId,\n        });\n        const info = getUserInfo();\n        setUserInfo(info);\n        initParticleAuthRef.current = true;\n        sendAnalyticsActive('open', info);\n    }\n\n    useEffect(() => {\n        if (isConnected()) {\n            syncUserInfo().catch((e) => console.error('syncUserInfo', e));\n        }\n        loadStyles();\n    }, []);\n\n    if (!isServer()) {\n        // @ts-ignore\n        window.__getConnectCaptcha = getConnectCaptcha;\n        // @ts-ignore\n        window.__connect = connect;\n        // @ts-ignore\n        window.__getUserInfo = getUserInfo;\n        // @ts-ignore\n        window.__getPageHTML = getPageHTML;\n        // @ts-ignore\n        window.__navigate = customNavigate;\n    }\n\n    useEffect(() => {\n        console.log('\uD83D\uDE80 ~ AuthCoreContextProvider ~ connectionStatus:', connectionStatus);\n    }, [connectionStatus]);\n\n    const [socialConnectCallback, setSocialConnectCallback] = useState<SocialConnectCallback>();\n\n    return (\n        <GlobalContext.Provider\n            value={{\n                connectionStatus,\n                setConnectionStatus,\n                userInfo,\n                modalOptions,\n                setModalOptions,\n                showSelectSecurityAccount,\n                setWrongPassword,\n                setPaymentVerify,\n                showAccountTipModal,\n                setPaymentPassword,\n                loginSuccessRedirectToApp,\n                events,\n                authCoreModal,\n                setAuthCoreModal,\n                customRouter,\n                setCustomRouter,\n                customNavigate,\n                setLoginAuthorization,\n                authCoreModalClose,\n                socialConnectCallback,\n                setSocialConnectCallback,\n            }}\n        >\n            {props.children}\n\n            {isServer() ? (\n                <div></div>\n            ) : (\n                <root.div mode=\"closed\">\n                    <div\n                        className={`particle-auth-core-shadow-root ${modalOptions.themeType}`}\n                        data-path={customRouter?.path}\n                        ref={rootRef}\n                    >\n                        <style data-name=\"fontStyle\">{fontStyle}</style>\n                        {!!styles.styleList[0].styleContent &&\n                            styles.styleList.map((item: any, index: number) => {\n                                return (\n                                    <style data-name={item.name} data-index={index} key={index}>\n                                        {item.styleContent}\n                                    </style>\n                                );\n                            })}\n                        <style data-name=\"customTheme\">{customThemeStyle as unknown as string}</style>\n\n                        {authCoreModal.rootModalContainer && (\n                            <ParticleModal\n                                visible={authCoreModal.particleModalVisible}\n                                closable={authCoreModal.closable}\n                                onClose={() => {\n                                    authCoreModalClose();\n                                }}\n                                className=\"root-particle-modal-container\"\n                                modalProps={{\n                                    footer: null,\n                                    width: parseInt(modalOptions.customStyle?.modalWidth as unknown as string),\n                                    height: parseInt(modalOptions.customStyle?.modalHeight as unknown as string),\n                                    forceRender: true,\n                                    destroyOnClose: true,\n                                    style: {\n                                        maxWidth: modalOptions.customStyle?.modalWidth,\n                                    },\n                                    zIndex: modalOptions.customStyle?.zIndex || 99999,\n                                }}\n                                drawerProps={{\n                                    height: '86%',\n                                    closable: false,\n                                    forceRender: true,\n                                    destroyOnClose: true,\n                                    push: false,\n                                    zIndex: modalOptions.customStyle?.zIndex || 99999,\n                                }}\n                            >\n                                <CustomRouter\n                                    path={customRouter?.path}\n                                    state={customRouter?.state}\n                                    replace={customRouter?.replace}\n                                    children={customRouter?.children}\n                                />\n                            </ParticleModal>\n                        )}\n\n                        <React.Suspense>\n                            <IframeWalletPlugin />\n                            <SelectSecurityAccount visible={selectSecurityAccount} state={verifySecurityAccountState} />\n                            <AccountTipModal modal={accountTipModal} />\n                            <PaymentVerifyModal props={paymentVerify} />\n                            <WrongPasswordModal info={wrongPassword} />\n                        </React.Suspense>\n                        <AuthCoreModalContainer data-ref=\"rootModalContainer\" setAuthCoreModal={setAuthCoreModal} />\n                    </div>\n                </root.div>\n            )}\n        </GlobalContext.Provider>\n    );\n};\n\nexport const useAuthCoreModal = () => {\n    const { authCoreModal, setAuthCoreModal, authCoreModalClose } = useContext(GlobalContext);\n    return {\n        authCoreModalClose,\n        authCoreModal,\n        setAuthCoreModal,\n    };\n};\n\nexport const useCustomRouter = () => {\n    const { customRouter, setCustomRouter } = useContext(GlobalContext);\n    return {\n        customRouter,\n        setCustomRouter,\n    };\n};\n\nexport const useCustomNavigate = () => {\n    const { customNavigate } = useContext(GlobalContext);\n\n    return customNavigate;\n};\n\nexport const useParticleAuth = () => {\n    const context = useContext(GlobalContext);\n    if (!context.modalOptions) {\n        throw new Error('Auth Core hooks must used in AuthCoreContextProvider');\n    }\n    return context;\n};\n\nexport const useModalOptions = () => {\n    const { modalOptions, setModalOptions } = useContext(GlobalContext);\n    return {\n        modalOptions,\n        setModalOptions,\n    };\n};\n\nexport const useEvents = () => {\n    const { events } = useContext(GlobalContext);\n    return { events };\n};\n", "import { AuthCoreContextProvider } from './context';\n\nexport { getEVMPublicAddress } from './api/getPublicAddress';\nexport * from './api/model/bundle';\nexport * from './context/hooks';\nexport * from './context/types';\nexport * from './types';\nexport { isValidE164PhoneNumber, isValidEmail } from './utils';\nexport { AuthCoreContextProvider };\n", "export const currencyUnitValues = [\n    'USD',\n    'CNY',\n    'JPY',\n    'HKD',\n    'INR',\n    'KRW',\n    'usd',\n    'cny',\n    'jpy',\n    'hkd',\n    'inr',\n    'krw',\n] as const;\n\nexport type CurrencyUnit = (typeof currencyUnitValues)[number];\n"],
  "mappings": "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",
  "names": ["message", "loading_default", "init_loading", "React", "import_auth_core", "import_react", "AuthCoreModalEvent", "PromptSettingType", "import_auth_core", "import_react", "base64url", "import_auth_core", "import_react", "connect", "import_auth_core", "isNullish", "import_util", "import_auth_core", "import_max", "numbro", "BN", "ethjs", "isNullish", "import_util", "isTron", "import_util", "import_auth_core", "import_chains", "import_bignumber", "import_auth_core", "import_chains", "import_util", "import_auth_core", "import_chains", "message", "import_auth_core", "import_chains", "import_react", "connect", "_a", "chainId", "userInfo", "message", "import_react", "message", "import_auth_core", "import_chains", "import_react", "connect", "_a", "chainId", "userInfo", "message", "index_default", "import_auth_core", "import_base64url", "import_react", "init_index", "connect", "qs", "base64url", "React", "React", "import_react", "power_footer_default", "init_power_footer", "React", "MyComponent", "React", "MyComponent", "React", "MyComponent", "React", "MyComponent", "React", "MyComponent", "React", "MyComponent", "React", "MyComponent", "React", "MyComponent", "React", "MyComponent", "React", "MyComponent", "React", "MyComponent", "React", "MyComponent", "React", "init_master_password", "MyComponent", "React", "MyComponent", "React", "MyComponent", "React", "MyComponent", "React", "MyComponent", "React", "MyComponent", "React", "MyComponent", "React", "MyComponent", "React", "init_master_password", "import_react", "React", "Icon", "import_react", "React", "import_react", "message", "throttle", "_a", "React", "import_auth_core", "import_antd", "import_react", "captcha_input_default", "init_captcha_input", "React", "import_antd", "import_react", "import_react_i18next", "message", "language", "phoneValue", "React", "getUnicodeFlagIcon", "import_icons", "import_auth_core", "import_antd", "import_max", "import_react", "import_react_i18next", "import_auth_core", "import_react", "init_facebook_icon", "init_google_icon", "init_passkeys_icon", "init_twitter_icon", "facebook_icon_default", "google_icon_default", "twitter_icon_default", "passkeys_icon_default", "items", "React", "login_default", "_a", "_b", "_c", "_d", "_e", "result", "React", "captcha_input_default", "loginType", "power_footer_default", "import_icons", "import_auth_core", "import_antd", "import_react", "import_react_i18next", "init_login", "init_power_footer", "init_captcha_input", "import_react", "header_default", "init_header", "React", "import_icons", "import_react", "circle_close_default", "init_circle_close", "React", "Icon", "import_antd", "import_react", "import_react_i18next", "bindSecurityAccountPrompt_default", "init_bindSecurityAccountPrompt", "init_circle_close", "React", "circle_close_default", "security_default", "import_auth_core", "import_react", "import_react_i18next", "init_security", "init_facebook_icon", "init_google_icon", "init_twitter_icon", "init_header", "init_power_footer", "init_bindSecurityAccountPrompt", "setPaymentPassword", "message", "hasMasterPassword", "checkHasMasterPassword", "_a", "facebook_icon_default", "google_icon_default", "twitter_icon_default", "_b", "_c", "_d", "_e", "React", "header_default", "power_footer_default", "bindSecurityAccountPrompt_default", "loginAccount_default", "import_auth_core", "import_ahooks", "import_max", "import_react", "import_react_i18next", "init_loginAccount", "init_header", "init_power_footer", "init_facebook_icon", "init_google_icon", "init_twitter_icon", "google_icon_default", "facebook_icon_default", "twitter_icon_default", "message", "React", "header_default", "power_footer_default", "deviceList_default", "import_auth_core", "import_ahooks", "import_antd", "import_react", "import_react_i18next", "init_deviceList", "init_header", "init_power_footer", "dayjs", "React", "header_default", "power_footer_default", "deviceDetails_default", "import_auth_core", "import_antd", "import_react", "import_react_i18next", "DeviceList", "init_deviceDetails", "init_header", "init_power_footer", "message", "React", "header_default", "power_footer_default", "import_auth_core", "import_chains", "import_icons", "import_react", "React", "Icon", "message", "import_auth_core", "import_antd", "import_auth_core", "import_react", "setPaymentPassword", "import_auth_core", "import_bignumber", "ethereumUtils", "import_util", "import_auth_core", "import_chains", "import_ahooks", "import_react", "message", "gasFeeDisplay", "ethereumUtils", "totalAmountDisplay", "fetchSuggestedGasFee", "fetchEstimateGas", "React", "import_antd", "import_react", "import_react_i18next", "React", "import_antd", "import_react", "import_react_i18next", "riskTypography_default", "init_riskTypography", "React", "import_icons", "import_react", "import_react_i18next", "riskReminder_default", "init_riskReminder", "init_riskTypography", "React", "riskTypography_default", "import_react", "React", "import_react", "React", "React", "import_auth_core", "import_ahooks", "import_react", "import_react_i18next", "React", "import_react", "import_react_i18next", "import_auth_core", "import_antd", "import_bignumber", "import_dayjs", "import_numbro", "import_react", "import_react_i18next", "trimDecimals", "init_circle_close", "_a", "_b", "_c", "_d", "tokenIcon", "tokenSymbol", "tokenDecimals", "tokenPrice", "_e", "_f", "_g", "_h", "_i", "_j", "amountChange", "numbro", "isTron", "_k", "_l", "_m", "_n", "dayjs", "React", "isNullish", "circle_close_default", "import_antd", "import_react", "particle_drawer_default", "init_particle_drawer", "init_circle_close", "_a", "_b", "React", "circle_close_default", "ethereumUtils", "maxFee", "React", "particle_drawer_default", "power_footer_default", "import_icons", "import_util", "import_auth_core", "import_antd", "import_bignumber", "import_react", "import_react_i18next", "evm_gas_default", "init_evm_gas", "init_particle_drawer", "init_power_footer", "import_antd", "import_react", "menu_default", "init_menu", "md5", "cloneDeep", "React", "message", "setPaymentPassword", "_a", "renderPageType", "isTron", "BN", "_b", "ethereumUtils", "jt", "React", "CopyToClipboard", "signMessage", "address", "menu_default", "power_footer_default", "riskReminder_default", "circle_close_default", "riskTypography_default", "evm_gas_default", "loading_default", "import_util", "import_analytics", "import_auth_core", "import_antd", "import_bignumber", "import_bn", "import_react", "import_react_i18next", "init_circle_close", "init_loading", "init_power_footer", "init_riskReminder", "init_riskTypography", "init_evm_gas", "init_menu", "React", "import_auth_core", "import_react", "info_sign_default", "setPaymentPassword", "message", "bs58", "React", "_a", "menu_default", "CopyToClipboard", "power_footer_default", "import_analytics", "import_auth_core", "import_antd", "import_react", "import_react_copy_to_clipboard", "import_react_i18next", "init_info_sign", "init_power_footer", "init_menu", "import_auth_core", "import_ahooks", "import_antd", "import_throttle", "import_qs", "import_react", "import_react_i18next", "CaptchaInput", "captcha_input_default", "init_captcha_input", "init_power_footer", "message", "qs", "throttle", "_a", "React", "power_footer_default", "accountBind_default", "import_icons", "import_auth_core", "import_ahooks", "import_antd", "import_unicode", "import_react", "import_react_i18next", "init_accountBind", "init_power_footer", "init_captcha_input", "message", "React", "captcha_input_default", "getUnicodeFlagIcon", "power_footer_default", "accountVerify_default", "import_auth_core", "import_ahooks", "import_antd", "import_base64url", "import_throttle", "import_react", "import_react_i18next", "init_accountVerify", "init_power_footer", "init_loginAccount", "message", "_a", "code", "throttle", "verifyToken", "base64url", "React", "power_footer_default", "import_react", "init_eyeIcon", "React", "import_antd", "import_react", "input_password_default", "init_input_password", "init_eyeIcon", "React", "isNullish", "import_ahooks", "import_antd", "import_react", "import_react_i18next", "setMasterPasswordSuccess_default", "init_setMasterPasswordSuccess", "init_power_footer", "React", "power_footer_default", "import_antd", "import_lottie_react", "import_react", "import_react_i18next", "init_power_footer", "React", "power_footer_default", "setMasterPassword_default", "import_analytics", "import_auth_core", "import_ahooks", "import_antd", "import_react", "import_react_i18next", "init_setMasterPassword", "init_input_password", "init_power_footer", "init_setMasterPasswordSuccess", "message", "disconnect", "_a", "React", "input_password_default", "power_footer_default", "setMasterPasswordSuccess_default", "masterPasswordDescription_default", "import_antd", "import_react", "import_react_i18next", "init_masterPasswordDescription", "init_header", "init_power_footer", "React", "header_default", "power_footer_default", "masterPasswordVerify_default", "import_analytics", "import_auth_core", "import_ahooks", "import_antd", "import_react", "import_react_i18next", "init_masterPasswordVerify", "init_input_password", "init_power_footer", "React", "message", "verifyMasterPassword", "input_password_default", "power_footer_default", "masterPasswordModal_default", "import_antd", "import_react", "import_react_i18next", "init_masterPasswordModal", "init_power_footer", "React", "power_footer_default", "masterPasswordChange_default", "import_auth_core", "import_ahooks", "import_antd", "import_react", "import_react_i18next", "init_masterPasswordChange", "init_header", "init_input_password", "init_power_footer", "message", "React", "header_default", "input_password_default", "power_footer_default", "import_icons", "import_react", "import_react_i18next", "ParticleKeywords_default", "init_ParticleKeywords", "init_power_footer", "React", "power_footer_default", "setPaymentPassword_default", "import_ahooks", "import_antd", "import_react", "import_react_i18next", "import_auth_core", "init_setPaymentPassword", "init_ParticleKeywords", "password", "React", "ParticleKeywords_default", "changePaymentPassword_default", "import_ahooks", "import_react", "import_react_i18next", "import_auth_core", "init_changePaymentPassword", "init_ParticleKeywords", "init_header", "React", "header_default", "ParticleKeywords_default", "import_icons", "import_ahooks", "import_antd", "import_unicode", "import_max", "import_react", "import_react_i18next", "phoneInputItem_default", "init_phoneInputItem", "React", "getUnicodeFlagIcon", "loginAccountBind_default", "import_auth_core", "import_ahooks", "import_antd", "import_max", "import_react", "import_react_i18next", "init_loginAccountBind", "init_header", "init_phoneInputItem", "init_power_footer", "init_loginAccount", "message", "bindLoginAccount", "React", "header_default", "phoneInputItem_default", "power_footer_default", "loginAccountBindLoading_default", "import_auth_core", "import_antd", "import_react", "import_react_i18next", "init_loginAccountBindLoading", "init_header", "init_loginAccount", "message", "item", "React", "header_default", "import_auth_core", "import_qs", "import_react", "init_loading", "React", "path", "queryString", "qs", "Comp", "loading_default", "import_antd", "import_react", "particle_modal_default", "init_particle_modal", "init_particle_drawer", "_a", "React", "particle_drawer_default", "import_react", "React", "import_react_i18next", "i18n", "import_auth_core", "import_bs58", "uuidv4", "message", "particleAuth", "base58", "import_auth_core", "import_wallet", "import_react", "_a", "_b", "React", "accountTipModal_default", "import_antd", "import_react", "import_react_i18next", "init_accountTipModal", "init_circle_close", "setPaymentPassword", "React", "circle_close_default", "paymentVerifyModal_default", "import_auth_core", "import_ahooks", "import_react", "import_react_i18next", "init_paymentVerifyModal", "init_particle_drawer", "init_ParticleKeywords", "React", "particle_drawer_default", "ParticleKeywords_default", "wrongPasswordModal_default", "import_ahooks", "import_antd", "import_react", "import_react_i18next", "init_wrongPasswordModal", "init_circle_close", "_a", "h", "React", "circle_close_default", "selectSecurityAccount_default", "import_auth_core", "import_antd", "import_react", "import_react_i18next", "init_selectSecurityAccount", "init_particle_drawer", "React", "particle_drawer_default", "_a", "import_auth_core", "import_ahooks", "import_bs58", "import_react", "IframeWalletPlugin", "AccountTipModal", "PaymentVerifyModal", "WrongPasswordModal", "SelectSecurityAccount", "defaultData", "init_particle_modal", "React", "props", "_a", "styles", "setPaymentPassword", "_b", "_c", "_d", "_e", "_f", "_g", "message", "base58", "userInfo", "root", "particle_modal_default"]
}
